/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeAddonProviderAPI struct for WannabeAddonProviderAPI
type WannabeAddonProviderAPI struct {
	ConfigVars *[]string                   `json:"config_vars,omitempty"`
	Password   *string                     `json:"password,omitempty"`
	SsoSalt    *string                     `json:"sso_salt,omitempty"`
	Regions    *[]string                   `json:"regions,omitempty"`
	Production *WannabeAddonProviderAPIUrl `json:"production,omitempty"`
	Test       *WannabeAddonProviderAPIUrl `json:"test,omitempty"`
}

// NewWannabeAddonProviderAPI instantiates a new WannabeAddonProviderAPI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeAddonProviderAPI() *WannabeAddonProviderAPI {
	this := WannabeAddonProviderAPI{}
	return &this
}

// NewWannabeAddonProviderAPIWithDefaults instantiates a new WannabeAddonProviderAPI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeAddonProviderAPIWithDefaults() *WannabeAddonProviderAPI {
	this := WannabeAddonProviderAPI{}
	return &this
}

// GetConfigVars returns the ConfigVars field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPI) GetConfigVars() []string {
	if o == nil || o.ConfigVars == nil {
		var ret []string
		return ret
	}
	return *o.ConfigVars
}

// GetConfigVarsOk returns a tuple with the ConfigVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPI) GetConfigVarsOk() (*[]string, bool) {
	if o == nil || o.ConfigVars == nil {
		return nil, false
	}
	return o.ConfigVars, true
}

// HasConfigVars returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPI) HasConfigVars() bool {
	if o != nil && o.ConfigVars != nil {
		return true
	}

	return false
}

// SetConfigVars gets a reference to the given []string and assigns it to the ConfigVars field.
func (o *WannabeAddonProviderAPI) SetConfigVars(v []string) {
	o.ConfigVars = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPI) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPI) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPI) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *WannabeAddonProviderAPI) SetPassword(v string) {
	o.Password = &v
}

// GetSsoSalt returns the SsoSalt field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPI) GetSsoSalt() string {
	if o == nil || o.SsoSalt == nil {
		var ret string
		return ret
	}
	return *o.SsoSalt
}

// GetSsoSaltOk returns a tuple with the SsoSalt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPI) GetSsoSaltOk() (*string, bool) {
	if o == nil || o.SsoSalt == nil {
		return nil, false
	}
	return o.SsoSalt, true
}

// HasSsoSalt returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPI) HasSsoSalt() bool {
	if o != nil && o.SsoSalt != nil {
		return true
	}

	return false
}

// SetSsoSalt gets a reference to the given string and assigns it to the SsoSalt field.
func (o *WannabeAddonProviderAPI) SetSsoSalt(v string) {
	o.SsoSalt = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPI) GetRegions() []string {
	if o == nil || o.Regions == nil {
		var ret []string
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPI) GetRegionsOk() (*[]string, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPI) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []string and assigns it to the Regions field.
func (o *WannabeAddonProviderAPI) SetRegions(v []string) {
	o.Regions = &v
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPI) GetProduction() WannabeAddonProviderAPIUrl {
	if o == nil || o.Production == nil {
		var ret WannabeAddonProviderAPIUrl
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPI) GetProductionOk() (*WannabeAddonProviderAPIUrl, bool) {
	if o == nil || o.Production == nil {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPI) HasProduction() bool {
	if o != nil && o.Production != nil {
		return true
	}

	return false
}

// SetProduction gets a reference to the given WannabeAddonProviderAPIUrl and assigns it to the Production field.
func (o *WannabeAddonProviderAPI) SetProduction(v WannabeAddonProviderAPIUrl) {
	o.Production = &v
}

// GetTest returns the Test field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPI) GetTest() WannabeAddonProviderAPIUrl {
	if o == nil || o.Test == nil {
		var ret WannabeAddonProviderAPIUrl
		return ret
	}
	return *o.Test
}

// GetTestOk returns a tuple with the Test field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPI) GetTestOk() (*WannabeAddonProviderAPIUrl, bool) {
	if o == nil || o.Test == nil {
		return nil, false
	}
	return o.Test, true
}

// HasTest returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPI) HasTest() bool {
	if o != nil && o.Test != nil {
		return true
	}

	return false
}

// SetTest gets a reference to the given WannabeAddonProviderAPIUrl and assigns it to the Test field.
func (o *WannabeAddonProviderAPI) SetTest(v WannabeAddonProviderAPIUrl) {
	o.Test = &v
}

func (o WannabeAddonProviderAPI) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigVars != nil {
		toSerialize["config_vars"] = o.ConfigVars
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.SsoSalt != nil {
		toSerialize["sso_salt"] = o.SsoSalt
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	if o.Production != nil {
		toSerialize["production"] = o.Production
	}
	if o.Test != nil {
		toSerialize["test"] = o.Test
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeAddonProviderAPI struct {
	value *WannabeAddonProviderAPI
	isSet bool
}

func (v NullableWannabeAddonProviderAPI) Get() *WannabeAddonProviderAPI {
	return v.value
}

func (v *NullableWannabeAddonProviderAPI) Set(val *WannabeAddonProviderAPI) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeAddonProviderAPI) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeAddonProviderAPI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeAddonProviderAPI(val *WannabeAddonProviderAPI) *NullableWannabeAddonProviderAPI {
	return &NullableWannabeAddonProviderAPI{value: val, isSet: true}
}

func (v NullableWannabeAddonProviderAPI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeAddonProviderAPI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
