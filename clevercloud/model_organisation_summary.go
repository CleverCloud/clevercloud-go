/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// OrganisationSummary struct for OrganisationSummary
type OrganisationSummary struct {
	Id               *string                  `json:"id,omitempty"`
	Name             *string                  `json:"name,omitempty"`
	Avatar           *string                  `json:"avatar,omitempty"`
	Applications     *[]ApplicationSummary    `json:"applications,omitempty"`
	Addons           *[]AddonSummary          `json:"addons,omitempty"`
	Consumers        *[]OAuth1ConsumerSummary `json:"consumers,omitempty"`
	Role             *string                  `json:"role,omitempty"`
	Providers        *[]ProviderSummary       `json:"providers,omitempty"`
	VatState         *string                  `json:"vatState,omitempty"`
	CanPay           *bool                    `json:"canPay,omitempty"`
	CanSEPA          *bool                    `json:"canSEPA,omitempty"`
	CleverEnterprise *bool                    `json:"cleverEnterprise,omitempty"`
	EmergencyNumber  *string                  `json:"emergencyNumber,omitempty"`
}

// NewOrganisationSummary instantiates a new OrganisationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganisationSummary() *OrganisationSummary {
	this := OrganisationSummary{}
	return &this
}

// NewOrganisationSummaryWithDefaults instantiates a new OrganisationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganisationSummaryWithDefaults() *OrganisationSummary {
	this := OrganisationSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganisationSummary) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganisationSummary) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganisationSummary) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganisationSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganisationSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganisationSummary) SetName(v string) {
	o.Name = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *OrganisationSummary) GetAvatar() string {
	if o == nil || o.Avatar == nil {
		var ret string
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetAvatarOk() (*string, bool) {
	if o == nil || o.Avatar == nil {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *OrganisationSummary) HasAvatar() bool {
	if o != nil && o.Avatar != nil {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *OrganisationSummary) SetAvatar(v string) {
	o.Avatar = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *OrganisationSummary) GetApplications() []ApplicationSummary {
	if o == nil || o.Applications == nil {
		var ret []ApplicationSummary
		return ret
	}
	return *o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetApplicationsOk() (*[]ApplicationSummary, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *OrganisationSummary) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []ApplicationSummary and assigns it to the Applications field.
func (o *OrganisationSummary) SetApplications(v []ApplicationSummary) {
	o.Applications = &v
}

// GetAddons returns the Addons field value if set, zero value otherwise.
func (o *OrganisationSummary) GetAddons() []AddonSummary {
	if o == nil || o.Addons == nil {
		var ret []AddonSummary
		return ret
	}
	return *o.Addons
}

// GetAddonsOk returns a tuple with the Addons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetAddonsOk() (*[]AddonSummary, bool) {
	if o == nil || o.Addons == nil {
		return nil, false
	}
	return o.Addons, true
}

// HasAddons returns a boolean if a field has been set.
func (o *OrganisationSummary) HasAddons() bool {
	if o != nil && o.Addons != nil {
		return true
	}

	return false
}

// SetAddons gets a reference to the given []AddonSummary and assigns it to the Addons field.
func (o *OrganisationSummary) SetAddons(v []AddonSummary) {
	o.Addons = &v
}

// GetConsumers returns the Consumers field value if set, zero value otherwise.
func (o *OrganisationSummary) GetConsumers() []OAuth1ConsumerSummary {
	if o == nil || o.Consumers == nil {
		var ret []OAuth1ConsumerSummary
		return ret
	}
	return *o.Consumers
}

// GetConsumersOk returns a tuple with the Consumers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetConsumersOk() (*[]OAuth1ConsumerSummary, bool) {
	if o == nil || o.Consumers == nil {
		return nil, false
	}
	return o.Consumers, true
}

// HasConsumers returns a boolean if a field has been set.
func (o *OrganisationSummary) HasConsumers() bool {
	if o != nil && o.Consumers != nil {
		return true
	}

	return false
}

// SetConsumers gets a reference to the given []OAuth1ConsumerSummary and assigns it to the Consumers field.
func (o *OrganisationSummary) SetConsumers(v []OAuth1ConsumerSummary) {
	o.Consumers = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrganisationSummary) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrganisationSummary) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrganisationSummary) SetRole(v string) {
	o.Role = &v
}

// GetProviders returns the Providers field value if set, zero value otherwise.
func (o *OrganisationSummary) GetProviders() []ProviderSummary {
	if o == nil || o.Providers == nil {
		var ret []ProviderSummary
		return ret
	}
	return *o.Providers
}

// GetProvidersOk returns a tuple with the Providers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetProvidersOk() (*[]ProviderSummary, bool) {
	if o == nil || o.Providers == nil {
		return nil, false
	}
	return o.Providers, true
}

// HasProviders returns a boolean if a field has been set.
func (o *OrganisationSummary) HasProviders() bool {
	if o != nil && o.Providers != nil {
		return true
	}

	return false
}

// SetProviders gets a reference to the given []ProviderSummary and assigns it to the Providers field.
func (o *OrganisationSummary) SetProviders(v []ProviderSummary) {
	o.Providers = &v
}

// GetVatState returns the VatState field value if set, zero value otherwise.
func (o *OrganisationSummary) GetVatState() string {
	if o == nil || o.VatState == nil {
		var ret string
		return ret
	}
	return *o.VatState
}

// GetVatStateOk returns a tuple with the VatState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetVatStateOk() (*string, bool) {
	if o == nil || o.VatState == nil {
		return nil, false
	}
	return o.VatState, true
}

// HasVatState returns a boolean if a field has been set.
func (o *OrganisationSummary) HasVatState() bool {
	if o != nil && o.VatState != nil {
		return true
	}

	return false
}

// SetVatState gets a reference to the given string and assigns it to the VatState field.
func (o *OrganisationSummary) SetVatState(v string) {
	o.VatState = &v
}

// GetCanPay returns the CanPay field value if set, zero value otherwise.
func (o *OrganisationSummary) GetCanPay() bool {
	if o == nil || o.CanPay == nil {
		var ret bool
		return ret
	}
	return *o.CanPay
}

// GetCanPayOk returns a tuple with the CanPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetCanPayOk() (*bool, bool) {
	if o == nil || o.CanPay == nil {
		return nil, false
	}
	return o.CanPay, true
}

// HasCanPay returns a boolean if a field has been set.
func (o *OrganisationSummary) HasCanPay() bool {
	if o != nil && o.CanPay != nil {
		return true
	}

	return false
}

// SetCanPay gets a reference to the given bool and assigns it to the CanPay field.
func (o *OrganisationSummary) SetCanPay(v bool) {
	o.CanPay = &v
}

// GetCanSEPA returns the CanSEPA field value if set, zero value otherwise.
func (o *OrganisationSummary) GetCanSEPA() bool {
	if o == nil || o.CanSEPA == nil {
		var ret bool
		return ret
	}
	return *o.CanSEPA
}

// GetCanSEPAOk returns a tuple with the CanSEPA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetCanSEPAOk() (*bool, bool) {
	if o == nil || o.CanSEPA == nil {
		return nil, false
	}
	return o.CanSEPA, true
}

// HasCanSEPA returns a boolean if a field has been set.
func (o *OrganisationSummary) HasCanSEPA() bool {
	if o != nil && o.CanSEPA != nil {
		return true
	}

	return false
}

// SetCanSEPA gets a reference to the given bool and assigns it to the CanSEPA field.
func (o *OrganisationSummary) SetCanSEPA(v bool) {
	o.CanSEPA = &v
}

// GetCleverEnterprise returns the CleverEnterprise field value if set, zero value otherwise.
func (o *OrganisationSummary) GetCleverEnterprise() bool {
	if o == nil || o.CleverEnterprise == nil {
		var ret bool
		return ret
	}
	return *o.CleverEnterprise
}

// GetCleverEnterpriseOk returns a tuple with the CleverEnterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetCleverEnterpriseOk() (*bool, bool) {
	if o == nil || o.CleverEnterprise == nil {
		return nil, false
	}
	return o.CleverEnterprise, true
}

// HasCleverEnterprise returns a boolean if a field has been set.
func (o *OrganisationSummary) HasCleverEnterprise() bool {
	if o != nil && o.CleverEnterprise != nil {
		return true
	}

	return false
}

// SetCleverEnterprise gets a reference to the given bool and assigns it to the CleverEnterprise field.
func (o *OrganisationSummary) SetCleverEnterprise(v bool) {
	o.CleverEnterprise = &v
}

// GetEmergencyNumber returns the EmergencyNumber field value if set, zero value otherwise.
func (o *OrganisationSummary) GetEmergencyNumber() string {
	if o == nil || o.EmergencyNumber == nil {
		var ret string
		return ret
	}
	return *o.EmergencyNumber
}

// GetEmergencyNumberOk returns a tuple with the EmergencyNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationSummary) GetEmergencyNumberOk() (*string, bool) {
	if o == nil || o.EmergencyNumber == nil {
		return nil, false
	}
	return o.EmergencyNumber, true
}

// HasEmergencyNumber returns a boolean if a field has been set.
func (o *OrganisationSummary) HasEmergencyNumber() bool {
	if o != nil && o.EmergencyNumber != nil {
		return true
	}

	return false
}

// SetEmergencyNumber gets a reference to the given string and assigns it to the EmergencyNumber field.
func (o *OrganisationSummary) SetEmergencyNumber(v string) {
	o.EmergencyNumber = &v
}

func (o OrganisationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Avatar != nil {
		toSerialize["avatar"] = o.Avatar
	}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	if o.Addons != nil {
		toSerialize["addons"] = o.Addons
	}
	if o.Consumers != nil {
		toSerialize["consumers"] = o.Consumers
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Providers != nil {
		toSerialize["providers"] = o.Providers
	}
	if o.VatState != nil {
		toSerialize["vatState"] = o.VatState
	}
	if o.CanPay != nil {
		toSerialize["canPay"] = o.CanPay
	}
	if o.CanSEPA != nil {
		toSerialize["canSEPA"] = o.CanSEPA
	}
	if o.CleverEnterprise != nil {
		toSerialize["cleverEnterprise"] = o.CleverEnterprise
	}
	if o.EmergencyNumber != nil {
		toSerialize["emergencyNumber"] = o.EmergencyNumber
	}
	return json.Marshal(toSerialize)
}

type NullableOrganisationSummary struct {
	value *OrganisationSummary
	isSet bool
}

func (v NullableOrganisationSummary) Get() *OrganisationSummary {
	return v.value
}

func (v *NullableOrganisationSummary) Set(val *OrganisationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationSummary(val *OrganisationSummary) *NullableOrganisationSummary {
	return &NullableOrganisationSummary{value: val, isSet: true}
}

func (v NullableOrganisationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
