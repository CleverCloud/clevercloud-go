/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeOrganisation struct for WannabeOrganisation
type WannabeOrganisation struct {
	Name             *string `json:"name,omitempty"`
	Description      *string `json:"description,omitempty"`
	Address          *string `json:"address,omitempty"`
	City             *string `json:"city,omitempty"`
	Zipcode          *string `json:"zipcode,omitempty"`
	Country          *string `json:"country,omitempty"`
	Company          *string `json:"company,omitempty"`
	CustomerFullName *string `json:"customerFullName,omitempty"`
	VAT              *string `json:"VAT,omitempty"`
	BillingEmail     *string `json:"billingEmail,omitempty"`
}

// NewWannabeOrganisation instantiates a new WannabeOrganisation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeOrganisation() *WannabeOrganisation {
	this := WannabeOrganisation{}
	return &this
}

// NewWannabeOrganisationWithDefaults instantiates a new WannabeOrganisation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeOrganisationWithDefaults() *WannabeOrganisation {
	this := WannabeOrganisation{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WannabeOrganisation) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WannabeOrganisation) SetDescription(v string) {
	o.Description = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *WannabeOrganisation) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *WannabeOrganisation) SetCity(v string) {
	o.City = &v
}

// GetZipcode returns the Zipcode field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetZipcode() string {
	if o == nil || o.Zipcode == nil {
		var ret string
		return ret
	}
	return *o.Zipcode
}

// GetZipcodeOk returns a tuple with the Zipcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetZipcodeOk() (*string, bool) {
	if o == nil || o.Zipcode == nil {
		return nil, false
	}
	return o.Zipcode, true
}

// HasZipcode returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasZipcode() bool {
	if o != nil && o.Zipcode != nil {
		return true
	}

	return false
}

// SetZipcode gets a reference to the given string and assigns it to the Zipcode field.
func (o *WannabeOrganisation) SetZipcode(v string) {
	o.Zipcode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *WannabeOrganisation) SetCountry(v string) {
	o.Country = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *WannabeOrganisation) SetCompany(v string) {
	o.Company = &v
}

// GetCustomerFullName returns the CustomerFullName field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetCustomerFullName() string {
	if o == nil || o.CustomerFullName == nil {
		var ret string
		return ret
	}
	return *o.CustomerFullName
}

// GetCustomerFullNameOk returns a tuple with the CustomerFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetCustomerFullNameOk() (*string, bool) {
	if o == nil || o.CustomerFullName == nil {
		return nil, false
	}
	return o.CustomerFullName, true
}

// HasCustomerFullName returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasCustomerFullName() bool {
	if o != nil && o.CustomerFullName != nil {
		return true
	}

	return false
}

// SetCustomerFullName gets a reference to the given string and assigns it to the CustomerFullName field.
func (o *WannabeOrganisation) SetCustomerFullName(v string) {
	o.CustomerFullName = &v
}

// GetVAT returns the VAT field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetVAT() string {
	if o == nil || o.VAT == nil {
		var ret string
		return ret
	}
	return *o.VAT
}

// GetVATOk returns a tuple with the VAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetVATOk() (*string, bool) {
	if o == nil || o.VAT == nil {
		return nil, false
	}
	return o.VAT, true
}

// HasVAT returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasVAT() bool {
	if o != nil && o.VAT != nil {
		return true
	}

	return false
}

// SetVAT gets a reference to the given string and assigns it to the VAT field.
func (o *WannabeOrganisation) SetVAT(v string) {
	o.VAT = &v
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise.
func (o *WannabeOrganisation) GetBillingEmail() string {
	if o == nil || o.BillingEmail == nil {
		var ret string
		return ret
	}
	return *o.BillingEmail
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOrganisation) GetBillingEmailOk() (*string, bool) {
	if o == nil || o.BillingEmail == nil {
		return nil, false
	}
	return o.BillingEmail, true
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *WannabeOrganisation) HasBillingEmail() bool {
	if o != nil && o.BillingEmail != nil {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given string and assigns it to the BillingEmail field.
func (o *WannabeOrganisation) SetBillingEmail(v string) {
	o.BillingEmail = &v
}

func (o WannabeOrganisation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Zipcode != nil {
		toSerialize["zipcode"] = o.Zipcode
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.CustomerFullName != nil {
		toSerialize["customerFullName"] = o.CustomerFullName
	}
	if o.VAT != nil {
		toSerialize["VAT"] = o.VAT
	}
	if o.BillingEmail != nil {
		toSerialize["billingEmail"] = o.BillingEmail
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeOrganisation struct {
	value *WannabeOrganisation
	isSet bool
}

func (v NullableWannabeOrganisation) Get() *WannabeOrganisation {
	return v.value
}

func (v *NullableWannabeOrganisation) Set(val *WannabeOrganisation) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeOrganisation) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeOrganisation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeOrganisation(val *WannabeOrganisation) *NullableWannabeOrganisation {
	return &NullableWannabeOrganisation{value: val, isSet: true}
}

func (v NullableWannabeOrganisation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeOrganisation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
