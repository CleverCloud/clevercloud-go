/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeAuthorization struct for WannabeAuthorization
type WannabeAuthorization struct {
	Verb          *string `json:"verb,omitempty"`
	Uri           *string `json:"uri,omitempty"`
	Authorization *string `json:"authorization,omitempty"`
	Payload       *string `json:"payload,omitempty"`
	Nonce         *string `json:"nonce,omitempty"`
	Mac           *string `json:"mac,omitempty"`
}

// NewWannabeAuthorization instantiates a new WannabeAuthorization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeAuthorization() *WannabeAuthorization {
	this := WannabeAuthorization{}
	return &this
}

// NewWannabeAuthorizationWithDefaults instantiates a new WannabeAuthorization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeAuthorizationWithDefaults() *WannabeAuthorization {
	this := WannabeAuthorization{}
	return &this
}

// GetVerb returns the Verb field value if set, zero value otherwise.
func (o *WannabeAuthorization) GetVerb() string {
	if o == nil || o.Verb == nil {
		var ret string
		return ret
	}
	return *o.Verb
}

// GetVerbOk returns a tuple with the Verb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAuthorization) GetVerbOk() (*string, bool) {
	if o == nil || o.Verb == nil {
		return nil, false
	}
	return o.Verb, true
}

// HasVerb returns a boolean if a field has been set.
func (o *WannabeAuthorization) HasVerb() bool {
	if o != nil && o.Verb != nil {
		return true
	}

	return false
}

// SetVerb gets a reference to the given string and assigns it to the Verb field.
func (o *WannabeAuthorization) SetVerb(v string) {
	o.Verb = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *WannabeAuthorization) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAuthorization) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *WannabeAuthorization) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *WannabeAuthorization) SetUri(v string) {
	o.Uri = &v
}

// GetAuthorization returns the Authorization field value if set, zero value otherwise.
func (o *WannabeAuthorization) GetAuthorization() string {
	if o == nil || o.Authorization == nil {
		var ret string
		return ret
	}
	return *o.Authorization
}

// GetAuthorizationOk returns a tuple with the Authorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAuthorization) GetAuthorizationOk() (*string, bool) {
	if o == nil || o.Authorization == nil {
		return nil, false
	}
	return o.Authorization, true
}

// HasAuthorization returns a boolean if a field has been set.
func (o *WannabeAuthorization) HasAuthorization() bool {
	if o != nil && o.Authorization != nil {
		return true
	}

	return false
}

// SetAuthorization gets a reference to the given string and assigns it to the Authorization field.
func (o *WannabeAuthorization) SetAuthorization(v string) {
	o.Authorization = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *WannabeAuthorization) GetPayload() string {
	if o == nil || o.Payload == nil {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAuthorization) GetPayloadOk() (*string, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *WannabeAuthorization) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *WannabeAuthorization) SetPayload(v string) {
	o.Payload = &v
}

// GetNonce returns the Nonce field value if set, zero value otherwise.
func (o *WannabeAuthorization) GetNonce() string {
	if o == nil || o.Nonce == nil {
		var ret string
		return ret
	}
	return *o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAuthorization) GetNonceOk() (*string, bool) {
	if o == nil || o.Nonce == nil {
		return nil, false
	}
	return o.Nonce, true
}

// HasNonce returns a boolean if a field has been set.
func (o *WannabeAuthorization) HasNonce() bool {
	if o != nil && o.Nonce != nil {
		return true
	}

	return false
}

// SetNonce gets a reference to the given string and assigns it to the Nonce field.
func (o *WannabeAuthorization) SetNonce(v string) {
	o.Nonce = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *WannabeAuthorization) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAuthorization) GetMacOk() (*string, bool) {
	if o == nil || o.Mac == nil {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *WannabeAuthorization) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *WannabeAuthorization) SetMac(v string) {
	o.Mac = &v
}

func (o WannabeAuthorization) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Verb != nil {
		toSerialize["verb"] = o.Verb
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	if o.Authorization != nil {
		toSerialize["authorization"] = o.Authorization
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.Nonce != nil {
		toSerialize["nonce"] = o.Nonce
	}
	if o.Mac != nil {
		toSerialize["mac"] = o.Mac
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeAuthorization struct {
	value *WannabeAuthorization
	isSet bool
}

func (v NullableWannabeAuthorization) Get() *WannabeAuthorization {
	return v.value
}

func (v *NullableWannabeAuthorization) Set(val *WannabeAuthorization) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeAuthorization) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeAuthorization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeAuthorization(val *WannabeAuthorization) *NullableWannabeAuthorization {
	return &NullableWannabeAuthorization{value: val, isSet: true}
}

func (v NullableWannabeAuthorization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeAuthorization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
