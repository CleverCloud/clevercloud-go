/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeOauthApp struct for WannabeOauthApp
type WannabeOauthApp struct {
	Owner *string `json:"owner,omitempty"`
	Name  *string `json:"name,omitempty"`
}

// NewWannabeOauthApp instantiates a new WannabeOauthApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeOauthApp() *WannabeOauthApp {
	this := WannabeOauthApp{}
	return &this
}

// NewWannabeOauthAppWithDefaults instantiates a new WannabeOauthApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeOauthAppWithDefaults() *WannabeOauthApp {
	this := WannabeOauthApp{}
	return &this
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *WannabeOauthApp) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOauthApp) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *WannabeOauthApp) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *WannabeOauthApp) SetOwner(v string) {
	o.Owner = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WannabeOauthApp) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOauthApp) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WannabeOauthApp) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WannabeOauthApp) SetName(v string) {
	o.Name = &v
}

func (o WannabeOauthApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeOauthApp struct {
	value *WannabeOauthApp
	isSet bool
}

func (v NullableWannabeOauthApp) Get() *WannabeOauthApp {
	return v.value
}

func (v *NullableWannabeOauthApp) Set(val *WannabeOauthApp) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeOauthApp) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeOauthApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeOauthApp(val *WannabeOauthApp) *NullableWannabeOauthApp {
	return &NullableWannabeOauthApp{value: val, isSet: true}
}

func (v NullableWannabeOauthApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeOauthApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
