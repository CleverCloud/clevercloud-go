/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// BraintreeToken struct for BraintreeToken
type BraintreeToken struct {
	MerchantId *string `json:"merchantId,omitempty"`
	Token      *string `json:"token,omitempty"`
}

// NewBraintreeToken instantiates a new BraintreeToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBraintreeToken() *BraintreeToken {
	this := BraintreeToken{}
	return &this
}

// NewBraintreeTokenWithDefaults instantiates a new BraintreeToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBraintreeTokenWithDefaults() *BraintreeToken {
	this := BraintreeToken{}
	return &this
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *BraintreeToken) GetMerchantId() string {
	if o == nil || o.MerchantId == nil {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BraintreeToken) GetMerchantIdOk() (*string, bool) {
	if o == nil || o.MerchantId == nil {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *BraintreeToken) HasMerchantId() bool {
	if o != nil && o.MerchantId != nil {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *BraintreeToken) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *BraintreeToken) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BraintreeToken) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *BraintreeToken) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *BraintreeToken) SetToken(v string) {
	o.Token = &v
}

func (o BraintreeToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MerchantId != nil {
		toSerialize["merchantId"] = o.MerchantId
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableBraintreeToken struct {
	value *BraintreeToken
	isSet bool
}

func (v NullableBraintreeToken) Get() *BraintreeToken {
	return v.value
}

func (v *NullableBraintreeToken) Set(val *BraintreeToken) {
	v.value = val
	v.isSet = true
}

func (v NullableBraintreeToken) IsSet() bool {
	return v.isSet
}

func (v *NullableBraintreeToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBraintreeToken(val *BraintreeToken) *NullableBraintreeToken {
	return &NullableBraintreeToken{value: val, isSet: true}
}

func (v NullableBraintreeToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBraintreeToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
