/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// AddonProviderInfoFullView struct for AddonProviderInfoFullView
type AddonProviderInfoFullView struct {
	Id             *string             `json:"id,omitempty"`
	Name           *string             `json:"name,omitempty"`
	Website        *string             `json:"website,omitempty"`
	SupportEmail   *string             `json:"supportEmail,omitempty"`
	GooglePlusName *string             `json:"googlePlusName,omitempty"`
	TwitterName    *string             `json:"twitterName,omitempty"`
	AnalyticsId    *string             `json:"analyticsId,omitempty"`
	ShortDesc      *string             `json:"shortDesc,omitempty"`
	LongDesc       *string             `json:"longDesc,omitempty"`
	LogoUrl        *string             `json:"logoUrl,omitempty"`
	Status         *string             `json:"status,omitempty"`
	OpenInNewTab   *bool               `json:"openInNewTab,omitempty"`
	CanUpgrade     *bool               `json:"canUpgrade,omitempty"`
	Regions        *[]string           `json:"regions,omitempty"`
	Plans          *[]AddonPlanView    `json:"plans,omitempty"`
	Features       *[]AddonFeatureView `json:"features,omitempty"`
}

// NewAddonProviderInfoFullView instantiates a new AddonProviderInfoFullView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonProviderInfoFullView() *AddonProviderInfoFullView {
	this := AddonProviderInfoFullView{}
	return &this
}

// NewAddonProviderInfoFullViewWithDefaults instantiates a new AddonProviderInfoFullView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonProviderInfoFullViewWithDefaults() *AddonProviderInfoFullView {
	this := AddonProviderInfoFullView{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddonProviderInfoFullView) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddonProviderInfoFullView) SetName(v string) {
	o.Name = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *AddonProviderInfoFullView) SetWebsite(v string) {
	o.Website = &v
}

// GetSupportEmail returns the SupportEmail field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetSupportEmail() string {
	if o == nil || o.SupportEmail == nil {
		var ret string
		return ret
	}
	return *o.SupportEmail
}

// GetSupportEmailOk returns a tuple with the SupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetSupportEmailOk() (*string, bool) {
	if o == nil || o.SupportEmail == nil {
		return nil, false
	}
	return o.SupportEmail, true
}

// HasSupportEmail returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasSupportEmail() bool {
	if o != nil && o.SupportEmail != nil {
		return true
	}

	return false
}

// SetSupportEmail gets a reference to the given string and assigns it to the SupportEmail field.
func (o *AddonProviderInfoFullView) SetSupportEmail(v string) {
	o.SupportEmail = &v
}

// GetGooglePlusName returns the GooglePlusName field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetGooglePlusName() string {
	if o == nil || o.GooglePlusName == nil {
		var ret string
		return ret
	}
	return *o.GooglePlusName
}

// GetGooglePlusNameOk returns a tuple with the GooglePlusName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetGooglePlusNameOk() (*string, bool) {
	if o == nil || o.GooglePlusName == nil {
		return nil, false
	}
	return o.GooglePlusName, true
}

// HasGooglePlusName returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasGooglePlusName() bool {
	if o != nil && o.GooglePlusName != nil {
		return true
	}

	return false
}

// SetGooglePlusName gets a reference to the given string and assigns it to the GooglePlusName field.
func (o *AddonProviderInfoFullView) SetGooglePlusName(v string) {
	o.GooglePlusName = &v
}

// GetTwitterName returns the TwitterName field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetTwitterName() string {
	if o == nil || o.TwitterName == nil {
		var ret string
		return ret
	}
	return *o.TwitterName
}

// GetTwitterNameOk returns a tuple with the TwitterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetTwitterNameOk() (*string, bool) {
	if o == nil || o.TwitterName == nil {
		return nil, false
	}
	return o.TwitterName, true
}

// HasTwitterName returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasTwitterName() bool {
	if o != nil && o.TwitterName != nil {
		return true
	}

	return false
}

// SetTwitterName gets a reference to the given string and assigns it to the TwitterName field.
func (o *AddonProviderInfoFullView) SetTwitterName(v string) {
	o.TwitterName = &v
}

// GetAnalyticsId returns the AnalyticsId field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetAnalyticsId() string {
	if o == nil || o.AnalyticsId == nil {
		var ret string
		return ret
	}
	return *o.AnalyticsId
}

// GetAnalyticsIdOk returns a tuple with the AnalyticsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetAnalyticsIdOk() (*string, bool) {
	if o == nil || o.AnalyticsId == nil {
		return nil, false
	}
	return o.AnalyticsId, true
}

// HasAnalyticsId returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasAnalyticsId() bool {
	if o != nil && o.AnalyticsId != nil {
		return true
	}

	return false
}

// SetAnalyticsId gets a reference to the given string and assigns it to the AnalyticsId field.
func (o *AddonProviderInfoFullView) SetAnalyticsId(v string) {
	o.AnalyticsId = &v
}

// GetShortDesc returns the ShortDesc field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetShortDesc() string {
	if o == nil || o.ShortDesc == nil {
		var ret string
		return ret
	}
	return *o.ShortDesc
}

// GetShortDescOk returns a tuple with the ShortDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetShortDescOk() (*string, bool) {
	if o == nil || o.ShortDesc == nil {
		return nil, false
	}
	return o.ShortDesc, true
}

// HasShortDesc returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasShortDesc() bool {
	if o != nil && o.ShortDesc != nil {
		return true
	}

	return false
}

// SetShortDesc gets a reference to the given string and assigns it to the ShortDesc field.
func (o *AddonProviderInfoFullView) SetShortDesc(v string) {
	o.ShortDesc = &v
}

// GetLongDesc returns the LongDesc field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetLongDesc() string {
	if o == nil || o.LongDesc == nil {
		var ret string
		return ret
	}
	return *o.LongDesc
}

// GetLongDescOk returns a tuple with the LongDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetLongDescOk() (*string, bool) {
	if o == nil || o.LongDesc == nil {
		return nil, false
	}
	return o.LongDesc, true
}

// HasLongDesc returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasLongDesc() bool {
	if o != nil && o.LongDesc != nil {
		return true
	}

	return false
}

// SetLongDesc gets a reference to the given string and assigns it to the LongDesc field.
func (o *AddonProviderInfoFullView) SetLongDesc(v string) {
	o.LongDesc = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetLogoUrl() string {
	if o == nil || o.LogoUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetLogoUrlOk() (*string, bool) {
	if o == nil || o.LogoUrl == nil {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasLogoUrl() bool {
	if o != nil && o.LogoUrl != nil {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *AddonProviderInfoFullView) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AddonProviderInfoFullView) SetStatus(v string) {
	o.Status = &v
}

// GetOpenInNewTab returns the OpenInNewTab field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetOpenInNewTab() bool {
	if o == nil || o.OpenInNewTab == nil {
		var ret bool
		return ret
	}
	return *o.OpenInNewTab
}

// GetOpenInNewTabOk returns a tuple with the OpenInNewTab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetOpenInNewTabOk() (*bool, bool) {
	if o == nil || o.OpenInNewTab == nil {
		return nil, false
	}
	return o.OpenInNewTab, true
}

// HasOpenInNewTab returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasOpenInNewTab() bool {
	if o != nil && o.OpenInNewTab != nil {
		return true
	}

	return false
}

// SetOpenInNewTab gets a reference to the given bool and assigns it to the OpenInNewTab field.
func (o *AddonProviderInfoFullView) SetOpenInNewTab(v bool) {
	o.OpenInNewTab = &v
}

// GetCanUpgrade returns the CanUpgrade field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetCanUpgrade() bool {
	if o == nil || o.CanUpgrade == nil {
		var ret bool
		return ret
	}
	return *o.CanUpgrade
}

// GetCanUpgradeOk returns a tuple with the CanUpgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetCanUpgradeOk() (*bool, bool) {
	if o == nil || o.CanUpgrade == nil {
		return nil, false
	}
	return o.CanUpgrade, true
}

// HasCanUpgrade returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasCanUpgrade() bool {
	if o != nil && o.CanUpgrade != nil {
		return true
	}

	return false
}

// SetCanUpgrade gets a reference to the given bool and assigns it to the CanUpgrade field.
func (o *AddonProviderInfoFullView) SetCanUpgrade(v bool) {
	o.CanUpgrade = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetRegions() []string {
	if o == nil || o.Regions == nil {
		var ret []string
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetRegionsOk() (*[]string, bool) {
	if o == nil || o.Regions == nil {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasRegions() bool {
	if o != nil && o.Regions != nil {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []string and assigns it to the Regions field.
func (o *AddonProviderInfoFullView) SetRegions(v []string) {
	o.Regions = &v
}

// GetPlans returns the Plans field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetPlans() []AddonPlanView {
	if o == nil || o.Plans == nil {
		var ret []AddonPlanView
		return ret
	}
	return *o.Plans
}

// GetPlansOk returns a tuple with the Plans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetPlansOk() (*[]AddonPlanView, bool) {
	if o == nil || o.Plans == nil {
		return nil, false
	}
	return o.Plans, true
}

// HasPlans returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasPlans() bool {
	if o != nil && o.Plans != nil {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []AddonPlanView and assigns it to the Plans field.
func (o *AddonProviderInfoFullView) SetPlans(v []AddonPlanView) {
	o.Plans = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *AddonProviderInfoFullView) GetFeatures() []AddonFeatureView {
	if o == nil || o.Features == nil {
		var ret []AddonFeatureView
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonProviderInfoFullView) GetFeaturesOk() (*[]AddonFeatureView, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *AddonProviderInfoFullView) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []AddonFeatureView and assigns it to the Features field.
func (o *AddonProviderInfoFullView) SetFeatures(v []AddonFeatureView) {
	o.Features = &v
}

func (o AddonProviderInfoFullView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.SupportEmail != nil {
		toSerialize["supportEmail"] = o.SupportEmail
	}
	if o.GooglePlusName != nil {
		toSerialize["googlePlusName"] = o.GooglePlusName
	}
	if o.TwitterName != nil {
		toSerialize["twitterName"] = o.TwitterName
	}
	if o.AnalyticsId != nil {
		toSerialize["analyticsId"] = o.AnalyticsId
	}
	if o.ShortDesc != nil {
		toSerialize["shortDesc"] = o.ShortDesc
	}
	if o.LongDesc != nil {
		toSerialize["longDesc"] = o.LongDesc
	}
	if o.LogoUrl != nil {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.OpenInNewTab != nil {
		toSerialize["openInNewTab"] = o.OpenInNewTab
	}
	if o.CanUpgrade != nil {
		toSerialize["canUpgrade"] = o.CanUpgrade
	}
	if o.Regions != nil {
		toSerialize["regions"] = o.Regions
	}
	if o.Plans != nil {
		toSerialize["plans"] = o.Plans
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	return json.Marshal(toSerialize)
}

type NullableAddonProviderInfoFullView struct {
	value *AddonProviderInfoFullView
	isSet bool
}

func (v NullableAddonProviderInfoFullView) Get() *AddonProviderInfoFullView {
	return v.value
}

func (v *NullableAddonProviderInfoFullView) Set(val *AddonProviderInfoFullView) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonProviderInfoFullView) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonProviderInfoFullView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonProviderInfoFullView(val *AddonProviderInfoFullView) *NullableAddonProviderInfoFullView {
	return &NullableAddonProviderInfoFullView{value: val, isSet: true}
}

func (v NullableAddonProviderInfoFullView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonProviderInfoFullView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
