/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeAddonProvision struct for WannabeAddonProvision
type WannabeAddonProvision struct {
	// Id of the add-on provider
	ProviderId string `json:"providerId"`
	// Id of the price plan
	Plan      string  `json:"plan"`
	LinkedApp *string `json:"linkedApp,omitempty"`
	// Name of the future add-on, for display.
	Name *string `json:"name,omitempty"`
	// Region to provision the add-on in.
	Region string `json:"region"`
	// Options to add to the provision call.
	Options *map[string]string `json:"options,omitempty"`
	// Version of the add-on
	Version       *string          `json:"version,omitempty"`
	PaymentIntent *SetupIntentView `json:"paymentIntent,omitempty"`
	// Payment method type
	PaymentMethodType *string `json:"paymentMethodType,omitempty"`
	// Id of the SEPA debit source
	SepaSourceId *string `json:"sepaSourceId,omitempty"`
}

// NewWannabeAddonProvision instantiates a new WannabeAddonProvision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeAddonProvision(providerId string, plan string, region string) *WannabeAddonProvision {
	this := WannabeAddonProvision{}
	this.ProviderId = providerId
	this.Plan = plan
	this.Region = region
	return &this
}

// NewWannabeAddonProvisionWithDefaults instantiates a new WannabeAddonProvision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeAddonProvisionWithDefaults() *WannabeAddonProvision {
	this := WannabeAddonProvision{}
	return &this
}

// GetProviderId returns the ProviderId field value
func (o *WannabeAddonProvision) GetProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *WannabeAddonProvision) SetProviderId(v string) {
	o.ProviderId = v
}

// GetPlan returns the Plan field value
func (o *WannabeAddonProvision) GetPlan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetPlanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *WannabeAddonProvision) SetPlan(v string) {
	o.Plan = v
}

// GetLinkedApp returns the LinkedApp field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetLinkedApp() string {
	if o == nil || o.LinkedApp == nil {
		var ret string
		return ret
	}
	return *o.LinkedApp
}

// GetLinkedAppOk returns a tuple with the LinkedApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetLinkedAppOk() (*string, bool) {
	if o == nil || o.LinkedApp == nil {
		return nil, false
	}
	return o.LinkedApp, true
}

// HasLinkedApp returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasLinkedApp() bool {
	if o != nil && o.LinkedApp != nil {
		return true
	}

	return false
}

// SetLinkedApp gets a reference to the given string and assigns it to the LinkedApp field.
func (o *WannabeAddonProvision) SetLinkedApp(v string) {
	o.LinkedApp = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WannabeAddonProvision) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value
func (o *WannabeAddonProvision) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *WannabeAddonProvision) SetRegion(v string) {
	o.Region = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetOptions() map[string]string {
	if o == nil || o.Options == nil {
		var ret map[string]string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetOptionsOk() (*map[string]string, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]string and assigns it to the Options field.
func (o *WannabeAddonProvision) SetOptions(v map[string]string) {
	o.Options = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *WannabeAddonProvision) SetVersion(v string) {
	o.Version = &v
}

// GetPaymentIntent returns the PaymentIntent field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetPaymentIntent() SetupIntentView {
	if o == nil || o.PaymentIntent == nil {
		var ret SetupIntentView
		return ret
	}
	return *o.PaymentIntent
}

// GetPaymentIntentOk returns a tuple with the PaymentIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetPaymentIntentOk() (*SetupIntentView, bool) {
	if o == nil || o.PaymentIntent == nil {
		return nil, false
	}
	return o.PaymentIntent, true
}

// HasPaymentIntent returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasPaymentIntent() bool {
	if o != nil && o.PaymentIntent != nil {
		return true
	}

	return false
}

// SetPaymentIntent gets a reference to the given SetupIntentView and assigns it to the PaymentIntent field.
func (o *WannabeAddonProvision) SetPaymentIntent(v SetupIntentView) {
	o.PaymentIntent = &v
}

// GetPaymentMethodType returns the PaymentMethodType field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetPaymentMethodType() string {
	if o == nil || o.PaymentMethodType == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethodType
}

// GetPaymentMethodTypeOk returns a tuple with the PaymentMethodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetPaymentMethodTypeOk() (*string, bool) {
	if o == nil || o.PaymentMethodType == nil {
		return nil, false
	}
	return o.PaymentMethodType, true
}

// HasPaymentMethodType returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasPaymentMethodType() bool {
	if o != nil && o.PaymentMethodType != nil {
		return true
	}

	return false
}

// SetPaymentMethodType gets a reference to the given string and assigns it to the PaymentMethodType field.
func (o *WannabeAddonProvision) SetPaymentMethodType(v string) {
	o.PaymentMethodType = &v
}

// GetSepaSourceId returns the SepaSourceId field value if set, zero value otherwise.
func (o *WannabeAddonProvision) GetSepaSourceId() string {
	if o == nil || o.SepaSourceId == nil {
		var ret string
		return ret
	}
	return *o.SepaSourceId
}

// GetSepaSourceIdOk returns a tuple with the SepaSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProvision) GetSepaSourceIdOk() (*string, bool) {
	if o == nil || o.SepaSourceId == nil {
		return nil, false
	}
	return o.SepaSourceId, true
}

// HasSepaSourceId returns a boolean if a field has been set.
func (o *WannabeAddonProvision) HasSepaSourceId() bool {
	if o != nil && o.SepaSourceId != nil {
		return true
	}

	return false
}

// SetSepaSourceId gets a reference to the given string and assigns it to the SepaSourceId field.
func (o *WannabeAddonProvision) SetSepaSourceId(v string) {
	o.SepaSourceId = &v
}

func (o WannabeAddonProvision) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["providerId"] = o.ProviderId
	}
	if true {
		toSerialize["plan"] = o.Plan
	}
	if o.LinkedApp != nil {
		toSerialize["linkedApp"] = o.LinkedApp
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.PaymentIntent != nil {
		toSerialize["paymentIntent"] = o.PaymentIntent
	}
	if o.PaymentMethodType != nil {
		toSerialize["paymentMethodType"] = o.PaymentMethodType
	}
	if o.SepaSourceId != nil {
		toSerialize["sepaSourceId"] = o.SepaSourceId
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeAddonProvision struct {
	value *WannabeAddonProvision
	isSet bool
}

func (v NullableWannabeAddonProvision) Get() *WannabeAddonProvision {
	return v.value
}

func (v *NullableWannabeAddonProvision) Set(val *WannabeAddonProvision) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeAddonProvision) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeAddonProvision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeAddonProvision(val *WannabeAddonProvision) *NullableWannabeAddonProvision {
	return &NullableWannabeAddonProvision{value: val, isSet: true}
}

func (v NullableWannabeAddonProvision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeAddonProvision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
