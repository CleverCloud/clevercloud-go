/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// AddonApplicationSummary struct for AddonApplicationSummary
type AddonApplicationSummary struct {
	ProviderId  *string `json:"provider_id,omitempty"`
	HerokuId    *string `json:"heroku_id,omitempty"`
	CallbackUrl *string `json:"callback_url,omitempty"`
	Plan        *string `json:"plan,omitempty"`
	OwnerId     *string `json:"owner_id,omitempty"`
}

// NewAddonApplicationSummary instantiates a new AddonApplicationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonApplicationSummary() *AddonApplicationSummary {
	this := AddonApplicationSummary{}
	return &this
}

// NewAddonApplicationSummaryWithDefaults instantiates a new AddonApplicationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonApplicationSummaryWithDefaults() *AddonApplicationSummary {
	this := AddonApplicationSummary{}
	return &this
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *AddonApplicationSummary) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationSummary) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *AddonApplicationSummary) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *AddonApplicationSummary) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetHerokuId returns the HerokuId field value if set, zero value otherwise.
func (o *AddonApplicationSummary) GetHerokuId() string {
	if o == nil || o.HerokuId == nil {
		var ret string
		return ret
	}
	return *o.HerokuId
}

// GetHerokuIdOk returns a tuple with the HerokuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationSummary) GetHerokuIdOk() (*string, bool) {
	if o == nil || o.HerokuId == nil {
		return nil, false
	}
	return o.HerokuId, true
}

// HasHerokuId returns a boolean if a field has been set.
func (o *AddonApplicationSummary) HasHerokuId() bool {
	if o != nil && o.HerokuId != nil {
		return true
	}

	return false
}

// SetHerokuId gets a reference to the given string and assigns it to the HerokuId field.
func (o *AddonApplicationSummary) SetHerokuId(v string) {
	o.HerokuId = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *AddonApplicationSummary) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationSummary) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *AddonApplicationSummary) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *AddonApplicationSummary) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *AddonApplicationSummary) GetPlan() string {
	if o == nil || o.Plan == nil {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationSummary) GetPlanOk() (*string, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *AddonApplicationSummary) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *AddonApplicationSummary) SetPlan(v string) {
	o.Plan = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *AddonApplicationSummary) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationSummary) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AddonApplicationSummary) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *AddonApplicationSummary) SetOwnerId(v string) {
	o.OwnerId = &v
}

func (o AddonApplicationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProviderId != nil {
		toSerialize["provider_id"] = o.ProviderId
	}
	if o.HerokuId != nil {
		toSerialize["heroku_id"] = o.HerokuId
	}
	if o.CallbackUrl != nil {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.OwnerId != nil {
		toSerialize["owner_id"] = o.OwnerId
	}
	return json.Marshal(toSerialize)
}

type NullableAddonApplicationSummary struct {
	value *AddonApplicationSummary
	isSet bool
}

func (v NullableAddonApplicationSummary) Get() *AddonApplicationSummary {
	return v.value
}

func (v *NullableAddonApplicationSummary) Set(val *AddonApplicationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonApplicationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonApplicationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonApplicationSummary(val *AddonApplicationSummary) *NullableAddonApplicationSummary {
	return &NullableAddonApplicationSummary{value: val, isSet: true}
}

func (v NullableAddonApplicationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonApplicationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
