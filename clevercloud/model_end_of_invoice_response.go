/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// EndOfInvoiceResponse struct for EndOfInvoiceResponse
type EndOfInvoiceResponse struct {
	Id             *string            `json:"id,omitempty"`
	Url            *string            `json:"url,omitempty"`
	PosData        *string            `json:"posData,omitempty"`
	Status         *string            `json:"status,omitempty"`
	BtcPrice       *string            `json:"btcPrice,omitempty"`
	Price          *float64           `json:"price,omitempty"`
	Currency       *string            `json:"currency,omitempty"`
	InvoiceTime    *int64             `json:"invoiceTime,omitempty"`
	CurrentTime    *int64             `json:"currentTime,omitempty"`
	ExpirationTime *int64             `json:"expirationTime,omitempty"`
	Error          *EndOfInvoiceError `json:"error,omitempty"`
}

// NewEndOfInvoiceResponse instantiates a new EndOfInvoiceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndOfInvoiceResponse() *EndOfInvoiceResponse {
	this := EndOfInvoiceResponse{}
	return &this
}

// NewEndOfInvoiceResponseWithDefaults instantiates a new EndOfInvoiceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndOfInvoiceResponseWithDefaults() *EndOfInvoiceResponse {
	this := EndOfInvoiceResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EndOfInvoiceResponse) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *EndOfInvoiceResponse) SetUrl(v string) {
	o.Url = &v
}

// GetPosData returns the PosData field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetPosData() string {
	if o == nil || o.PosData == nil {
		var ret string
		return ret
	}
	return *o.PosData
}

// GetPosDataOk returns a tuple with the PosData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetPosDataOk() (*string, bool) {
	if o == nil || o.PosData == nil {
		return nil, false
	}
	return o.PosData, true
}

// HasPosData returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasPosData() bool {
	if o != nil && o.PosData != nil {
		return true
	}

	return false
}

// SetPosData gets a reference to the given string and assigns it to the PosData field.
func (o *EndOfInvoiceResponse) SetPosData(v string) {
	o.PosData = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EndOfInvoiceResponse) SetStatus(v string) {
	o.Status = &v
}

// GetBtcPrice returns the BtcPrice field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetBtcPrice() string {
	if o == nil || o.BtcPrice == nil {
		var ret string
		return ret
	}
	return *o.BtcPrice
}

// GetBtcPriceOk returns a tuple with the BtcPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetBtcPriceOk() (*string, bool) {
	if o == nil || o.BtcPrice == nil {
		return nil, false
	}
	return o.BtcPrice, true
}

// HasBtcPrice returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasBtcPrice() bool {
	if o != nil && o.BtcPrice != nil {
		return true
	}

	return false
}

// SetBtcPrice gets a reference to the given string and assigns it to the BtcPrice field.
func (o *EndOfInvoiceResponse) SetBtcPrice(v string) {
	o.BtcPrice = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetPrice() float64 {
	if o == nil || o.Price == nil {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetPriceOk() (*float64, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *EndOfInvoiceResponse) SetPrice(v float64) {
	o.Price = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *EndOfInvoiceResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetInvoiceTime returns the InvoiceTime field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetInvoiceTime() int64 {
	if o == nil || o.InvoiceTime == nil {
		var ret int64
		return ret
	}
	return *o.InvoiceTime
}

// GetInvoiceTimeOk returns a tuple with the InvoiceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetInvoiceTimeOk() (*int64, bool) {
	if o == nil || o.InvoiceTime == nil {
		return nil, false
	}
	return o.InvoiceTime, true
}

// HasInvoiceTime returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasInvoiceTime() bool {
	if o != nil && o.InvoiceTime != nil {
		return true
	}

	return false
}

// SetInvoiceTime gets a reference to the given int64 and assigns it to the InvoiceTime field.
func (o *EndOfInvoiceResponse) SetInvoiceTime(v int64) {
	o.InvoiceTime = &v
}

// GetCurrentTime returns the CurrentTime field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetCurrentTime() int64 {
	if o == nil || o.CurrentTime == nil {
		var ret int64
		return ret
	}
	return *o.CurrentTime
}

// GetCurrentTimeOk returns a tuple with the CurrentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetCurrentTimeOk() (*int64, bool) {
	if o == nil || o.CurrentTime == nil {
		return nil, false
	}
	return o.CurrentTime, true
}

// HasCurrentTime returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasCurrentTime() bool {
	if o != nil && o.CurrentTime != nil {
		return true
	}

	return false
}

// SetCurrentTime gets a reference to the given int64 and assigns it to the CurrentTime field.
func (o *EndOfInvoiceResponse) SetCurrentTime(v int64) {
	o.CurrentTime = &v
}

// GetExpirationTime returns the ExpirationTime field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetExpirationTime() int64 {
	if o == nil || o.ExpirationTime == nil {
		var ret int64
		return ret
	}
	return *o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetExpirationTimeOk() (*int64, bool) {
	if o == nil || o.ExpirationTime == nil {
		return nil, false
	}
	return o.ExpirationTime, true
}

// HasExpirationTime returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasExpirationTime() bool {
	if o != nil && o.ExpirationTime != nil {
		return true
	}

	return false
}

// SetExpirationTime gets a reference to the given int64 and assigns it to the ExpirationTime field.
func (o *EndOfInvoiceResponse) SetExpirationTime(v int64) {
	o.ExpirationTime = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *EndOfInvoiceResponse) GetError() EndOfInvoiceError {
	if o == nil || o.Error == nil {
		var ret EndOfInvoiceError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceResponse) GetErrorOk() (*EndOfInvoiceError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *EndOfInvoiceResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given EndOfInvoiceError and assigns it to the Error field.
func (o *EndOfInvoiceResponse) SetError(v EndOfInvoiceError) {
	o.Error = &v
}

func (o EndOfInvoiceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.PosData != nil {
		toSerialize["posData"] = o.PosData
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.BtcPrice != nil {
		toSerialize["btcPrice"] = o.BtcPrice
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.InvoiceTime != nil {
		toSerialize["invoiceTime"] = o.InvoiceTime
	}
	if o.CurrentTime != nil {
		toSerialize["currentTime"] = o.CurrentTime
	}
	if o.ExpirationTime != nil {
		toSerialize["expirationTime"] = o.ExpirationTime
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableEndOfInvoiceResponse struct {
	value *EndOfInvoiceResponse
	isSet bool
}

func (v NullableEndOfInvoiceResponse) Get() *EndOfInvoiceResponse {
	return v.value
}

func (v *NullableEndOfInvoiceResponse) Set(val *EndOfInvoiceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEndOfInvoiceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEndOfInvoiceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndOfInvoiceResponse(val *EndOfInvoiceResponse) *NullableEndOfInvoiceResponse {
	return &NullableEndOfInvoiceResponse{value: val, isSet: true}
}

func (v NullableEndOfInvoiceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndOfInvoiceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
