/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// InvoiceRendering struct for InvoiceRendering
type InvoiceRendering struct {
	Id                 *string                 `json:"id,omitempty"`
	Number             *string                 `json:"number,omitempty"`
	Status             *string                 `json:"status,omitempty"`
	EmissionDate       *string                 `json:"emissionDate,omitempty"`
	PaymentDate        *string                 `json:"paymentDate,omitempty"`
	Name               *string                 `json:"name,omitempty"`
	Company            *string                 `json:"company,omitempty"`
	Target             *string                 `json:"target,omitempty"`
	Address            *string                 `json:"address,omitempty"`
	ZipCode            *string                 `json:"zipCode,omitempty"`
	City               *string                 `json:"city,omitempty"`
	Country            *string                 `json:"country,omitempty"`
	CountryCode        *string                 `json:"countryCode,omitempty"`
	VatNumber          *string                 `json:"vatNumber,omitempty"`
	FromSubscription   *bool                   `json:"fromSubscription,omitempty"`
	Lines              *[]InvoiceLineRendering `json:"lines,omitempty"`
	OriginalTotal      *float32                `json:"originalTotal,omitempty"`
	TotalHT            *float32                `json:"totalHT,omitempty"`
	TotalVAT           *float32                `json:"totalVAT,omitempty"`
	TotalTTC           *float32                `json:"totalTTC,omitempty"`
	Type               *string                 `json:"type,omitempty"`
	PayingUser         *OrganisationMemberView `json:"payingUser,omitempty"`
	ErrorCode          *string                 `json:"errorCode,omitempty"`
	ErrorShortMsg      *string                 `json:"errorShortMsg,omitempty"`
	ErrorLongMsg       *string                 `json:"errorLongMsg,omitempty"`
	Token              *string                 `json:"token,omitempty"`
	TargetId           *string                 `json:"targetId,omitempty"`
	ForId              *string                 `json:"forId,omitempty"`
	CustomerOrderId    *string                 `json:"customerOrderId,omitempty"`
	CustomerCostCenter *string                 `json:"customerCostCenter,omitempty"`
	VatRate            *float32                `json:"vatRate,omitempty"`
	PayWhen            *string                 `json:"payWhen,omitempty"`
}

// NewInvoiceRendering instantiates a new InvoiceRendering object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceRendering() *InvoiceRendering {
	this := InvoiceRendering{}
	return &this
}

// NewInvoiceRenderingWithDefaults instantiates a new InvoiceRendering object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceRenderingWithDefaults() *InvoiceRendering {
	this := InvoiceRendering{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InvoiceRendering) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InvoiceRendering) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InvoiceRendering) SetId(v string) {
	o.Id = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *InvoiceRendering) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *InvoiceRendering) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *InvoiceRendering) SetNumber(v string) {
	o.Number = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InvoiceRendering) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InvoiceRendering) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InvoiceRendering) SetStatus(v string) {
	o.Status = &v
}

// GetEmissionDate returns the EmissionDate field value if set, zero value otherwise.
func (o *InvoiceRendering) GetEmissionDate() string {
	if o == nil || o.EmissionDate == nil {
		var ret string
		return ret
	}
	return *o.EmissionDate
}

// GetEmissionDateOk returns a tuple with the EmissionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetEmissionDateOk() (*string, bool) {
	if o == nil || o.EmissionDate == nil {
		return nil, false
	}
	return o.EmissionDate, true
}

// HasEmissionDate returns a boolean if a field has been set.
func (o *InvoiceRendering) HasEmissionDate() bool {
	if o != nil && o.EmissionDate != nil {
		return true
	}

	return false
}

// SetEmissionDate gets a reference to the given string and assigns it to the EmissionDate field.
func (o *InvoiceRendering) SetEmissionDate(v string) {
	o.EmissionDate = &v
}

// GetPaymentDate returns the PaymentDate field value if set, zero value otherwise.
func (o *InvoiceRendering) GetPaymentDate() string {
	if o == nil || o.PaymentDate == nil {
		var ret string
		return ret
	}
	return *o.PaymentDate
}

// GetPaymentDateOk returns a tuple with the PaymentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetPaymentDateOk() (*string, bool) {
	if o == nil || o.PaymentDate == nil {
		return nil, false
	}
	return o.PaymentDate, true
}

// HasPaymentDate returns a boolean if a field has been set.
func (o *InvoiceRendering) HasPaymentDate() bool {
	if o != nil && o.PaymentDate != nil {
		return true
	}

	return false
}

// SetPaymentDate gets a reference to the given string and assigns it to the PaymentDate field.
func (o *InvoiceRendering) SetPaymentDate(v string) {
	o.PaymentDate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InvoiceRendering) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InvoiceRendering) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InvoiceRendering) SetName(v string) {
	o.Name = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *InvoiceRendering) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *InvoiceRendering) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *InvoiceRendering) SetCompany(v string) {
	o.Company = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *InvoiceRendering) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *InvoiceRendering) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *InvoiceRendering) SetTarget(v string) {
	o.Target = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *InvoiceRendering) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *InvoiceRendering) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *InvoiceRendering) SetAddress(v string) {
	o.Address = &v
}

// GetZipCode returns the ZipCode field value if set, zero value otherwise.
func (o *InvoiceRendering) GetZipCode() string {
	if o == nil || o.ZipCode == nil {
		var ret string
		return ret
	}
	return *o.ZipCode
}

// GetZipCodeOk returns a tuple with the ZipCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetZipCodeOk() (*string, bool) {
	if o == nil || o.ZipCode == nil {
		return nil, false
	}
	return o.ZipCode, true
}

// HasZipCode returns a boolean if a field has been set.
func (o *InvoiceRendering) HasZipCode() bool {
	if o != nil && o.ZipCode != nil {
		return true
	}

	return false
}

// SetZipCode gets a reference to the given string and assigns it to the ZipCode field.
func (o *InvoiceRendering) SetZipCode(v string) {
	o.ZipCode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *InvoiceRendering) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *InvoiceRendering) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *InvoiceRendering) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *InvoiceRendering) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *InvoiceRendering) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *InvoiceRendering) SetCountry(v string) {
	o.Country = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *InvoiceRendering) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *InvoiceRendering) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *InvoiceRendering) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *InvoiceRendering) GetVatNumber() string {
	if o == nil || o.VatNumber == nil {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetVatNumberOk() (*string, bool) {
	if o == nil || o.VatNumber == nil {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *InvoiceRendering) HasVatNumber() bool {
	if o != nil && o.VatNumber != nil {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *InvoiceRendering) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetFromSubscription returns the FromSubscription field value if set, zero value otherwise.
func (o *InvoiceRendering) GetFromSubscription() bool {
	if o == nil || o.FromSubscription == nil {
		var ret bool
		return ret
	}
	return *o.FromSubscription
}

// GetFromSubscriptionOk returns a tuple with the FromSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetFromSubscriptionOk() (*bool, bool) {
	if o == nil || o.FromSubscription == nil {
		return nil, false
	}
	return o.FromSubscription, true
}

// HasFromSubscription returns a boolean if a field has been set.
func (o *InvoiceRendering) HasFromSubscription() bool {
	if o != nil && o.FromSubscription != nil {
		return true
	}

	return false
}

// SetFromSubscription gets a reference to the given bool and assigns it to the FromSubscription field.
func (o *InvoiceRendering) SetFromSubscription(v bool) {
	o.FromSubscription = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *InvoiceRendering) GetLines() []InvoiceLineRendering {
	if o == nil || o.Lines == nil {
		var ret []InvoiceLineRendering
		return ret
	}
	return *o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetLinesOk() (*[]InvoiceLineRendering, bool) {
	if o == nil || o.Lines == nil {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *InvoiceRendering) HasLines() bool {
	if o != nil && o.Lines != nil {
		return true
	}

	return false
}

// SetLines gets a reference to the given []InvoiceLineRendering and assigns it to the Lines field.
func (o *InvoiceRendering) SetLines(v []InvoiceLineRendering) {
	o.Lines = &v
}

// GetOriginalTotal returns the OriginalTotal field value if set, zero value otherwise.
func (o *InvoiceRendering) GetOriginalTotal() float32 {
	if o == nil || o.OriginalTotal == nil {
		var ret float32
		return ret
	}
	return *o.OriginalTotal
}

// GetOriginalTotalOk returns a tuple with the OriginalTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetOriginalTotalOk() (*float32, bool) {
	if o == nil || o.OriginalTotal == nil {
		return nil, false
	}
	return o.OriginalTotal, true
}

// HasOriginalTotal returns a boolean if a field has been set.
func (o *InvoiceRendering) HasOriginalTotal() bool {
	if o != nil && o.OriginalTotal != nil {
		return true
	}

	return false
}

// SetOriginalTotal gets a reference to the given float32 and assigns it to the OriginalTotal field.
func (o *InvoiceRendering) SetOriginalTotal(v float32) {
	o.OriginalTotal = &v
}

// GetTotalHT returns the TotalHT field value if set, zero value otherwise.
func (o *InvoiceRendering) GetTotalHT() float32 {
	if o == nil || o.TotalHT == nil {
		var ret float32
		return ret
	}
	return *o.TotalHT
}

// GetTotalHTOk returns a tuple with the TotalHT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTotalHTOk() (*float32, bool) {
	if o == nil || o.TotalHT == nil {
		return nil, false
	}
	return o.TotalHT, true
}

// HasTotalHT returns a boolean if a field has been set.
func (o *InvoiceRendering) HasTotalHT() bool {
	if o != nil && o.TotalHT != nil {
		return true
	}

	return false
}

// SetTotalHT gets a reference to the given float32 and assigns it to the TotalHT field.
func (o *InvoiceRendering) SetTotalHT(v float32) {
	o.TotalHT = &v
}

// GetTotalVAT returns the TotalVAT field value if set, zero value otherwise.
func (o *InvoiceRendering) GetTotalVAT() float32 {
	if o == nil || o.TotalVAT == nil {
		var ret float32
		return ret
	}
	return *o.TotalVAT
}

// GetTotalVATOk returns a tuple with the TotalVAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTotalVATOk() (*float32, bool) {
	if o == nil || o.TotalVAT == nil {
		return nil, false
	}
	return o.TotalVAT, true
}

// HasTotalVAT returns a boolean if a field has been set.
func (o *InvoiceRendering) HasTotalVAT() bool {
	if o != nil && o.TotalVAT != nil {
		return true
	}

	return false
}

// SetTotalVAT gets a reference to the given float32 and assigns it to the TotalVAT field.
func (o *InvoiceRendering) SetTotalVAT(v float32) {
	o.TotalVAT = &v
}

// GetTotalTTC returns the TotalTTC field value if set, zero value otherwise.
func (o *InvoiceRendering) GetTotalTTC() float32 {
	if o == nil || o.TotalTTC == nil {
		var ret float32
		return ret
	}
	return *o.TotalTTC
}

// GetTotalTTCOk returns a tuple with the TotalTTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTotalTTCOk() (*float32, bool) {
	if o == nil || o.TotalTTC == nil {
		return nil, false
	}
	return o.TotalTTC, true
}

// HasTotalTTC returns a boolean if a field has been set.
func (o *InvoiceRendering) HasTotalTTC() bool {
	if o != nil && o.TotalTTC != nil {
		return true
	}

	return false
}

// SetTotalTTC gets a reference to the given float32 and assigns it to the TotalTTC field.
func (o *InvoiceRendering) SetTotalTTC(v float32) {
	o.TotalTTC = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InvoiceRendering) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InvoiceRendering) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InvoiceRendering) SetType(v string) {
	o.Type = &v
}

// GetPayingUser returns the PayingUser field value if set, zero value otherwise.
func (o *InvoiceRendering) GetPayingUser() OrganisationMemberView {
	if o == nil || o.PayingUser == nil {
		var ret OrganisationMemberView
		return ret
	}
	return *o.PayingUser
}

// GetPayingUserOk returns a tuple with the PayingUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetPayingUserOk() (*OrganisationMemberView, bool) {
	if o == nil || o.PayingUser == nil {
		return nil, false
	}
	return o.PayingUser, true
}

// HasPayingUser returns a boolean if a field has been set.
func (o *InvoiceRendering) HasPayingUser() bool {
	if o != nil && o.PayingUser != nil {
		return true
	}

	return false
}

// SetPayingUser gets a reference to the given OrganisationMemberView and assigns it to the PayingUser field.
func (o *InvoiceRendering) SetPayingUser(v OrganisationMemberView) {
	o.PayingUser = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *InvoiceRendering) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *InvoiceRendering) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *InvoiceRendering) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorShortMsg returns the ErrorShortMsg field value if set, zero value otherwise.
func (o *InvoiceRendering) GetErrorShortMsg() string {
	if o == nil || o.ErrorShortMsg == nil {
		var ret string
		return ret
	}
	return *o.ErrorShortMsg
}

// GetErrorShortMsgOk returns a tuple with the ErrorShortMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetErrorShortMsgOk() (*string, bool) {
	if o == nil || o.ErrorShortMsg == nil {
		return nil, false
	}
	return o.ErrorShortMsg, true
}

// HasErrorShortMsg returns a boolean if a field has been set.
func (o *InvoiceRendering) HasErrorShortMsg() bool {
	if o != nil && o.ErrorShortMsg != nil {
		return true
	}

	return false
}

// SetErrorShortMsg gets a reference to the given string and assigns it to the ErrorShortMsg field.
func (o *InvoiceRendering) SetErrorShortMsg(v string) {
	o.ErrorShortMsg = &v
}

// GetErrorLongMsg returns the ErrorLongMsg field value if set, zero value otherwise.
func (o *InvoiceRendering) GetErrorLongMsg() string {
	if o == nil || o.ErrorLongMsg == nil {
		var ret string
		return ret
	}
	return *o.ErrorLongMsg
}

// GetErrorLongMsgOk returns a tuple with the ErrorLongMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetErrorLongMsgOk() (*string, bool) {
	if o == nil || o.ErrorLongMsg == nil {
		return nil, false
	}
	return o.ErrorLongMsg, true
}

// HasErrorLongMsg returns a boolean if a field has been set.
func (o *InvoiceRendering) HasErrorLongMsg() bool {
	if o != nil && o.ErrorLongMsg != nil {
		return true
	}

	return false
}

// SetErrorLongMsg gets a reference to the given string and assigns it to the ErrorLongMsg field.
func (o *InvoiceRendering) SetErrorLongMsg(v string) {
	o.ErrorLongMsg = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *InvoiceRendering) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *InvoiceRendering) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *InvoiceRendering) SetToken(v string) {
	o.Token = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *InvoiceRendering) GetTargetId() string {
	if o == nil || o.TargetId == nil {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetTargetIdOk() (*string, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *InvoiceRendering) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *InvoiceRendering) SetTargetId(v string) {
	o.TargetId = &v
}

// GetForId returns the ForId field value if set, zero value otherwise.
func (o *InvoiceRendering) GetForId() string {
	if o == nil || o.ForId == nil {
		var ret string
		return ret
	}
	return *o.ForId
}

// GetForIdOk returns a tuple with the ForId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetForIdOk() (*string, bool) {
	if o == nil || o.ForId == nil {
		return nil, false
	}
	return o.ForId, true
}

// HasForId returns a boolean if a field has been set.
func (o *InvoiceRendering) HasForId() bool {
	if o != nil && o.ForId != nil {
		return true
	}

	return false
}

// SetForId gets a reference to the given string and assigns it to the ForId field.
func (o *InvoiceRendering) SetForId(v string) {
	o.ForId = &v
}

// GetCustomerOrderId returns the CustomerOrderId field value if set, zero value otherwise.
func (o *InvoiceRendering) GetCustomerOrderId() string {
	if o == nil || o.CustomerOrderId == nil {
		var ret string
		return ret
	}
	return *o.CustomerOrderId
}

// GetCustomerOrderIdOk returns a tuple with the CustomerOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetCustomerOrderIdOk() (*string, bool) {
	if o == nil || o.CustomerOrderId == nil {
		return nil, false
	}
	return o.CustomerOrderId, true
}

// HasCustomerOrderId returns a boolean if a field has been set.
func (o *InvoiceRendering) HasCustomerOrderId() bool {
	if o != nil && o.CustomerOrderId != nil {
		return true
	}

	return false
}

// SetCustomerOrderId gets a reference to the given string and assigns it to the CustomerOrderId field.
func (o *InvoiceRendering) SetCustomerOrderId(v string) {
	o.CustomerOrderId = &v
}

// GetCustomerCostCenter returns the CustomerCostCenter field value if set, zero value otherwise.
func (o *InvoiceRendering) GetCustomerCostCenter() string {
	if o == nil || o.CustomerCostCenter == nil {
		var ret string
		return ret
	}
	return *o.CustomerCostCenter
}

// GetCustomerCostCenterOk returns a tuple with the CustomerCostCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetCustomerCostCenterOk() (*string, bool) {
	if o == nil || o.CustomerCostCenter == nil {
		return nil, false
	}
	return o.CustomerCostCenter, true
}

// HasCustomerCostCenter returns a boolean if a field has been set.
func (o *InvoiceRendering) HasCustomerCostCenter() bool {
	if o != nil && o.CustomerCostCenter != nil {
		return true
	}

	return false
}

// SetCustomerCostCenter gets a reference to the given string and assigns it to the CustomerCostCenter field.
func (o *InvoiceRendering) SetCustomerCostCenter(v string) {
	o.CustomerCostCenter = &v
}

// GetVatRate returns the VatRate field value if set, zero value otherwise.
func (o *InvoiceRendering) GetVatRate() float32 {
	if o == nil || o.VatRate == nil {
		var ret float32
		return ret
	}
	return *o.VatRate
}

// GetVatRateOk returns a tuple with the VatRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetVatRateOk() (*float32, bool) {
	if o == nil || o.VatRate == nil {
		return nil, false
	}
	return o.VatRate, true
}

// HasVatRate returns a boolean if a field has been set.
func (o *InvoiceRendering) HasVatRate() bool {
	if o != nil && o.VatRate != nil {
		return true
	}

	return false
}

// SetVatRate gets a reference to the given float32 and assigns it to the VatRate field.
func (o *InvoiceRendering) SetVatRate(v float32) {
	o.VatRate = &v
}

// GetPayWhen returns the PayWhen field value if set, zero value otherwise.
func (o *InvoiceRendering) GetPayWhen() string {
	if o == nil || o.PayWhen == nil {
		var ret string
		return ret
	}
	return *o.PayWhen
}

// GetPayWhenOk returns a tuple with the PayWhen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceRendering) GetPayWhenOk() (*string, bool) {
	if o == nil || o.PayWhen == nil {
		return nil, false
	}
	return o.PayWhen, true
}

// HasPayWhen returns a boolean if a field has been set.
func (o *InvoiceRendering) HasPayWhen() bool {
	if o != nil && o.PayWhen != nil {
		return true
	}

	return false
}

// SetPayWhen gets a reference to the given string and assigns it to the PayWhen field.
func (o *InvoiceRendering) SetPayWhen(v string) {
	o.PayWhen = &v
}

func (o InvoiceRendering) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.EmissionDate != nil {
		toSerialize["emissionDate"] = o.EmissionDate
	}
	if o.PaymentDate != nil {
		toSerialize["paymentDate"] = o.PaymentDate
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.ZipCode != nil {
		toSerialize["zipCode"] = o.ZipCode
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.VatNumber != nil {
		toSerialize["vatNumber"] = o.VatNumber
	}
	if o.FromSubscription != nil {
		toSerialize["fromSubscription"] = o.FromSubscription
	}
	if o.Lines != nil {
		toSerialize["lines"] = o.Lines
	}
	if o.OriginalTotal != nil {
		toSerialize["originalTotal"] = o.OriginalTotal
	}
	if o.TotalHT != nil {
		toSerialize["totalHT"] = o.TotalHT
	}
	if o.TotalVAT != nil {
		toSerialize["totalVAT"] = o.TotalVAT
	}
	if o.TotalTTC != nil {
		toSerialize["totalTTC"] = o.TotalTTC
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.PayingUser != nil {
		toSerialize["payingUser"] = o.PayingUser
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorShortMsg != nil {
		toSerialize["errorShortMsg"] = o.ErrorShortMsg
	}
	if o.ErrorLongMsg != nil {
		toSerialize["errorLongMsg"] = o.ErrorLongMsg
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.TargetId != nil {
		toSerialize["targetId"] = o.TargetId
	}
	if o.ForId != nil {
		toSerialize["forId"] = o.ForId
	}
	if o.CustomerOrderId != nil {
		toSerialize["customerOrderId"] = o.CustomerOrderId
	}
	if o.CustomerCostCenter != nil {
		toSerialize["customerCostCenter"] = o.CustomerCostCenter
	}
	if o.VatRate != nil {
		toSerialize["vatRate"] = o.VatRate
	}
	if o.PayWhen != nil {
		toSerialize["payWhen"] = o.PayWhen
	}
	return json.Marshal(toSerialize)
}

type NullableInvoiceRendering struct {
	value *InvoiceRendering
	isSet bool
}

func (v NullableInvoiceRendering) Get() *InvoiceRendering {
	return v.value
}

func (v *NullableInvoiceRendering) Set(val *InvoiceRendering) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceRendering) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceRendering) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceRendering(val *InvoiceRendering) *NullableInvoiceRendering {
	return &NullableInvoiceRendering{value: val, isSet: true}
}

func (v NullableInvoiceRendering) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceRendering) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
