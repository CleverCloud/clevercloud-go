/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// CliTokenView struct for CliTokenView
type CliTokenView struct {
	Token  *string `json:"token,omitempty"`
	Secret *string `json:"secret,omitempty"`
}

// NewCliTokenView instantiates a new CliTokenView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCliTokenView() *CliTokenView {
	this := CliTokenView{}
	return &this
}

// NewCliTokenViewWithDefaults instantiates a new CliTokenView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCliTokenViewWithDefaults() *CliTokenView {
	this := CliTokenView{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CliTokenView) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CliTokenView) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CliTokenView) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CliTokenView) SetToken(v string) {
	o.Token = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CliTokenView) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CliTokenView) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CliTokenView) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *CliTokenView) SetSecret(v string) {
	o.Secret = &v
}

func (o CliTokenView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableCliTokenView struct {
	value *CliTokenView
	isSet bool
}

func (v NullableCliTokenView) Get() *CliTokenView {
	return v.value
}

func (v *NullableCliTokenView) Set(val *CliTokenView) {
	v.value = val
	v.isSet = true
}

func (v NullableCliTokenView) IsSet() bool {
	return v.isSet
}

func (v *NullableCliTokenView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCliTokenView(val *CliTokenView) *NullableCliTokenView {
	return &NullableCliTokenView{value: val, isSet: true}
}

func (v NullableCliTokenView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCliTokenView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
