/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// AddonSSOData struct for AddonSSOData
type AddonSSOData struct {
	Url       *string `json:"url,omitempty"`
	Id        *string `json:"id,omitempty"`
	Timestamp *int64  `json:"timestamp,omitempty"`
	Token     *string `json:"token,omitempty"`
	Email     *string `json:"email,omitempty"`
	NavData   *string `json:"nav-data,omitempty"`
}

// NewAddonSSOData instantiates a new AddonSSOData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonSSOData() *AddonSSOData {
	this := AddonSSOData{}
	return &this
}

// NewAddonSSODataWithDefaults instantiates a new AddonSSOData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonSSODataWithDefaults() *AddonSSOData {
	this := AddonSSOData{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *AddonSSOData) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonSSOData) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *AddonSSOData) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *AddonSSOData) SetUrl(v string) {
	o.Url = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddonSSOData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonSSOData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddonSSOData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddonSSOData) SetId(v string) {
	o.Id = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *AddonSSOData) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonSSOData) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *AddonSSOData) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *AddonSSOData) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AddonSSOData) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonSSOData) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AddonSSOData) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AddonSSOData) SetToken(v string) {
	o.Token = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AddonSSOData) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonSSOData) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AddonSSOData) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AddonSSOData) SetEmail(v string) {
	o.Email = &v
}

// GetNavData returns the NavData field value if set, zero value otherwise.
func (o *AddonSSOData) GetNavData() string {
	if o == nil || o.NavData == nil {
		var ret string
		return ret
	}
	return *o.NavData
}

// GetNavDataOk returns a tuple with the NavData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonSSOData) GetNavDataOk() (*string, bool) {
	if o == nil || o.NavData == nil {
		return nil, false
	}
	return o.NavData, true
}

// HasNavData returns a boolean if a field has been set.
func (o *AddonSSOData) HasNavData() bool {
	if o != nil && o.NavData != nil {
		return true
	}

	return false
}

// SetNavData gets a reference to the given string and assigns it to the NavData field.
func (o *AddonSSOData) SetNavData(v string) {
	o.NavData = &v
}

func (o AddonSSOData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.NavData != nil {
		toSerialize["nav-data"] = o.NavData
	}
	return json.Marshal(toSerialize)
}

type NullableAddonSSOData struct {
	value *AddonSSOData
	isSet bool
}

func (v NullableAddonSSOData) Get() *AddonSSOData {
	return v.value
}

func (v *NullableAddonSSOData) Set(val *AddonSSOData) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonSSOData) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonSSOData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonSSOData(val *AddonSSOData) *NullableAddonSSOData {
	return &NullableAddonSSOData{value: val, isSet: true}
}

func (v NullableAddonSSOData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonSSOData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
