/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// InvoiceLineRendering struct for InvoiceLineRendering
type InvoiceLineRendering struct {
	Description    *string  `json:"description,omitempty"`
	SubDescription *string  `json:"subDescription,omitempty"`
	Pack           *string  `json:"pack,omitempty"`
	VAT            *float32 `json:"VAT,omitempty"`
	Price          *float32 `json:"price,omitempty"`
}

// NewInvoiceLineRendering instantiates a new InvoiceLineRendering object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceLineRendering() *InvoiceLineRendering {
	this := InvoiceLineRendering{}
	return &this
}

// NewInvoiceLineRenderingWithDefaults instantiates a new InvoiceLineRendering object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceLineRenderingWithDefaults() *InvoiceLineRendering {
	this := InvoiceLineRendering{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InvoiceLineRendering) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineRendering) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InvoiceLineRendering) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InvoiceLineRendering) SetDescription(v string) {
	o.Description = &v
}

// GetSubDescription returns the SubDescription field value if set, zero value otherwise.
func (o *InvoiceLineRendering) GetSubDescription() string {
	if o == nil || o.SubDescription == nil {
		var ret string
		return ret
	}
	return *o.SubDescription
}

// GetSubDescriptionOk returns a tuple with the SubDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineRendering) GetSubDescriptionOk() (*string, bool) {
	if o == nil || o.SubDescription == nil {
		return nil, false
	}
	return o.SubDescription, true
}

// HasSubDescription returns a boolean if a field has been set.
func (o *InvoiceLineRendering) HasSubDescription() bool {
	if o != nil && o.SubDescription != nil {
		return true
	}

	return false
}

// SetSubDescription gets a reference to the given string and assigns it to the SubDescription field.
func (o *InvoiceLineRendering) SetSubDescription(v string) {
	o.SubDescription = &v
}

// GetPack returns the Pack field value if set, zero value otherwise.
func (o *InvoiceLineRendering) GetPack() string {
	if o == nil || o.Pack == nil {
		var ret string
		return ret
	}
	return *o.Pack
}

// GetPackOk returns a tuple with the Pack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineRendering) GetPackOk() (*string, bool) {
	if o == nil || o.Pack == nil {
		return nil, false
	}
	return o.Pack, true
}

// HasPack returns a boolean if a field has been set.
func (o *InvoiceLineRendering) HasPack() bool {
	if o != nil && o.Pack != nil {
		return true
	}

	return false
}

// SetPack gets a reference to the given string and assigns it to the Pack field.
func (o *InvoiceLineRendering) SetPack(v string) {
	o.Pack = &v
}

// GetVAT returns the VAT field value if set, zero value otherwise.
func (o *InvoiceLineRendering) GetVAT() float32 {
	if o == nil || o.VAT == nil {
		var ret float32
		return ret
	}
	return *o.VAT
}

// GetVATOk returns a tuple with the VAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineRendering) GetVATOk() (*float32, bool) {
	if o == nil || o.VAT == nil {
		return nil, false
	}
	return o.VAT, true
}

// HasVAT returns a boolean if a field has been set.
func (o *InvoiceLineRendering) HasVAT() bool {
	if o != nil && o.VAT != nil {
		return true
	}

	return false
}

// SetVAT gets a reference to the given float32 and assigns it to the VAT field.
func (o *InvoiceLineRendering) SetVAT(v float32) {
	o.VAT = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *InvoiceLineRendering) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLineRendering) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *InvoiceLineRendering) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *InvoiceLineRendering) SetPrice(v float32) {
	o.Price = &v
}

func (o InvoiceLineRendering) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.SubDescription != nil {
		toSerialize["subDescription"] = o.SubDescription
	}
	if o.Pack != nil {
		toSerialize["pack"] = o.Pack
	}
	if o.VAT != nil {
		toSerialize["VAT"] = o.VAT
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableInvoiceLineRendering struct {
	value *InvoiceLineRendering
	isSet bool
}

func (v NullableInvoiceLineRendering) Get() *InvoiceLineRendering {
	return v.value
}

func (v *NullableInvoiceLineRendering) Set(val *InvoiceLineRendering) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceLineRendering) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceLineRendering) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceLineRendering(val *InvoiceLineRendering) *NullableInvoiceLineRendering {
	return &NullableInvoiceLineRendering{value: val, isSet: true}
}

func (v NullableInvoiceLineRendering) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceLineRendering) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
