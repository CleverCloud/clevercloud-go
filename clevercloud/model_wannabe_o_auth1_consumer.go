/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeOAuth1Consumer struct for WannabeOAuth1Consumer
type WannabeOAuth1Consumer struct {
	Name        *string          `json:"name,omitempty"`
	Description *string          `json:"description,omitempty"`
	Url         *string          `json:"url,omitempty"`
	Picture     *string          `json:"picture,omitempty"`
	BaseUrl     *string          `json:"baseUrl,omitempty"`
	Rights      *map[string]bool `json:"rights,omitempty"`
}

// NewWannabeOAuth1Consumer instantiates a new WannabeOAuth1Consumer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeOAuth1Consumer() *WannabeOAuth1Consumer {
	this := WannabeOAuth1Consumer{}
	return &this
}

// NewWannabeOAuth1ConsumerWithDefaults instantiates a new WannabeOAuth1Consumer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeOAuth1ConsumerWithDefaults() *WannabeOAuth1Consumer {
	this := WannabeOAuth1Consumer{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WannabeOAuth1Consumer) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOAuth1Consumer) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WannabeOAuth1Consumer) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WannabeOAuth1Consumer) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WannabeOAuth1Consumer) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOAuth1Consumer) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WannabeOAuth1Consumer) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WannabeOAuth1Consumer) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WannabeOAuth1Consumer) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOAuth1Consumer) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WannabeOAuth1Consumer) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WannabeOAuth1Consumer) SetUrl(v string) {
	o.Url = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *WannabeOAuth1Consumer) GetPicture() string {
	if o == nil || o.Picture == nil {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOAuth1Consumer) GetPictureOk() (*string, bool) {
	if o == nil || o.Picture == nil {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *WannabeOAuth1Consumer) HasPicture() bool {
	if o != nil && o.Picture != nil {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *WannabeOAuth1Consumer) SetPicture(v string) {
	o.Picture = &v
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *WannabeOAuth1Consumer) GetBaseUrl() string {
	if o == nil || o.BaseUrl == nil {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOAuth1Consumer) GetBaseUrlOk() (*string, bool) {
	if o == nil || o.BaseUrl == nil {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *WannabeOAuth1Consumer) HasBaseUrl() bool {
	if o != nil && o.BaseUrl != nil {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *WannabeOAuth1Consumer) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetRights returns the Rights field value if set, zero value otherwise.
func (o *WannabeOAuth1Consumer) GetRights() map[string]bool {
	if o == nil || o.Rights == nil {
		var ret map[string]bool
		return ret
	}
	return *o.Rights
}

// GetRightsOk returns a tuple with the Rights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeOAuth1Consumer) GetRightsOk() (*map[string]bool, bool) {
	if o == nil || o.Rights == nil {
		return nil, false
	}
	return o.Rights, true
}

// HasRights returns a boolean if a field has been set.
func (o *WannabeOAuth1Consumer) HasRights() bool {
	if o != nil && o.Rights != nil {
		return true
	}

	return false
}

// SetRights gets a reference to the given map[string]bool and assigns it to the Rights field.
func (o *WannabeOAuth1Consumer) SetRights(v map[string]bool) {
	o.Rights = &v
}

func (o WannabeOAuth1Consumer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Picture != nil {
		toSerialize["picture"] = o.Picture
	}
	if o.BaseUrl != nil {
		toSerialize["baseUrl"] = o.BaseUrl
	}
	if o.Rights != nil {
		toSerialize["rights"] = o.Rights
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeOAuth1Consumer struct {
	value *WannabeOAuth1Consumer
	isSet bool
}

func (v NullableWannabeOAuth1Consumer) Get() *WannabeOAuth1Consumer {
	return v.value
}

func (v *NullableWannabeOAuth1Consumer) Set(val *WannabeOAuth1Consumer) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeOAuth1Consumer) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeOAuth1Consumer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeOAuth1Consumer(val *WannabeOAuth1Consumer) *NullableWannabeOAuth1Consumer {
	return &NullableWannabeOAuth1Consumer{value: val, isSet: true}
}

func (v NullableWannabeOAuth1Consumer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeOAuth1Consumer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
