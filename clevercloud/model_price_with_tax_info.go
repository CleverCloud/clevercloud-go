/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// PriceWithTaxInfo struct for PriceWithTaxInfo
type PriceWithTaxInfo struct {
	Price         *int64  `json:"price,omitempty"`
	TaxFreePrice  *int64  `json:"taxFreePrice,omitempty"`
	VatRatio      *int64  `json:"vatRatio,omitempty"`
	InvoicedOwner *string `json:"invoicedOwner,omitempty"`
}

// NewPriceWithTaxInfo instantiates a new PriceWithTaxInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceWithTaxInfo() *PriceWithTaxInfo {
	this := PriceWithTaxInfo{}
	return &this
}

// NewPriceWithTaxInfoWithDefaults instantiates a new PriceWithTaxInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceWithTaxInfoWithDefaults() *PriceWithTaxInfo {
	this := PriceWithTaxInfo{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PriceWithTaxInfo) GetPrice() int64 {
	if o == nil || o.Price == nil {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceWithTaxInfo) GetPriceOk() (*int64, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PriceWithTaxInfo) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *PriceWithTaxInfo) SetPrice(v int64) {
	o.Price = &v
}

// GetTaxFreePrice returns the TaxFreePrice field value if set, zero value otherwise.
func (o *PriceWithTaxInfo) GetTaxFreePrice() int64 {
	if o == nil || o.TaxFreePrice == nil {
		var ret int64
		return ret
	}
	return *o.TaxFreePrice
}

// GetTaxFreePriceOk returns a tuple with the TaxFreePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceWithTaxInfo) GetTaxFreePriceOk() (*int64, bool) {
	if o == nil || o.TaxFreePrice == nil {
		return nil, false
	}
	return o.TaxFreePrice, true
}

// HasTaxFreePrice returns a boolean if a field has been set.
func (o *PriceWithTaxInfo) HasTaxFreePrice() bool {
	if o != nil && o.TaxFreePrice != nil {
		return true
	}

	return false
}

// SetTaxFreePrice gets a reference to the given int64 and assigns it to the TaxFreePrice field.
func (o *PriceWithTaxInfo) SetTaxFreePrice(v int64) {
	o.TaxFreePrice = &v
}

// GetVatRatio returns the VatRatio field value if set, zero value otherwise.
func (o *PriceWithTaxInfo) GetVatRatio() int64 {
	if o == nil || o.VatRatio == nil {
		var ret int64
		return ret
	}
	return *o.VatRatio
}

// GetVatRatioOk returns a tuple with the VatRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceWithTaxInfo) GetVatRatioOk() (*int64, bool) {
	if o == nil || o.VatRatio == nil {
		return nil, false
	}
	return o.VatRatio, true
}

// HasVatRatio returns a boolean if a field has been set.
func (o *PriceWithTaxInfo) HasVatRatio() bool {
	if o != nil && o.VatRatio != nil {
		return true
	}

	return false
}

// SetVatRatio gets a reference to the given int64 and assigns it to the VatRatio field.
func (o *PriceWithTaxInfo) SetVatRatio(v int64) {
	o.VatRatio = &v
}

// GetInvoicedOwner returns the InvoicedOwner field value if set, zero value otherwise.
func (o *PriceWithTaxInfo) GetInvoicedOwner() string {
	if o == nil || o.InvoicedOwner == nil {
		var ret string
		return ret
	}
	return *o.InvoicedOwner
}

// GetInvoicedOwnerOk returns a tuple with the InvoicedOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceWithTaxInfo) GetInvoicedOwnerOk() (*string, bool) {
	if o == nil || o.InvoicedOwner == nil {
		return nil, false
	}
	return o.InvoicedOwner, true
}

// HasInvoicedOwner returns a boolean if a field has been set.
func (o *PriceWithTaxInfo) HasInvoicedOwner() bool {
	if o != nil && o.InvoicedOwner != nil {
		return true
	}

	return false
}

// SetInvoicedOwner gets a reference to the given string and assigns it to the InvoicedOwner field.
func (o *PriceWithTaxInfo) SetInvoicedOwner(v string) {
	o.InvoicedOwner = &v
}

func (o PriceWithTaxInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.TaxFreePrice != nil {
		toSerialize["taxFreePrice"] = o.TaxFreePrice
	}
	if o.VatRatio != nil {
		toSerialize["vatRatio"] = o.VatRatio
	}
	if o.InvoicedOwner != nil {
		toSerialize["invoicedOwner"] = o.InvoicedOwner
	}
	return json.Marshal(toSerialize)
}

type NullablePriceWithTaxInfo struct {
	value *PriceWithTaxInfo
	isSet bool
}

func (v NullablePriceWithTaxInfo) Get() *PriceWithTaxInfo {
	return v.value
}

func (v *NullablePriceWithTaxInfo) Set(val *PriceWithTaxInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceWithTaxInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceWithTaxInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceWithTaxInfo(val *PriceWithTaxInfo) *NullablePriceWithTaxInfo {
	return &NullablePriceWithTaxInfo{value: val, isSet: true}
}

func (v NullablePriceWithTaxInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceWithTaxInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
