/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// LinkedAddonEnvironmentView struct for LinkedAddonEnvironmentView
type LinkedAddonEnvironmentView struct {
	ProviderId *string                 `json:"provider_id,omitempty"`
	AddonId    *string                 `json:"addon_id,omitempty"`
	AddonName  *string                 `json:"addon_name,omitempty"`
	Env        *[]AddonEnvironmentView `json:"env,omitempty"`
}

// NewLinkedAddonEnvironmentView instantiates a new LinkedAddonEnvironmentView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkedAddonEnvironmentView() *LinkedAddonEnvironmentView {
	this := LinkedAddonEnvironmentView{}
	return &this
}

// NewLinkedAddonEnvironmentViewWithDefaults instantiates a new LinkedAddonEnvironmentView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkedAddonEnvironmentViewWithDefaults() *LinkedAddonEnvironmentView {
	this := LinkedAddonEnvironmentView{}
	return &this
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *LinkedAddonEnvironmentView) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAddonEnvironmentView) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *LinkedAddonEnvironmentView) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *LinkedAddonEnvironmentView) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetAddonId returns the AddonId field value if set, zero value otherwise.
func (o *LinkedAddonEnvironmentView) GetAddonId() string {
	if o == nil || o.AddonId == nil {
		var ret string
		return ret
	}
	return *o.AddonId
}

// GetAddonIdOk returns a tuple with the AddonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAddonEnvironmentView) GetAddonIdOk() (*string, bool) {
	if o == nil || o.AddonId == nil {
		return nil, false
	}
	return o.AddonId, true
}

// HasAddonId returns a boolean if a field has been set.
func (o *LinkedAddonEnvironmentView) HasAddonId() bool {
	if o != nil && o.AddonId != nil {
		return true
	}

	return false
}

// SetAddonId gets a reference to the given string and assigns it to the AddonId field.
func (o *LinkedAddonEnvironmentView) SetAddonId(v string) {
	o.AddonId = &v
}

// GetAddonName returns the AddonName field value if set, zero value otherwise.
func (o *LinkedAddonEnvironmentView) GetAddonName() string {
	if o == nil || o.AddonName == nil {
		var ret string
		return ret
	}
	return *o.AddonName
}

// GetAddonNameOk returns a tuple with the AddonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAddonEnvironmentView) GetAddonNameOk() (*string, bool) {
	if o == nil || o.AddonName == nil {
		return nil, false
	}
	return o.AddonName, true
}

// HasAddonName returns a boolean if a field has been set.
func (o *LinkedAddonEnvironmentView) HasAddonName() bool {
	if o != nil && o.AddonName != nil {
		return true
	}

	return false
}

// SetAddonName gets a reference to the given string and assigns it to the AddonName field.
func (o *LinkedAddonEnvironmentView) SetAddonName(v string) {
	o.AddonName = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *LinkedAddonEnvironmentView) GetEnv() []AddonEnvironmentView {
	if o == nil || o.Env == nil {
		var ret []AddonEnvironmentView
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkedAddonEnvironmentView) GetEnvOk() (*[]AddonEnvironmentView, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *LinkedAddonEnvironmentView) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []AddonEnvironmentView and assigns it to the Env field.
func (o *LinkedAddonEnvironmentView) SetEnv(v []AddonEnvironmentView) {
	o.Env = &v
}

func (o LinkedAddonEnvironmentView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProviderId != nil {
		toSerialize["provider_id"] = o.ProviderId
	}
	if o.AddonId != nil {
		toSerialize["addon_id"] = o.AddonId
	}
	if o.AddonName != nil {
		toSerialize["addon_name"] = o.AddonName
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	return json.Marshal(toSerialize)
}

type NullableLinkedAddonEnvironmentView struct {
	value *LinkedAddonEnvironmentView
	isSet bool
}

func (v NullableLinkedAddonEnvironmentView) Get() *LinkedAddonEnvironmentView {
	return v.value
}

func (v *NullableLinkedAddonEnvironmentView) Set(val *LinkedAddonEnvironmentView) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkedAddonEnvironmentView) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkedAddonEnvironmentView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkedAddonEnvironmentView(val *LinkedAddonEnvironmentView) *NullableLinkedAddonEnvironmentView {
	return &NullableLinkedAddonEnvironmentView{value: val, isSet: true}
}

func (v NullableLinkedAddonEnvironmentView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkedAddonEnvironmentView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
