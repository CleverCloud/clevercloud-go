/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// PaymentMethodView struct for PaymentMethodView
type PaymentMethodView struct {
	OwnerId        *string `json:"ownerId,omitempty"`
	Type           *string `json:"type,omitempty"`
	Token          *string `json:"token,omitempty"`
	ImageUrl       *string `json:"imageUrl,omitempty"`
	IsDefault      *bool   `json:"isDefault,omitempty"`
	HolderName     *string `json:"holderName,omitempty"`
	Number         *string `json:"number,omitempty"`
	ExpirationDate *string `json:"expirationDate,omitempty"`
	IsExpired      *bool   `json:"isExpired,omitempty"`
	CardType       *string `json:"cardType,omitempty"`
	Email          *string `json:"email,omitempty"`
	BankCode       *string `json:"bankCode,omitempty"`
	BranchCode     *string `json:"branchCode,omitempty"`
	Country        *string `json:"country,omitempty"`
	Fingerprint    *string `json:"fingerprint,omitempty"`
}

// NewPaymentMethodView instantiates a new PaymentMethodView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodView() *PaymentMethodView {
	this := PaymentMethodView{}
	return &this
}

// NewPaymentMethodViewWithDefaults instantiates a new PaymentMethodView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodViewWithDefaults() *PaymentMethodView {
	this := PaymentMethodView{}
	return &this
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *PaymentMethodView) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *PaymentMethodView) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *PaymentMethodView) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PaymentMethodView) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PaymentMethodView) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PaymentMethodView) SetType(v string) {
	o.Type = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PaymentMethodView) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PaymentMethodView) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PaymentMethodView) SetToken(v string) {
	o.Token = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *PaymentMethodView) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *PaymentMethodView) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *PaymentMethodView) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *PaymentMethodView) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *PaymentMethodView) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *PaymentMethodView) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetHolderName returns the HolderName field value if set, zero value otherwise.
func (o *PaymentMethodView) GetHolderName() string {
	if o == nil || o.HolderName == nil {
		var ret string
		return ret
	}
	return *o.HolderName
}

// GetHolderNameOk returns a tuple with the HolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetHolderNameOk() (*string, bool) {
	if o == nil || o.HolderName == nil {
		return nil, false
	}
	return o.HolderName, true
}

// HasHolderName returns a boolean if a field has been set.
func (o *PaymentMethodView) HasHolderName() bool {
	if o != nil && o.HolderName != nil {
		return true
	}

	return false
}

// SetHolderName gets a reference to the given string and assigns it to the HolderName field.
func (o *PaymentMethodView) SetHolderName(v string) {
	o.HolderName = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *PaymentMethodView) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *PaymentMethodView) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *PaymentMethodView) SetNumber(v string) {
	o.Number = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *PaymentMethodView) GetExpirationDate() string {
	if o == nil || o.ExpirationDate == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetExpirationDateOk() (*string, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *PaymentMethodView) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *PaymentMethodView) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetIsExpired returns the IsExpired field value if set, zero value otherwise.
func (o *PaymentMethodView) GetIsExpired() bool {
	if o == nil || o.IsExpired == nil {
		var ret bool
		return ret
	}
	return *o.IsExpired
}

// GetIsExpiredOk returns a tuple with the IsExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetIsExpiredOk() (*bool, bool) {
	if o == nil || o.IsExpired == nil {
		return nil, false
	}
	return o.IsExpired, true
}

// HasIsExpired returns a boolean if a field has been set.
func (o *PaymentMethodView) HasIsExpired() bool {
	if o != nil && o.IsExpired != nil {
		return true
	}

	return false
}

// SetIsExpired gets a reference to the given bool and assigns it to the IsExpired field.
func (o *PaymentMethodView) SetIsExpired(v bool) {
	o.IsExpired = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *PaymentMethodView) GetCardType() string {
	if o == nil || o.CardType == nil {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetCardTypeOk() (*string, bool) {
	if o == nil || o.CardType == nil {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *PaymentMethodView) HasCardType() bool {
	if o != nil && o.CardType != nil {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *PaymentMethodView) SetCardType(v string) {
	o.CardType = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PaymentMethodView) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PaymentMethodView) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PaymentMethodView) SetEmail(v string) {
	o.Email = &v
}

// GetBankCode returns the BankCode field value if set, zero value otherwise.
func (o *PaymentMethodView) GetBankCode() string {
	if o == nil || o.BankCode == nil {
		var ret string
		return ret
	}
	return *o.BankCode
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetBankCodeOk() (*string, bool) {
	if o == nil || o.BankCode == nil {
		return nil, false
	}
	return o.BankCode, true
}

// HasBankCode returns a boolean if a field has been set.
func (o *PaymentMethodView) HasBankCode() bool {
	if o != nil && o.BankCode != nil {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given string and assigns it to the BankCode field.
func (o *PaymentMethodView) SetBankCode(v string) {
	o.BankCode = &v
}

// GetBranchCode returns the BranchCode field value if set, zero value otherwise.
func (o *PaymentMethodView) GetBranchCode() string {
	if o == nil || o.BranchCode == nil {
		var ret string
		return ret
	}
	return *o.BranchCode
}

// GetBranchCodeOk returns a tuple with the BranchCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetBranchCodeOk() (*string, bool) {
	if o == nil || o.BranchCode == nil {
		return nil, false
	}
	return o.BranchCode, true
}

// HasBranchCode returns a boolean if a field has been set.
func (o *PaymentMethodView) HasBranchCode() bool {
	if o != nil && o.BranchCode != nil {
		return true
	}

	return false
}

// SetBranchCode gets a reference to the given string and assigns it to the BranchCode field.
func (o *PaymentMethodView) SetBranchCode(v string) {
	o.BranchCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PaymentMethodView) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PaymentMethodView) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *PaymentMethodView) SetCountry(v string) {
	o.Country = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *PaymentMethodView) GetFingerprint() string {
	if o == nil || o.Fingerprint == nil {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodView) GetFingerprintOk() (*string, bool) {
	if o == nil || o.Fingerprint == nil {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *PaymentMethodView) HasFingerprint() bool {
	if o != nil && o.Fingerprint != nil {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *PaymentMethodView) SetFingerprint(v string) {
	o.Fingerprint = &v
}

func (o PaymentMethodView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.ImageUrl != nil {
		toSerialize["imageUrl"] = o.ImageUrl
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.HolderName != nil {
		toSerialize["holderName"] = o.HolderName
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.ExpirationDate != nil {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if o.IsExpired != nil {
		toSerialize["isExpired"] = o.IsExpired
	}
	if o.CardType != nil {
		toSerialize["cardType"] = o.CardType
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.BankCode != nil {
		toSerialize["bankCode"] = o.BankCode
	}
	if o.BranchCode != nil {
		toSerialize["branchCode"] = o.BranchCode
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.Fingerprint != nil {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentMethodView struct {
	value *PaymentMethodView
	isSet bool
}

func (v NullablePaymentMethodView) Get() *PaymentMethodView {
	return v.value
}

func (v *NullablePaymentMethodView) Set(val *PaymentMethodView) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodView) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodView(val *PaymentMethodView) *NullablePaymentMethodView {
	return &NullablePaymentMethodView{value: val, isSet: true}
}

func (v NullablePaymentMethodView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
