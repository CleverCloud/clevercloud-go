/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// AddonApplicationInfo struct for AddonApplicationInfo
type AddonApplicationInfo struct {
	Id          *string            `json:"id,omitempty"`
	Name        *string            `json:"name,omitempty"`
	Config      *map[string]string `json:"config,omitempty"`
	CallbackUrl *string            `json:"callback_url,omitempty"`
	OwnerEmail  *string            `json:"owner_email,omitempty"`
	OwnerId     *string            `json:"owner_id,omitempty"`
	OwnerName   *string            `json:"owner_name,omitempty"`
	OwnerEmails *[]string          `json:"owner_emails,omitempty"`
	Region      *string            `json:"region,omitempty"`
	Domains     *[]string          `json:"domains,omitempty"`
}

// NewAddonApplicationInfo instantiates a new AddonApplicationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonApplicationInfo() *AddonApplicationInfo {
	this := AddonApplicationInfo{}
	return &this
}

// NewAddonApplicationInfoWithDefaults instantiates a new AddonApplicationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonApplicationInfoWithDefaults() *AddonApplicationInfo {
	this := AddonApplicationInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddonApplicationInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddonApplicationInfo) SetName(v string) {
	o.Name = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetConfig() map[string]string {
	if o == nil || o.Config == nil {
		var ret map[string]string
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetConfigOk() (*map[string]string, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]string and assigns it to the Config field.
func (o *AddonApplicationInfo) SetConfig(v map[string]string) {
	o.Config = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *AddonApplicationInfo) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetOwnerEmail returns the OwnerEmail field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetOwnerEmail() string {
	if o == nil || o.OwnerEmail == nil {
		var ret string
		return ret
	}
	return *o.OwnerEmail
}

// GetOwnerEmailOk returns a tuple with the OwnerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetOwnerEmailOk() (*string, bool) {
	if o == nil || o.OwnerEmail == nil {
		return nil, false
	}
	return o.OwnerEmail, true
}

// HasOwnerEmail returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasOwnerEmail() bool {
	if o != nil && o.OwnerEmail != nil {
		return true
	}

	return false
}

// SetOwnerEmail gets a reference to the given string and assigns it to the OwnerEmail field.
func (o *AddonApplicationInfo) SetOwnerEmail(v string) {
	o.OwnerEmail = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *AddonApplicationInfo) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetOwnerName() string {
	if o == nil || o.OwnerName == nil {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetOwnerNameOk() (*string, bool) {
	if o == nil || o.OwnerName == nil {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasOwnerName() bool {
	if o != nil && o.OwnerName != nil {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *AddonApplicationInfo) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetOwnerEmails returns the OwnerEmails field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetOwnerEmails() []string {
	if o == nil || o.OwnerEmails == nil {
		var ret []string
		return ret
	}
	return *o.OwnerEmails
}

// GetOwnerEmailsOk returns a tuple with the OwnerEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetOwnerEmailsOk() (*[]string, bool) {
	if o == nil || o.OwnerEmails == nil {
		return nil, false
	}
	return o.OwnerEmails, true
}

// HasOwnerEmails returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasOwnerEmails() bool {
	if o != nil && o.OwnerEmails != nil {
		return true
	}

	return false
}

// SetOwnerEmails gets a reference to the given []string and assigns it to the OwnerEmails field.
func (o *AddonApplicationInfo) SetOwnerEmails(v []string) {
	o.OwnerEmails = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AddonApplicationInfo) SetRegion(v string) {
	o.Region = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *AddonApplicationInfo) GetDomains() []string {
	if o == nil || o.Domains == nil {
		var ret []string
		return ret
	}
	return *o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonApplicationInfo) GetDomainsOk() (*[]string, bool) {
	if o == nil || o.Domains == nil {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *AddonApplicationInfo) HasDomains() bool {
	if o != nil && o.Domains != nil {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *AddonApplicationInfo) SetDomains(v []string) {
	o.Domains = &v
}

func (o AddonApplicationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.CallbackUrl != nil {
		toSerialize["callback_url"] = o.CallbackUrl
	}
	if o.OwnerEmail != nil {
		toSerialize["owner_email"] = o.OwnerEmail
	}
	if o.OwnerId != nil {
		toSerialize["owner_id"] = o.OwnerId
	}
	if o.OwnerName != nil {
		toSerialize["owner_name"] = o.OwnerName
	}
	if o.OwnerEmails != nil {
		toSerialize["owner_emails"] = o.OwnerEmails
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Domains != nil {
		toSerialize["domains"] = o.Domains
	}
	return json.Marshal(toSerialize)
}

type NullableAddonApplicationInfo struct {
	value *AddonApplicationInfo
	isSet bool
}

func (v NullableAddonApplicationInfo) Get() *AddonApplicationInfo {
	return v.value
}

func (v *NullableAddonApplicationInfo) Set(val *AddonApplicationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonApplicationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonApplicationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonApplicationInfo(val *AddonApplicationInfo) *NullableAddonApplicationInfo {
	return &NullableAddonApplicationInfo{value: val, isSet: true}
}

func (v NullableAddonApplicationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonApplicationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
