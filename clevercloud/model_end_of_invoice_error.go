/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// EndOfInvoiceError struct for EndOfInvoiceError
type EndOfInvoiceError struct {
	Type     *string            `json:"type,omitempty"`
	Message  *string            `json:"message,omitempty"`
	Messages *map[string]string `json:"messages,omitempty"`
}

// NewEndOfInvoiceError instantiates a new EndOfInvoiceError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndOfInvoiceError() *EndOfInvoiceError {
	this := EndOfInvoiceError{}
	return &this
}

// NewEndOfInvoiceErrorWithDefaults instantiates a new EndOfInvoiceError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndOfInvoiceErrorWithDefaults() *EndOfInvoiceError {
	this := EndOfInvoiceError{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EndOfInvoiceError) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceError) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EndOfInvoiceError) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EndOfInvoiceError) SetType(v string) {
	o.Type = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *EndOfInvoiceError) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceError) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *EndOfInvoiceError) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *EndOfInvoiceError) SetMessage(v string) {
	o.Message = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *EndOfInvoiceError) GetMessages() map[string]string {
	if o == nil || o.Messages == nil {
		var ret map[string]string
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndOfInvoiceError) GetMessagesOk() (*map[string]string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *EndOfInvoiceError) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given map[string]string and assigns it to the Messages field.
func (o *EndOfInvoiceError) SetMessages(v map[string]string) {
	o.Messages = &v
}

func (o EndOfInvoiceError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableEndOfInvoiceError struct {
	value *EndOfInvoiceError
	isSet bool
}

func (v NullableEndOfInvoiceError) Get() *EndOfInvoiceError {
	return v.value
}

func (v *NullableEndOfInvoiceError) Set(val *EndOfInvoiceError) {
	v.value = val
	v.isSet = true
}

func (v NullableEndOfInvoiceError) IsSet() bool {
	return v.isSet
}

func (v *NullableEndOfInvoiceError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndOfInvoiceError(val *EndOfInvoiceError) *NullableEndOfInvoiceError {
	return &NullableEndOfInvoiceError{value: val, isSet: true}
}

func (v NullableEndOfInvoiceError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndOfInvoiceError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
