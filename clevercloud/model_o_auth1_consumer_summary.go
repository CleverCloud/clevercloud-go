/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// OAuth1ConsumerSummary struct for OAuth1ConsumerSummary
type OAuth1ConsumerSummary struct {
	Name    *string `json:"name,omitempty"`
	Key     *string `json:"key,omitempty"`
	Picture *string `json:"picture,omitempty"`
}

// NewOAuth1ConsumerSummary instantiates a new OAuth1ConsumerSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuth1ConsumerSummary() *OAuth1ConsumerSummary {
	this := OAuth1ConsumerSummary{}
	return &this
}

// NewOAuth1ConsumerSummaryWithDefaults instantiates a new OAuth1ConsumerSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuth1ConsumerSummaryWithDefaults() *OAuth1ConsumerSummary {
	this := OAuth1ConsumerSummary{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OAuth1ConsumerSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth1ConsumerSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OAuth1ConsumerSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OAuth1ConsumerSummary) SetName(v string) {
	o.Name = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *OAuth1ConsumerSummary) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth1ConsumerSummary) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *OAuth1ConsumerSummary) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *OAuth1ConsumerSummary) SetKey(v string) {
	o.Key = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *OAuth1ConsumerSummary) GetPicture() string {
	if o == nil || o.Picture == nil {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth1ConsumerSummary) GetPictureOk() (*string, bool) {
	if o == nil || o.Picture == nil {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *OAuth1ConsumerSummary) HasPicture() bool {
	if o != nil && o.Picture != nil {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *OAuth1ConsumerSummary) SetPicture(v string) {
	o.Picture = &v
}

func (o OAuth1ConsumerSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Picture != nil {
		toSerialize["picture"] = o.Picture
	}
	return json.Marshal(toSerialize)
}

type NullableOAuth1ConsumerSummary struct {
	value *OAuth1ConsumerSummary
	isSet bool
}

func (v NullableOAuth1ConsumerSummary) Get() *OAuth1ConsumerSummary {
	return v.value
}

func (v *NullableOAuth1ConsumerSummary) Set(val *OAuth1ConsumerSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuth1ConsumerSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuth1ConsumerSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuth1ConsumerSummary(val *OAuth1ConsumerSummary) *NullableOAuth1ConsumerSummary {
	return &NullableOAuth1ConsumerSummary{value: val, isSet: true}
}

func (v NullableOAuth1ConsumerSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuth1ConsumerSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
