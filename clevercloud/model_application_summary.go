/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// ApplicationSummary struct for ApplicationSummary
type ApplicationSummary struct {
	Id              *string `json:"id,omitempty"`
	Name            *string `json:"name,omitempty"`
	InstanceType    *string `json:"instanceType,omitempty"`
	InstanceVariant *string `json:"instanceVariant,omitempty"`
	VariantSlug     *string `json:"variantSlug,omitempty"`
	Archived        *bool   `json:"archived,omitempty"`
	Homogeneous     *bool   `json:"homogeneous,omitempty"`
	VariantLogoUrl  *string `json:"variantLogoUrl,omitempty"`
	State           *string `json:"state,omitempty"`
	Commit          *string `json:"commit,omitempty"`
}

// NewApplicationSummary instantiates a new ApplicationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSummary() *ApplicationSummary {
	this := ApplicationSummary{}
	return &this
}

// NewApplicationSummaryWithDefaults instantiates a new ApplicationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSummaryWithDefaults() *ApplicationSummary {
	this := ApplicationSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApplicationSummary) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApplicationSummary) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApplicationSummary) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApplicationSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApplicationSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApplicationSummary) SetName(v string) {
	o.Name = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *ApplicationSummary) GetInstanceType() string {
	if o == nil || o.InstanceType == nil {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetInstanceTypeOk() (*string, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ApplicationSummary) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *ApplicationSummary) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetInstanceVariant returns the InstanceVariant field value if set, zero value otherwise.
func (o *ApplicationSummary) GetInstanceVariant() string {
	if o == nil || o.InstanceVariant == nil {
		var ret string
		return ret
	}
	return *o.InstanceVariant
}

// GetInstanceVariantOk returns a tuple with the InstanceVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetInstanceVariantOk() (*string, bool) {
	if o == nil || o.InstanceVariant == nil {
		return nil, false
	}
	return o.InstanceVariant, true
}

// HasInstanceVariant returns a boolean if a field has been set.
func (o *ApplicationSummary) HasInstanceVariant() bool {
	if o != nil && o.InstanceVariant != nil {
		return true
	}

	return false
}

// SetInstanceVariant gets a reference to the given string and assigns it to the InstanceVariant field.
func (o *ApplicationSummary) SetInstanceVariant(v string) {
	o.InstanceVariant = &v
}

// GetVariantSlug returns the VariantSlug field value if set, zero value otherwise.
func (o *ApplicationSummary) GetVariantSlug() string {
	if o == nil || o.VariantSlug == nil {
		var ret string
		return ret
	}
	return *o.VariantSlug
}

// GetVariantSlugOk returns a tuple with the VariantSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetVariantSlugOk() (*string, bool) {
	if o == nil || o.VariantSlug == nil {
		return nil, false
	}
	return o.VariantSlug, true
}

// HasVariantSlug returns a boolean if a field has been set.
func (o *ApplicationSummary) HasVariantSlug() bool {
	if o != nil && o.VariantSlug != nil {
		return true
	}

	return false
}

// SetVariantSlug gets a reference to the given string and assigns it to the VariantSlug field.
func (o *ApplicationSummary) SetVariantSlug(v string) {
	o.VariantSlug = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *ApplicationSummary) GetArchived() bool {
	if o == nil || o.Archived == nil {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetArchivedOk() (*bool, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *ApplicationSummary) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *ApplicationSummary) SetArchived(v bool) {
	o.Archived = &v
}

// GetHomogeneous returns the Homogeneous field value if set, zero value otherwise.
func (o *ApplicationSummary) GetHomogeneous() bool {
	if o == nil || o.Homogeneous == nil {
		var ret bool
		return ret
	}
	return *o.Homogeneous
}

// GetHomogeneousOk returns a tuple with the Homogeneous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetHomogeneousOk() (*bool, bool) {
	if o == nil || o.Homogeneous == nil {
		return nil, false
	}
	return o.Homogeneous, true
}

// HasHomogeneous returns a boolean if a field has been set.
func (o *ApplicationSummary) HasHomogeneous() bool {
	if o != nil && o.Homogeneous != nil {
		return true
	}

	return false
}

// SetHomogeneous gets a reference to the given bool and assigns it to the Homogeneous field.
func (o *ApplicationSummary) SetHomogeneous(v bool) {
	o.Homogeneous = &v
}

// GetVariantLogoUrl returns the VariantLogoUrl field value if set, zero value otherwise.
func (o *ApplicationSummary) GetVariantLogoUrl() string {
	if o == nil || o.VariantLogoUrl == nil {
		var ret string
		return ret
	}
	return *o.VariantLogoUrl
}

// GetVariantLogoUrlOk returns a tuple with the VariantLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetVariantLogoUrlOk() (*string, bool) {
	if o == nil || o.VariantLogoUrl == nil {
		return nil, false
	}
	return o.VariantLogoUrl, true
}

// HasVariantLogoUrl returns a boolean if a field has been set.
func (o *ApplicationSummary) HasVariantLogoUrl() bool {
	if o != nil && o.VariantLogoUrl != nil {
		return true
	}

	return false
}

// SetVariantLogoUrl gets a reference to the given string and assigns it to the VariantLogoUrl field.
func (o *ApplicationSummary) SetVariantLogoUrl(v string) {
	o.VariantLogoUrl = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApplicationSummary) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApplicationSummary) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ApplicationSummary) SetState(v string) {
	o.State = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *ApplicationSummary) GetCommit() string {
	if o == nil || o.Commit == nil {
		var ret string
		return ret
	}
	return *o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSummary) GetCommitOk() (*string, bool) {
	if o == nil || o.Commit == nil {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *ApplicationSummary) HasCommit() bool {
	if o != nil && o.Commit != nil {
		return true
	}

	return false
}

// SetCommit gets a reference to the given string and assigns it to the Commit field.
func (o *ApplicationSummary) SetCommit(v string) {
	o.Commit = &v
}

func (o ApplicationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.InstanceVariant != nil {
		toSerialize["instanceVariant"] = o.InstanceVariant
	}
	if o.VariantSlug != nil {
		toSerialize["variantSlug"] = o.VariantSlug
	}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	if o.Homogeneous != nil {
		toSerialize["homogeneous"] = o.Homogeneous
	}
	if o.VariantLogoUrl != nil {
		toSerialize["variantLogoUrl"] = o.VariantLogoUrl
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Commit != nil {
		toSerialize["commit"] = o.Commit
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationSummary struct {
	value *ApplicationSummary
	isSet bool
}

func (v NullableApplicationSummary) Get() *ApplicationSummary {
	return v.value
}

func (v *NullableApplicationSummary) Set(val *ApplicationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSummary(val *ApplicationSummary) *NullableApplicationSummary {
	return &NullableApplicationSummary{value: val, isSet: true}
}

func (v NullableApplicationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
