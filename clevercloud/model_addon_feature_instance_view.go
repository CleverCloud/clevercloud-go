/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// AddonFeatureInstanceView struct for AddonFeatureInstanceView
type AddonFeatureInstanceView struct {
	Name            *string `json:"name,omitempty"`
	Type            *string `json:"type,omitempty"`
	Value           *string `json:"value,omitempty"`
	ComputableValue *string `json:"computable_value,omitempty"`
	NameCode        *string `json:"name_code,omitempty"`
}

// NewAddonFeatureInstanceView instantiates a new AddonFeatureInstanceView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddonFeatureInstanceView() *AddonFeatureInstanceView {
	this := AddonFeatureInstanceView{}
	return &this
}

// NewAddonFeatureInstanceViewWithDefaults instantiates a new AddonFeatureInstanceView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddonFeatureInstanceViewWithDefaults() *AddonFeatureInstanceView {
	this := AddonFeatureInstanceView{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddonFeatureInstanceView) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonFeatureInstanceView) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddonFeatureInstanceView) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddonFeatureInstanceView) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AddonFeatureInstanceView) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonFeatureInstanceView) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AddonFeatureInstanceView) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AddonFeatureInstanceView) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AddonFeatureInstanceView) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonFeatureInstanceView) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AddonFeatureInstanceView) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AddonFeatureInstanceView) SetValue(v string) {
	o.Value = &v
}

// GetComputableValue returns the ComputableValue field value if set, zero value otherwise.
func (o *AddonFeatureInstanceView) GetComputableValue() string {
	if o == nil || o.ComputableValue == nil {
		var ret string
		return ret
	}
	return *o.ComputableValue
}

// GetComputableValueOk returns a tuple with the ComputableValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonFeatureInstanceView) GetComputableValueOk() (*string, bool) {
	if o == nil || o.ComputableValue == nil {
		return nil, false
	}
	return o.ComputableValue, true
}

// HasComputableValue returns a boolean if a field has been set.
func (o *AddonFeatureInstanceView) HasComputableValue() bool {
	if o != nil && o.ComputableValue != nil {
		return true
	}

	return false
}

// SetComputableValue gets a reference to the given string and assigns it to the ComputableValue field.
func (o *AddonFeatureInstanceView) SetComputableValue(v string) {
	o.ComputableValue = &v
}

// GetNameCode returns the NameCode field value if set, zero value otherwise.
func (o *AddonFeatureInstanceView) GetNameCode() string {
	if o == nil || o.NameCode == nil {
		var ret string
		return ret
	}
	return *o.NameCode
}

// GetNameCodeOk returns a tuple with the NameCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddonFeatureInstanceView) GetNameCodeOk() (*string, bool) {
	if o == nil || o.NameCode == nil {
		return nil, false
	}
	return o.NameCode, true
}

// HasNameCode returns a boolean if a field has been set.
func (o *AddonFeatureInstanceView) HasNameCode() bool {
	if o != nil && o.NameCode != nil {
		return true
	}

	return false
}

// SetNameCode gets a reference to the given string and assigns it to the NameCode field.
func (o *AddonFeatureInstanceView) SetNameCode(v string) {
	o.NameCode = &v
}

func (o AddonFeatureInstanceView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ComputableValue != nil {
		toSerialize["computable_value"] = o.ComputableValue
	}
	if o.NameCode != nil {
		toSerialize["name_code"] = o.NameCode
	}
	return json.Marshal(toSerialize)
}

type NullableAddonFeatureInstanceView struct {
	value *AddonFeatureInstanceView
	isSet bool
}

func (v NullableAddonFeatureInstanceView) Get() *AddonFeatureInstanceView {
	return v.value
}

func (v *NullableAddonFeatureInstanceView) Set(val *AddonFeatureInstanceView) {
	v.value = val
	v.isSet = true
}

func (v NullableAddonFeatureInstanceView) IsSet() bool {
	return v.isSet
}

func (v *NullableAddonFeatureInstanceView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddonFeatureInstanceView(val *AddonFeatureInstanceView) *NullableAddonFeatureInstanceView {
	return &NullableAddonFeatureInstanceView{value: val, isSet: true}
}

func (v NullableAddonFeatureInstanceView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddonFeatureInstanceView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
