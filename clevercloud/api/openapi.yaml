openapi: 3.0.1
info:
  contact:
    email: support@clever-cloud.com
    name: Support
    url: https://www.clever-cloud.com/doc/get-help/support
  description: Public API for managing Clever-Cloud data and products
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.clever-cloud.com/terms-of-use/
  title: Clever-Cloud API
  version: 1.0.1
servers:
- description: The production API server
  url: https://api.clever-cloud.com/v2
paths:
  /authorize:
    post:
      operationId: postAuthorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAuthorization'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Auth
  /session/login:
    get:
      operationId: getLoginForm
      parameters:
      - explode: true
        in: query
        name: secondaryEmailKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: deletionKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromAuthorize
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
    post:
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  type: string
                pass:
                  type: string
                from_authorize:
                  type: string
                cli_token:
                  type: string
                clever_flavor:
                  type: string
                oauth_token:
                  type: string
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
  /session/signup:
    get:
      operationId: getSignupForm
      parameters:
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: url_next
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
  /session/mfa_login:
    post:
      operationId: mfaLogin
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                mfa_kind:
                  type: string
                mfa_attempt:
                  type: string
                email:
                  type: string
                auth_id:
                  type: string
                from_authorize:
                  type: string
                cli_token:
                  type: string
                clever_flavor:
                  type: string
                oauth_token:
                  type: string
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/OAuthApplicationView'
                type: array
      tags:
      - User
  /sessions/login:
    get:
      operationId: getLoginForm_1
      parameters:
      - explode: true
        in: query
        name: secondaryEmailKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: deletionKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromAuthorize
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
    post:
      operationId: login_1
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  type: string
                pass:
                  type: string
                from_authorize:
                  type: string
                cli_token:
                  type: string
                clever_flavor:
                  type: string
                oauth_token:
                  type: string
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
  /sessions/signup:
    get:
      operationId: getSignupForm_1
      parameters:
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: url_next
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
  /sessions/mfa_login:
    post:
      operationId: mfaLogin_1
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                mfa_kind:
                  type: string
                mfa_attempt:
                  type: string
                email:
                  type: string
                auth_id:
                  type: string
                from_authorize:
                  type: string
                cli_token:
                  type: string
                clever_flavor:
                  type: string
                oauth_token:
                  type: string
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                items:
                  $ref: '#/components/schemas/OAuthApplicationView'
                type: array
      tags:
      - User
  /validation/vat/{key}:
    get:
      operationId: validate
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Payment
  /github/link:
    delete:
      operationId: deleteGithubLink
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - User
    get:
      operationId: getGithubLink
      parameters:
      - explode: true
        in: query
        name: transactionId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - User
  /github:
    get:
      operationId: getGithub
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTransactionView'
      tags:
      - User
  /github/signup:
    get:
      operationId: githubSignup
      parameters:
      - explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromAuthorize
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subscriptionSource
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: terms
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
    post:
      operationId: finsihGithubSignup
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                transactionId:
                  type: string
                name:
                  type: string
                otherId:
                  type: string
                otherEmail:
                  type: string
                password:
                  type: string
                autoLink:
                  type: string
                terms:
                  type: string
                invitationKey:
                  type: string
                mfa_kind:
                  type: string
                mfa_attempt:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - User
  /github/login:
    get:
      operationId: getGithubLogin
      parameters:
      - explode: true
        in: query
        name: redirectUrl
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromAuthorize
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: subscriptionSource
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
  /github/callback:
    get:
      operationId: getGithubCallback
      parameters:
      - explode: true
        in: cookie
        name: CcOAuthData
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error_description
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: error_uri
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
  /github/keys:
    get:
      operationId: getGithubKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SshKeyView'
                type: array
      tags:
      - User
  /github/emails:
    get:
      operationId: getGithubEmails
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - User
  /github/applications:
    get:
      operationId: getGithubApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuthApplicationView'
                type: array
      tags:
      - User
  /github/username:
    get:
      operationId: getGithubUsername
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - User
  /github/redeploy:
    post:
      operationId: postGithubRedeploy
      parameters:
      - explode: false
        in: header
        name: User-Agent
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Github-Event
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Hub-Signature
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GithubWebhookPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - User
  /oauth/authorize:
    get:
      operationId: authorizeForm
      parameters:
      - explode: true
        in: cookie
        name: ccid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: cookie
        name: cctk
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: ccid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from_oauth
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Auth
    post:
      operationId: authorizeToken
      parameters:
      - explode: true
        in: cookie
        name: ccid
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: cookie
        name: cctk
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                almighty:
                  type: string
                access_organisations:
                  type: string
                manage_organisations:
                  type: string
                manage_organisations_services:
                  type: string
                manage_organisations_applications:
                  type: string
                manage_organisations_members:
                  type: string
                access_organisations_bills:
                  type: string
                access_organisations_credit_count:
                  type: string
                access_organisations_consumption_statistics:
                  type: string
                access_personal_information:
                  type: string
                manage_personal_information:
                  type: string
                manage_ssh_keys:
                  type: string
              type: object
      responses:
        default:
          content:
            text/html: {}
            application/json: {}
          description: default response
      tags:
      - Auth
  /oauth/rights:
    get:
      operationId: getAvailableRights
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Auth
  /oauth/login_data:
    get:
      operationId: getLoginData
      parameters:
      - explode: true
        in: query
        name: oauth_key
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Auth
  /oauth/request_token_query:
    post:
      operationId: postReqTokenRequestQueryString
      parameters:
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token_secret
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback_confirmed
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/x-www-form-urlencoded:
              schema:
                type: string
      tags:
      - Auth
  /oauth/request_token:
    post:
      operationId: postReqTokenRequest
      parameters:
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                oauth_consumer_key:
                  type: string
                oauth_token:
                  type: string
                oauth_signature_method:
                  type: string
                oauth_signature:
                  type: string
                oauth_timestamp:
                  type: string
                oauth_nonce:
                  type: string
                oauth_version:
                  type: string
                oauth_verifier:
                  type: string
                oauth_callback:
                  type: string
                oauth_token_secret:
                  type: string
                oauth_callback_confirmed:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/x-www-form-urlencoded:
              schema:
                type: string
      tags:
      - Auth
  /oauth/access_token_query:
    post:
      operationId: postAccessTokenRequestQuery
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token_secret
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback_confirmed
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/x-www-form-urlencoded: {}
          description: default response
      tags:
      - Auth
  /oauth/access_token:
    post:
      operationId: postAccessTokenRequest
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                oauth_consumer_key:
                  type: string
                oauth_token:
                  type: string
                oauth_signature_method:
                  type: string
                oauth_signature:
                  type: string
                oauth_timestamp:
                  type: string
                oauth_nonce:
                  type: string
                oauth_version:
                  type: string
                oauth_verifier:
                  type: string
                oauth_callback:
                  type: string
                oauth_token_secret:
                  type: string
                oauth_callback_confirmed:
                  type: string
              type: object
      responses:
        default:
          content:
            application/x-www-form-urlencoded: {}
          description: default response
      tags:
      - Auth
  /organisations/{id}/avatar:
    put:
      operationId: setOrgaAvatar
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlView'
      tags:
      - Organisation
  /organisations/{id}:
    delete:
      operationId: deleteOrganisation
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
    get:
      operationId: getOrganisation
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationView'
      tags:
      - Organisation
    put:
      operationId: editOrganisation
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeOrganisation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationView'
      tags:
      - Organisation
  /organisations/{id}/deployments:
    get:
      operationId: getDeploymentsForAllApps
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/payment-info:
    get:
      operationId: getPaymentInfoForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoView'
      tags:
      - Organisation
  /organisations/{id}/instances:
    get:
      operationId: getInstancesForAllAppsForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/namespaces:
    get:
      operationId: getNamespaces
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NamespaceView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/tags:
    get:
      operationId: getProviderTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}:
    delete:
      operationId: deleteProvider
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    get:
      operationId: getProviderInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderInfoView'
      tags:
      - Organisation
    put:
      operationId: updateProviderInfos
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProviderInfos'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderInfoView'
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/features:
    get:
      operationId: getProviderFeatures
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonFeatureView'
                type: array
      tags:
      - Organisation
    post:
      operationId: addProviderFeature
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonFeature'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonFeatureView'
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/features/{featureId}:
    delete:
      operationId: deleteProviderFeature
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/plans:
    get:
      operationId: getProviderPlans
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonPlanView'
                type: array
      tags:
      - Organisation
    post:
      operationId: addProviderPlan
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonPlan'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonPlanView'
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/plans/{planId}:
    delete:
      operationId: deleteProviderPlan
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    get:
      operationId: getProviderPlan
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonPlanView'
      tags:
      - Organisation
    put:
      operationId: editProviderPlan
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonPlan'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonPlanView'
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}:
    delete:
      operationId: deleteProviderPlanFeature
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    put:
      operationId: editProviderPlanFeature
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddonFeatureInstanceView'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonPlanView'
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/testers:
    post:
      operationId: addBetaTester
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/addonproviders/{providerId}/sso:
    get:
      operationId: getSSODataForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderSSOData'
      tags:
      - Organisation
  /organisations/{id}/addonproviders:
    get:
      operationId: getProvidersInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonProviderInfoFullView'
                type: array
      tags:
      - Organisation
    post:
      operationId: createProvider
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvider'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderInfoFullView'
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/tags/{tag}:
    delete:
      operationId: deleteAddonTagByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
    put:
      operationId: addAddonTagByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/tags:
    get:
      operationId: getAddonTagsByOrgaIdAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
    put:
      operationId: replaceAddonTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/sso:
    get:
      operationId: getAddonSSODataForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderSSOData'
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}:
    delete:
      operationId: deprovisionAddonByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
    get:
      operationId: getAddonByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Organisation
    put:
      operationId: updateAddonInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/applications:
    get:
      operationId: getApplicationsLinkedToAddonByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/env:
    get:
      operationId: getAddonEnvByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonEnvironmentView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/instances:
    get:
      operationId: getAddonInstances
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: withDeleted
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuperNovaInstanceView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/instances/{instanceId}:
    get:
      operationId: getAddonInstance
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/migrations:
    get:
      operationId: getAddonMigrations
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
    post:
      operationId: changePlanByOrgaAndAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabePlanChange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/migrations/preorders:
    get:
      operationId: preorderMigration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: planId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/addons/preorders:
    post:
      operationId: preorderAddonByOrgaId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Organisation
  /organisations/{id}/addons:
    get:
      operationId: getAddonsByOrgaId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonView'
                type: array
      tags:
      - Organisation
    post:
      operationId: provisionAddonByOrgaId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConfirmationErrorMessage'
      tags:
      - Organisation
  /organisations/{id}/addons/{addonId}/migrations/{migrationId}:
    delete:
      operationId: abortAddonMigration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: migrationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
    get:
      operationId: getAddonMigration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: migrationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/dependencies:
    get:
      operationId: getApplicationDependenciesByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/dependencies/env:
    get:
      operationId: getApplicationDependenciesEnvByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/dependencies/{dependencyId}:
    delete:
      operationId: deleteApplicationDependencyByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    put:
      operationId: addApplicationDependencyByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/dependents:
    get:
      operationId: getApplicationDependentsByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances:
    delete:
      operationId: cancelApplicationDeploymentForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/deployments:
    get:
      operationId: getApplicationDeploymentsForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeploymentView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/deployments/{deploymentId}:
    get:
      operationId: getApplicationDeploymentForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/tags:
    get:
      operationId: getApplicationTagsByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
    put:
      operationId: replaceApplicationTags
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/tags/{tag}:
    delete:
      operationId: deleteApplicationTagByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
    put:
      operationId: addApplicationTagByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/vhosts/{domain}:
    delete:
      operationId: removeVhostsByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
    put:
      operationId: addVhostsByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/vhosts/favourite:
    delete:
      operationId: unmarkFavouriteVhostByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    get:
      operationId: getFavouriteVhostByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VhostView'
      tags:
      - Organisation
    put:
      operationId: markFavouriteVhostByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VhostView'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VhostView'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/vhosts:
    get:
      operationId: getVhostsByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VhostView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}:
    delete:
      operationId: deleteApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
    get:
      operationId: getApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Organisation
    put:
      operationId: editApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Organisation
  /organisations/{id}/applications:
    get:
      operationId: getAllApplicationsByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: instanceId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Organisation
    post:
      operationId: addApplicationByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/branches:
    get:
      operationId: getApplicationBranchesByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/branch:
    put:
      operationId: setApplicationBranchByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeBranch'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/instances:
    delete:
      operationId: undeployApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
    get:
      operationId: getApplicationInstancesByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: withDeleted
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuperNovaInstanceView'
                type: array
      tags:
      - Organisation
    post:
      operationId: redeployApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: commit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: useCache
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/instances/{instanceId}:
    get:
      operationId: getApplicationInstanceByOrgaAndAppAndInstanceId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/addons:
    get:
      operationId: getAddonsLinkedToApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonView'
                type: array
      tags:
      - Organisation
    post:
      operationId: linkAddonToApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/addons/{addonId}:
    delete:
      operationId: unlinkAddonFromApplicationByOrgaAndAppAnddAddonId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/tcpRedirs:
    get:
      operationId: getTcpRedirs
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TcpRedirView'
                type: array
        "402":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRendering'
                type: array
      tags:
      - Organisation
    post:
      operationId: addTcpRedir
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: payment
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeNamespace'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TcpRedirView'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/tcpRedirs/{sourcePort}:
    delete:
      operationId: removeTcpRedir
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: sourcePort
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: namespace
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/env/{envName}:
    delete:
      operationId: removeApplicationEnvByOrgaAndAppIdAndEnvName
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Organisation
    put:
      operationId: editApplicationEnvByOrgaAndAppIdAndEnvName
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeValue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/env:
    get:
      operationId: getApplicationEnvByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonEnvironmentView'
                type: array
      tags:
      - Organisation
    put:
      operationId: editApplicationEnvironmentByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/addons/env:
    get:
      operationId: getEnvOfAddonsLinkedToApplicationByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LinkedAddonEnvironmentView'
                type: array
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/exposed_env:
    get:
      operationId: getExposedEnvByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
    put:
      operationId: updateExposedEnvByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/applications/{appId}/buildflavor:
    put:
      operationId: setBuildInstanceFlavorByOrgaAndAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeBuildFlavor'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations/{id}/consumers/{key}/secret:
    get:
      operationId: getConsumerSecretByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretView'
      tags:
      - Organisation
  /organisations/{id}/consumers/{key}:
    delete:
      operationId: deleteConsumerByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    get:
      operationId: getConsumerByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1ConsumerView'
      tags:
      - Organisation
    put:
      operationId: updateConsumerByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeOAuth1Consumer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1ConsumerView'
      tags:
      - Organisation
  /organisations/{id}/consumers:
    get:
      operationId: getConsumersByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth1ConsumerView'
                type: array
      tags:
      - Organisation
    post:
      operationId: createConsumerByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeOAuth1Consumer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1ConsumerView'
      tags:
      - Organisation
  /organisations/{id}/credits:
    get:
      operationId: getAmountForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropCountView'
      tags:
      - Organisation
  /organisations/{id}/consumptions:
    get:
      operationId: getConsumptionsForOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: appId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: for
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/members/{userId}:
    delete:
      operationId: removeOrganisationMember
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
    put:
      operationId: editOrganisationMember
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeMember'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/members:
    get:
      operationId: getOrganisationMembers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganisationMemberView'
                type: array
      tags:
      - Organisation
    post:
      operationId: addOrganisationMember
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: invitationKey
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeMember'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Organisation
  /organisations/{id}/payments/monthlyinvoice:
    get:
      operationId: getMonthlyInvoiceByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/payments/billings/{bid}.pdf:
    get:
      operationId: getPdfInvoiceByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/pdf: {}
      tags:
      - Organisation
  /organisations/{id}/payments/billings:
    get:
      operationId: getInvoicesByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRendering'
                type: array
      tags:
      - Organisation
    post:
      operationId: buyDropsByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannaBuyPackage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Organisation
  /organisations/{id}/payments/monthlyinvoice/maxcredit:
    put:
      operationId: setMaxCreditsPerMonthByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeMaxCredits'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Organisation
  /organisations/{id}/payments/fullprice/{price}:
    get:
      operationId: getPriceWithTaxByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: price
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceWithTaxInfo'
      tags:
      - Organisation
  /organisations/{id}/payments/billings/{bid}:
    delete:
      operationId: deletePurchaseOrderByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    get:
      operationId: getInvoiceByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Organisation
    put:
      operationId: choosePaymentProviderByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProviderSelection'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextInPaymentFlow'
      tags:
      - Organisation
  /organisations/{id}/payments/recurring:
    delete:
      operationId: deleteRecurrentPaymentByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
    get:
      operationId: getRecurrentPaymentByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurrentPaymentView'
      tags:
      - Organisation
  /organisations/{id}/payments/tokens/stripe:
    get:
      operationId: getStripeTokenByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BraintreeToken'
      tags:
      - Organisation
  /organisations/{id}/payments/methods/{mId}:
    delete:
      operationId: deletePaymentMethodByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: mId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            application/json: {}
      tags:
      - Organisation
  /organisations/{id}/payments/methods:
    get:
      operationId: getUnpaidInvoicesByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentMethodView'
                type: array
      tags:
      - Organisation
    post:
      operationId: addPaymentMethodByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodView'
      tags:
      - Organisation
  /organisations/{id}/payments/billings/unpaid:
    get:
      operationId: getUnpaidInvoicesByOrga_1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRendering'
                type: array
      tags:
      - Organisation
  /organisations/{id}/payments/methods/newintent:
    get:
      operationId: getNewSetupIntentByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetupIntentView'
      tags:
      - Organisation
  /organisations/{id}/payments/methods/default:
    get:
      operationId: getDefaultMethodByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodView'
      tags:
      - Organisation
    put:
      operationId: setDefaultMethodByOrga
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Organisation
  /organisations:
    get:
      operationId: getUserOrganisationss
      parameters:
      - explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganisationView'
                type: array
      tags:
      - Organisation
    post:
      operationId: createOrganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeOrganisation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationView'
      tags:
      - Organisation
  /invoice/external/paypal/{bid}:
    delete:
      operationId: cancelPaypalTransaction
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
    put:
      operationId: authorizePaypalTransaction
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
  /invoice/external/{bid}:
    post:
      operationId: updateInvoice
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EndOfInvoiceResponse'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
  /vendor/apps:
    get:
      operationId: listApps
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonApplicationSummary'
                type: array
      tags:
      - Products
  /vendor/apps/{addonId}/migration_callback:
    put:
      operationId: endAddonMigration
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: plan_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Products
  /vendor/apps/{addonId}:
    get:
      operationId: getApplicationInfo
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonApplicationInfo'
      tags:
      - Products
    put:
      operationId: editApplicationConfiguration
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Products
  /vendor/apps/{addonId}/consumptions:
    post:
      operationId: billOwner
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonBilling'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Products
  /vendor/apps/{addonId}/logscollector:
    get:
      operationId: logscollector
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
      tags:
      - Products
  /vendor/addons:
    post:
      operationId: provisionOtherAddon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeInterAddonProvision'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Products
  /application/{appId}/environment:
    get:
      operationId: getEnv
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
        default:
          description: getEnv
      tags:
      - User
    put:
      operationId: updateEnv
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - User
  /newsfeeds/blog:
    get:
      operationId: getBlogFeed
      responses:
        default:
          content:
            '*/*': {}
          description: default response
  /newsfeeds/engineering:
    get:
      operationId: getEngineeringFeed
      responses:
        default:
          content:
            '*/*': {}
          description: default response
  /password_forgotten/{key}:
    get:
      operationId: confirmPasswordResetRequest
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
    post:
      operationId: resetPasswordForgotten
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                pass:
                  type: string
                pass2:
                  type: string
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
  /password_forgotten:
    get:
      operationId: getPasswordForgottenForm
      parameters:
      - explode: true
        in: query
        name: clever_flavor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
    post:
      operationId: askForPasswordResetViaForm
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                login:
                  type: string
                drop_tokens:
                  type: string
                clever_flavor:
                  type: string
              type: object
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
      tags:
      - User
  /payments/assets/pay_button/{token}/button.png:
    get:
      operationId: getInvoiceStatusButton
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            image/png: {}
      tags:
      - Payment
  /payments/webhooks/stripe/sepa:
    post:
      operationId: stripeSepaWebhook
      parameters:
      - explode: false
        in: header
        name: Stripe-Signature
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Payment
  /payments/providers:
    get:
      operationId: getAvailablePaymentProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentProviderView'
                type: array
      tags:
      - Payment
  /payments/{bid}/end/stripe:
    post:
      operationId: endPaymentWithStripe
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeConfirmationErrorMessage'
      tags:
      - Payment
    put:
      operationId: updateStripePayment
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetupIntentView'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Payment
  /payments/tokens/stripe:
    get:
      operationId: getStripeToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BraintreeToken'
      tags:
      - Payment
  /payments/coupons/{name}:
    get:
      operationId: getCoupon
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponView'
      tags:
      - Payment
  /products/zones:
    get:
      operationId: getZones
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ZoneView'
                type: array
      tags:
      - Products
  /products/prices:
    get:
      operationId: getExcahngeRates
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DropPriceView'
                type: array
      tags:
      - Products
  /products/addonproviders/{provider_id}:
    get:
      operationId: getAddonProvider
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: orgaId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonProviderInfoFullView'
      tags:
      - Products
  /products/addonproviders:
    get:
      operationId: getAddonProviders
      parameters:
      - explode: true
        in: query
        name: orgaId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonProviderInfoFullView'
                type: array
      tags:
      - Products
  /products/addonproviders/{provider_id}/versions:
    get:
      operationId: getAddonProviderVersions
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Products
  /products/addonproviders/{provider_id}/informations:
    get:
      operationId: getAddonProviderInfos
      parameters:
      - explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Products
  /products/instances:
    get:
      operationId: getAvailableInstances
      parameters:
      - explode: true
        in: query
        name: for
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AvailableInstanceView'
                type: array
      tags:
      - Products
  /products/packages:
    get:
      operationId: getAvailablePackages
      parameters:
      - explode: true
        in: query
        name: coupon
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: orgaId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageView'
                type: array
      tags:
      - Products
  /products/countries:
    get:
      operationId: getCountries
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Products
  /products/countrycodes:
    get:
      operationId: getCountryCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Products
  /products/mfa_kinds:
    get:
      operationId: getMFAKinds
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Products
  /products/flavors:
    get:
      operationId: getFlavors
      parameters:
      - explode: true
        in: query
        name: context
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FlavorView'
                type: array
      tags:
      - Products
  /products/instances/{type}-{version}:
    get:
      operationId: getInstance
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: for
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: app
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableInstanceView'
      tags:
      - Products
  /vat_check:
    get:
      operationId: checkVat
      parameters:
      - explode: true
        in: query
        name: country
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: vat
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatResult'
      tags:
      - Payment
  /users/{id}:
    get:
      operationId: getUserById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
      tags:
      - User
  /users/{id}/applications:
    get:
      operationId: getApplications
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - User
  /users:
    post:
      operationId: createUserFromForm
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                invitationKey:
                  type: string
                addonBetaInvitationKey:
                  type: string
                email:
                  type: string
                pass:
                  type: string
                url_next:
                  type: string
                terms:
                  type: string
                subscription_source:
                  type: string
                clever_flavor:
                  type: string
                oauth_token:
                  type: string
              type: object
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - User
  /users/{userId}/git-info:
    get:
      operationId: getGitInfo
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - User
  /self/validate_email:
    get:
      operationId: validateEmail
      parameters:
      - explode: true
        in: query
        name: validationKey
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self:
    delete:
      operationId: deleteUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    get:
      operationId: getUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
      tags:
      - Self
    put:
      operationId: editUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserView'
      tags:
      - Self
  /self/avatar:
    put:
      operationId: setUserAvatarFromString
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAvatarSource'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlView'
      tags:
      - Self
  /self/payment-info:
    get:
      operationId: getSelfPaymentInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfoView'
      tags:
      - Self
  /self/change_password:
    put:
      operationId: changeUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabePassword'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/confirmation_email:
    get:
      operationId: getConfirmationEmail
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/instances:
    get:
      operationId: getSelfInstancesForAllApps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperNovaInstanceMap'
      tags:
      - Self
  /self/id:
    get:
      operationId: getId
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Self
  /self/addons/{addonId}/tags/{tag}:
    delete:
      operationId: deleteSelfAddonTagByAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
    put:
      operationId: addSelfAddonTagByAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
  /self/addons/{addonId}/tags:
    get:
      operationId: getSelfAddonTagsByAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
  /self/addons/{addonId}/sso:
    get:
      operationId: getAddonSSOData
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonSSOData'
      tags:
      - Self
  /self/addons/{addonId}:
    delete:
      operationId: deprovisionSelfAddonById
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    get:
      operationId: getSelfAddonById
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Self
    put:
      operationId: renameAddon
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Self
  /self/addons/{addonId}/applications:
    get:
      operationId: getSelfApplicationsLinkedToAddonByAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Self
  /self/addons/{addonId}/env:
    get:
      operationId: getSelfAddonEnvByAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonEnvironmentView'
                type: array
      tags:
      - Self
  /self/addons/preorders:
    post:
      operationId: preorderSelfAddon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Self
  /self/addons:
    get:
      operationId: getSelfAddons
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonView'
                type: array
      tags:
      - Self
    post:
      operationId: provisionSelfAddon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeAddonProvision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Self
  /self/addons/{addonId}/plan:
    put:
      operationId: changeSelfAddonPlanByAddonId
      parameters:
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabePlanChange'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonView'
      tags:
      - Self
  /self/applications/{appId}/dependencies:
    get:
      operationId: getSelfApplicationDependenciesByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Self
  /self/applications/{appId}/dependencies/env:
    get:
      operationId: getSelfApplicationDependenciesEnvByAppId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/applications/{appId}/dependencies/{dependencyId}:
    delete:
      operationId: deleteSelfApplicationDependencyByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    put:
      operationId: addSelfApplicationDependencyByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: dependencyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/applications/{appId}/dependents:
    get:
      operationId: getSelfApplicationDependents
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Self
  /self/applications/{appId}/tags:
    get:
      operationId: getSelfApplicationTagsByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
  /self/applications/{appId}/tags/{tag}:
    delete:
      operationId: deleteSelfApplicationTagAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
    put:
      operationId: addSelfApplicationTagByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
  /self/applications/{appId}/vhosts/{domain}:
    delete:
      operationId: removeSelfVhostByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    put:
      operationId: addSelfVhostByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/applications/{appId}/vhosts/favourite:
    delete:
      operationId: unmarkSelfFavouriteVhostByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    get:
      operationId: getSelfFavouriteVhostByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VhostView'
      tags:
      - Self
    put:
      operationId: markSelfFavouriteVhostByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VhostView'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VhostView'
      tags:
      - Self
  /self/applications/{appId}/vhosts:
    get:
      operationId: getSelfVhostByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VhostView'
                type: array
      tags:
      - Self
  /self/applications/{appId}:
    delete:
      operationId: deleteSelfApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    get:
      operationId: getSelfApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Self
    put:
      operationId: editSelfApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Self
  /self/applications/{appId}/branches:
    get:
      operationId: getSelfApplicationBranchesByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
  /self/applications/{appId}/branch:
    put:
      operationId: setSelfApplicationBranchByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeBranch'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/applications/{appId}/instances:
    delete:
      operationId: undeploySelfApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    get:
      operationId: getSelfApplicationInstancesByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: deploymentId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: withDeleted
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuperNovaInstanceView'
                type: array
      tags:
      - Self
    post:
      operationId: redeploySelfApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: commit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: useCache
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/applications/{appId}/instances/{instanceId}:
    get:
      operationId: getSelfApplicationInstanceByAppAndInstanceId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuperNovaInstanceView'
      tags:
      - Self
  /self/applications/{appId}/addons:
    get:
      operationId: getSelfAddonsLinkedToApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonView'
                type: array
      tags:
      - Self
    post:
      operationId: linkSelfAddonToApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/applications/{appId}/addons/{addonId}:
    delete:
      operationId: unlinkSelfddonFromApplicationByAppAndAddonId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: addonId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/applications/{appId}/env/{envName}:
    delete:
      operationId: removeSelfApplicationEnvByAppIdAndEnvName
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Self
    put:
      operationId: editSelfApplicationEnvByAppIdAndEnvName
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: envName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeValue'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Self
  /self/applications/{appId}/env:
    get:
      operationId: getSelfApplicationEnvByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AddonEnvironmentView'
                type: array
      tags:
      - Self
    put:
      operationId: editSelfApplicationEnvByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Self
  /self/applications/{appId}/addons/env:
    get:
      operationId: getSelfEnvOfAddonsLinkedToApplicationByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LinkedAddonEnvironmentView'
                type: array
      tags:
      - Self
  /self/applications/{appId}/exposed_env:
    get:
      operationId: getSelfExposedEnvByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Self
    put:
      operationId: updateSelfExposedEnvByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/applications/{appId}/buildflavor:
    put:
      operationId: setSelfBuildInstanceFlavorByAppId
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeBuildFlavor'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/applications:
    get:
      operationId: getSelfApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationView'
                type: array
      tags:
      - Self
    post:
      operationId: addSelfApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationView'
      tags:
      - Self
  /self/applications/{appId}/deployments/{deploymentId}:
    get:
      operationId: getApplicationDeployment
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/applications/{appId}/deployments/{deploymentId}/instances:
    delete:
      operationId: cancelDeploy
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: deploymentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/applications/{appId}/deployments:
    get:
      operationId: getApplicationDeployments
      parameters:
      - explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeploymentView'
                type: array
      tags:
      - Self
  /self/cli_tokens:
    get:
      operationId: getSelfCliTokens
      parameters:
      - explode: true
        in: query
        name: cli_token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CliTokenView'
                type: array
      tags:
      - Self
  /self/consumers/{key}/secret:
    get:
      operationId: getSelfConsumerSecret
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretView'
      tags:
      - Self
  /self/consumers/{key}:
    delete:
      operationId: deleteSelfConsumer
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    get:
      operationId: getSelfConsumer
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1ConsumerView'
      tags:
      - Self
    put:
      operationId: updateSelfConsumer
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeOAuth1Consumer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1ConsumerView'
      tags:
      - Self
  /self/consumers:
    get:
      operationId: getSelfConsumers
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    post:
      operationId: createSelfConsumer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeOAuth1Consumer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth1ConsumerView'
      tags:
      - Self
  /self/consumptions:
    get:
      operationId: getConsumptions
      parameters:
      - explode: true
        in: query
        name: appId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: for
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Self
  /self/credits:
    get:
      operationId: getSelfAmount
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropCountView'
      tags:
      - Self
  /self/emails/{email}:
    delete:
      operationId: removeEmailAddress
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    put:
      operationId: addEmailAddress
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/emails:
    get:
      operationId: getEmailAddresses
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
      tags:
      - Self
  /self/keys:
    get:
      operationId: getSshKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SshKeyView'
                type: array
      tags:
      - Self
  /self/keys/{key}:
    delete:
      operationId: removeSshKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    put:
      operationId: addSshKey
      parameters:
      - explode: false
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /self/mfa/{kind}:
    delete:
      operationId: deleteMFA
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    post:
      operationId: createMFA
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    put:
      operationId: favMFA
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeMFAFav'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/mfa/{kind}/backupcodes:
    get:
      operationId: getBackupCodes
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MFARecoveryCode'
                type: array
      tags:
      - Self
  /self/mfa/{kind}/confirmation:
    post:
      operationId: validateMFA
      parameters:
      - explode: false
        in: path
        name: kind
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeMFACreds'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/payments/monthlyinvoice:
    get:
      operationId: getSelfMonthlyInvoice
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
      tags:
      - Self
  /self/payments/billings/{bid}.pdf:
    get:
      operationId: getSelfPdfInvoiceById
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/pdf: {}
          description: default response
      tags:
      - Self
  /self/payments/billings:
    get:
      operationId: getSelfInvoices
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceRendering'
                type: array
      tags:
      - Self
    post:
      operationId: buySelfDrops
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannaBuyPackage'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Self
  /self/payments/monthlyinvoice/maxcredit:
    put:
      operationId: setSelfMaxCreditsPerMonth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WannabeMaxCredits'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WannabeMaxCredits'
      tags:
      - Self
  /self/payments/fullprice/{price}:
    get:
      operationId: getSelfPriceWithTax
      parameters:
      - explode: false
        in: path
        name: price
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceWithTaxInfo'
      tags:
      - Self
  /self/payments/billings/{bid}:
    delete:
      operationId: deleteSelfPurchaseOrder
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    get:
      operationId: getSelfInvoiceById
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceRendering'
      tags:
      - Self
    put:
      operationId: chooseSelfPaymentProvider
      parameters:
      - explode: false
        in: path
        name: bid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentProviderSelection'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextInPaymentFlow'
      tags:
      - Self
  /self/payments/recurring:
    delete:
      operationId: deleteSelfRecurrentPayment
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
    get:
      operationId: getSelfRecurrentPayment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecurrentPaymentView'
      tags:
      - Self
  /self/payments/tokens/stripe:
    get:
      operationId: getSelfStripeToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BraintreeToken'
      tags:
      - Self
  /self/payments/methods:
    get:
      operationId: getSelfPaymentMethods
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentMethodView'
                type: array
      tags:
      - Self
    post:
      operationId: addSelfPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodView'
      tags:
      - Self
  /self/payments/methods/default:
    get:
      operationId: getSelfDefaultMethod
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodView'
      tags:
      - Self
    put:
      operationId: setSelfDefaultMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentData'
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/payments/methods/{mId}:
    delete:
      operationId: deleteSelfCard
      parameters:
      - explode: false
        in: path
        name: mId
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json: {}
          description: default response
      tags:
      - Self
  /self/tokens:
    delete:
      operationId: revokeAllTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
    get:
      operationId: getSelfTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OAuth1AccessTokenView'
                type: array
      tags:
      - Self
  /self/tokens/{token}:
    delete:
      operationId: revokeToken
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      tags:
      - Self
  /summary:
    get:
      operationId: getSummary
      parameters:
      - explode: true
        in: query
        name: full
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
      tags:
      - Self
components:
  requestBodies:
    inline_object_1:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object_9:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_9'
    inline_object_10:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_10'
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
    inline_object_8:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_8'
    inline_object_7:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_7'
    inline_object_6:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_6'
    inline_object_5:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_5'
    inline_object_4:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_4'
    inline_object_3:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_2:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_2'
  schemas:
    Message:
      example:
        id: 0
        message: message
        type: error
      properties:
        id:
          format: int32
          type: integer
        message:
          type: string
        type:
          enum:
          - error
          - warning
          - success
          - info
          type: string
      type: object
    WannabeAuthorization:
      example:
        authorization: authorization
        payload: payload
        verb: verb
        uri: uri
        nonce: nonce
        mac: mac
      properties:
        verb:
          type: string
        uri:
          type: string
        authorization:
          type: string
        payload:
          type: string
        nonce:
          type: string
        mac:
          type: string
      type: object
    OAuthApplicationView:
      example:
        owner: owner
        defaultBranch: defaultBranch
        name: name
        description: description
        id: id
        priv: true
        gitUrl: gitUrl
      properties:
        id:
          type: string
        owner:
          type: string
        name:
          type: string
        description:
          type: string
        gitUrl:
          type: string
        defaultBranch:
          type: string
        priv:
          type: boolean
      type: object
    OAuthTransactionView:
      example:
        redirectUri: redirectUri
        transactionId: transactionId
      properties:
        transactionId:
          type: string
        redirectUri:
          type: string
      type: object
    SshKeyView:
      example:
        name: name
        fingerprint: fingerprint
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        fingerprint:
          type: string
      type: object
    GithubCommit:
      example:
        message: message
        sha: sha
      properties:
        sha:
          type: string
        message:
          type: string
      type: object
    GithubWebhookPayload:
      example:
        ref: ref
        pusher:
          email: email
        head_commit:
          message: message
          sha: sha
        sender:
          id: id
        after: after
        repository:
          id: id
      properties:
        ref:
          type: string
        after:
          type: string
        repository:
          $ref: '#/components/schemas/GithubWebhookRepository'
        sender:
          $ref: '#/components/schemas/GithubWebhookSender'
        pusher:
          $ref: '#/components/schemas/GithubWebhookPusher'
        head_commit:
          $ref: '#/components/schemas/GithubCommit'
      type: object
    GithubWebhookPusher:
      example:
        email: email
      properties:
        email:
          type: string
      type: object
    GithubWebhookRepository:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    GithubWebhookSender:
      example:
        id: id
      properties:
        id:
          type: string
      type: object
    UrlView:
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    WannabeAvatarSource:
      example:
        source: source
      properties:
        source:
          type: string
      type: object
    OrganisationView:
      example:
        customerFullName: customerFullName
        country: country
        canPay: true
        address: address
        city: city
        VAT: VAT
        description: description
        vatState: INVALID
        avatar: avatar
        emergencyNumber: emergencyNumber
        cleverEnterprise: true
        zipcode: zipcode
        canSEPA: true
        billingEmail: billingEmail
        name: name
        company: company
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        billingEmail:
          type: string
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          type: string
        company:
          type: string
        VAT:
          type: string
        avatar:
          type: string
        vatState:
          enum:
          - INVALID
          - PENDING_VALIDATION
          - VALID
          - NOT_NEEDED
          - NOT_APPLICABLE
          type: string
        customerFullName:
          type: string
        canPay:
          type: boolean
        cleverEnterprise:
          type: boolean
        emergencyNumber:
          type: string
        canSEPA:
          type: boolean
      type: object
    WannabeOrganisation:
      example:
        zipcode: zipcode
        customerFullName: customerFullName
        country: country
        address: address
        city: city
        billingEmail: billingEmail
        name: name
        VAT: VAT
        description: description
        company: company
      properties:
        name:
          type: string
        description:
          type: string
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          type: string
        company:
          type: string
        customerFullName:
          type: string
        VAT:
          type: string
        billingEmail:
          type: string
      type: object
    PaymentInfoView:
      example:
        zipCode: zipCode
        country: country
        address: address
        city: city
        name: name
        fromOrga: true
        company: company
        errors:
          key: errors
        vatNumber: vatNumber
      properties:
        fromOrga:
          type: boolean
        name:
          type: string
        company:
          type: string
        address:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
        vatNumber:
          type: string
        errors:
          additionalProperties:
            type: string
          type: object
      type: object
    NamespaceView:
      example:
        namespace: namespace
      properties:
        namespace:
          type: string
      type: object
    AddonProviderInfoView:
      example:
        website: website
        regions:
        - regions
        - regions
        twitterName: twitterName
        canUpgrade: true
        logoUrl: logoUrl
        googlePlusName: googlePlusName
        supportEmail: supportEmail
        name: name
        shortDesc: shortDesc
        id: id
        analyticsId: analyticsId
        longDesc: longDesc
        openInNewTab: true
        status: ALPHA
      properties:
        id:
          type: string
        name:
          type: string
        website:
          type: string
        supportEmail:
          type: string
        googlePlusName:
          type: string
        twitterName:
          type: string
        analyticsId:
          type: string
        shortDesc:
          type: string
        longDesc:
          type: string
        logoUrl:
          type: string
        status:
          enum:
          - ALPHA
          - BETA_PRIV
          - BETA_PUB
          - RELEASE
          - DELETED
          type: string
        openInNewTab:
          type: boolean
        canUpgrade:
          type: boolean
        regions:
          items:
            type: string
          type: array
      type: object
    WannabeAddonProviderInfos:
      example:
        website: website
        supportEmail: supportEmail
        name: name
        twitterName: twitterName
        shortDesc: shortDesc
        analyticsId: analyticsId
        longDesc: longDesc
        logoUrl: logoUrl
        googlePlusName: googlePlusName
      properties:
        name:
          type: string
        website:
          type: string
        supportEmail:
          type: string
        googlePlusName:
          type: string
        twitterName:
          type: string
        analyticsId:
          type: string
        shortDesc:
          type: string
        longDesc:
          type: string
        logoUrl:
          type: string
      type: object
    AddonFeatureView:
      example:
        name_code: name_code
        name: name
        type: BOOLEAN
      properties:
        name:
          type: string
        type:
          enum:
          - BOOLEAN
          - INTERVAL
          - FILESIZE
          - NUMBER
          - PERCENTAGE
          - STRING
          - OBJECT
          - BYTES
          - BOOLEAN_SHARED
          type: string
        name_code:
          type: string
      type: object
    WannabeAddonFeature:
      example:
        name: name
        type: BOOLEAN
      properties:
        name:
          type: string
        type:
          enum:
          - BOOLEAN
          - INTERVAL
          - FILESIZE
          - NUMBER
          - PERCENTAGE
          - STRING
          - OBJECT
          - BYTES
          - BOOLEAN_SHARED
          type: string
      type: object
    AddonFeatureInstanceView:
      example:
        name_code: name_code
        name: name
        computable_value: computable_value
        type: BOOLEAN
        value: value
      properties:
        name:
          type: string
        type:
          enum:
          - BOOLEAN
          - INTERVAL
          - FILESIZE
          - NUMBER
          - PERCENTAGE
          - STRING
          - OBJECT
          - BYTES
          - BOOLEAN_SHARED
          type: string
        value:
          type: string
        computable_value:
          type: string
        name_code:
          type: string
      type: object
    AddonPlanView:
      example:
        features:
        - name_code: name_code
          name: name
          computable_value: computable_value
          type: BOOLEAN
          value: value
        - name_code: name_code
          name: name
          computable_value: computable_value
          type: BOOLEAN
          value: value
        price: 0.8008281904610115
        name: name
        price_id: price_id
        id: id
        zones:
        - zones
        - zones
        slug: slug
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        price:
          type: number
        price_id:
          type: string
        features:
          items:
            $ref: '#/components/schemas/AddonFeatureInstanceView'
          type: array
        zones:
          items:
            type: string
          type: array
      type: object
    WannabeAddonPlan:
      example:
        features:
        - name_code: name_code
          name: name
          computable_value: computable_value
          type: BOOLEAN
          value: value
        - name_code: name_code
          name: name
          computable_value: computable_value
          type: BOOLEAN
          value: value
        price: 0.8008281904610115
        name: name
        slug: slug
      properties:
        name:
          type: string
        slug:
          type: string
        price:
          type: number
        features:
          items:
            $ref: '#/components/schemas/AddonFeatureInstanceView'
          type: array
      type: object
    AddonProviderSSOData:
      example:
        macaroon: macaroon
        url: url
      properties:
        url:
          type: string
        macaroon:
          type: string
      type: object
    AddonProviderInfoFullView:
      example:
        website: website
        regions:
        - regions
        - regions
        twitterName: twitterName
        canUpgrade: true
        logoUrl: logoUrl
        googlePlusName: googlePlusName
        features:
        - name_code: name_code
          name: name
          type: BOOLEAN
        - name_code: name_code
          name: name
          type: BOOLEAN
        supportEmail: supportEmail
        plans:
        - features:
          - name_code: name_code
            name: name
            computable_value: computable_value
            type: BOOLEAN
            value: value
          - name_code: name_code
            name: name
            computable_value: computable_value
            type: BOOLEAN
            value: value
          price: 0.8008281904610115
          name: name
          price_id: price_id
          id: id
          zones:
          - zones
          - zones
          slug: slug
        - features:
          - name_code: name_code
            name: name
            computable_value: computable_value
            type: BOOLEAN
            value: value
          - name_code: name_code
            name: name
            computable_value: computable_value
            type: BOOLEAN
            value: value
          price: 0.8008281904610115
          name: name
          price_id: price_id
          id: id
          zones:
          - zones
          - zones
          slug: slug
        name: name
        shortDesc: shortDesc
        id: id
        analyticsId: analyticsId
        longDesc: longDesc
        openInNewTab: true
        status: ALPHA
      properties:
        id:
          type: string
        name:
          type: string
        website:
          type: string
        supportEmail:
          type: string
        googlePlusName:
          type: string
        twitterName:
          type: string
        analyticsId:
          type: string
        shortDesc:
          type: string
        longDesc:
          type: string
        logoUrl:
          type: string
        status:
          enum:
          - ALPHA
          - BETA_PRIV
          - BETA_PUB
          - RELEASE
          - DELETED
          type: string
        openInNewTab:
          type: boolean
        canUpgrade:
          type: boolean
        regions:
          items:
            type: string
          type: array
        plans:
          items:
            $ref: '#/components/schemas/AddonPlanView'
          type: array
        features:
          items:
            $ref: '#/components/schemas/AddonFeatureView'
          type: array
      type: object
    WannabeAddonProvider:
      example:
        name: name
        id: id
        api:
          password: password
          regions:
          - regions
          - regions
          test:
            base_url: base_url
            sso_url: sso_url
          config_vars:
          - config_vars
          - config_vars
          production:
            base_url: base_url
            sso_url: sso_url
          sso_salt: sso_salt
      properties:
        id:
          type: string
        name:
          type: string
        api:
          $ref: '#/components/schemas/WannabeAddonProviderAPI'
      type: object
    WannabeAddonProviderAPI:
      example:
        password: password
        regions:
        - regions
        - regions
        test:
          base_url: base_url
          sso_url: sso_url
        config_vars:
        - config_vars
        - config_vars
        production:
          base_url: base_url
          sso_url: sso_url
        sso_salt: sso_salt
      properties:
        config_vars:
          items:
            type: string
          type: array
        password:
          type: string
        sso_salt:
          type: string
        regions:
          items:
            type: string
          type: array
        production:
          $ref: '#/components/schemas/WannabeAddonProviderAPIUrl'
        test:
          $ref: '#/components/schemas/WannabeAddonProviderAPIUrl'
      type: object
    WannabeAddonProviderAPIUrl:
      example:
        base_url: base_url
        sso_url: sso_url
      properties:
        base_url:
          type: string
        sso_url:
          type: string
      type: object
    AddonView:
      example:
        provider:
          website: website
          regions:
          - regions
          - regions
          twitterName: twitterName
          canUpgrade: true
          logoUrl: logoUrl
          googlePlusName: googlePlusName
          supportEmail: supportEmail
          name: name
          shortDesc: shortDesc
          id: id
          analyticsId: analyticsId
          longDesc: longDesc
          openInNewTab: true
          status: ALPHA
        name: name
        id: id
        realId: realId
        region: region
        creationDate: 0
        plan:
          features:
          - name_code: name_code
            name: name
            computable_value: computable_value
            type: BOOLEAN
            value: value
          - name_code: name_code
            name: name
            computable_value: computable_value
            type: BOOLEAN
            value: value
          price: 0.8008281904610115
          name: name
          price_id: price_id
          id: id
          zones:
          - zones
          - zones
          slug: slug
        configKeys:
        - configKeys
        - configKeys
      properties:
        id:
          type: string
        name:
          type: string
        realId:
          type: string
        region:
          type: string
        provider:
          $ref: '#/components/schemas/AddonProviderInfoView'
        plan:
          $ref: '#/components/schemas/AddonPlanView'
        creationDate:
          format: int64
          type: integer
        configKeys:
          items:
            type: string
          type: array
      type: object
    ApplicationView:
      example:
        appliance: appliance
        instance:
          maxAllowedInstances: 1
          flavors:
          - rbdimage: rbdimage
            memory:
              unit: unit
              formatted: formatted
              value: 2.027123023002322
            cpus: 5
            machine_learning: true
            microservice: true
            available: true
            price_id: price_id
            nice: 3
            disk: 7
            mem: 5
            price: 9.301444243932576
            gpus: 2
            name: name
          - rbdimage: rbdimage
            memory:
              unit: unit
              formatted: formatted
              value: 2.027123023002322
            cpus: 5
            machine_learning: true
            microservice: true
            available: true
            price_id: price_id
            nice: 3
            disk: 7
            mem: 5
            price: 9.301444243932576
            gpus: 2
            name: name
          minInstances: 0
          maxFlavor:
            rbdimage: rbdimage
            memory:
              unit: unit
              formatted: formatted
              value: 2.027123023002322
            cpus: 5
            machine_learning: true
            microservice: true
            available: true
            price_id: price_id
            nice: 3
            disk: 7
            mem: 5
            price: 9.301444243932576
            gpus: 2
            name: name
          variant:
            name: name
            logo: logo
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            slug: slug
            deployType: deployType
          lifetime: REGULAR
          type: type
          maxInstances: 6
          instanceAndVersion: instanceAndVersion
          version: version
          minFlavor:
            rbdimage: rbdimage
            memory:
              unit: unit
              formatted: formatted
              value: 2.027123023002322
            cpus: 5
            machine_learning: true
            microservice: true
            available: true
            price_id: price_id
            nice: 3
            disk: 7
            mem: 5
            price: 9.301444243932576
            gpus: 2
            name: name
          defaultEnv:
            key: defaultEnv
        buildFlavor:
          rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        forceHttps: ENABLED
        description: description
        ownerId: ownerId
        webhookSecret: webhookSecret
        branch: branch
        archived: true
        zone: zone
        stickySessions: true
        id: id
        state: SHOULD_BE_UP
        vhosts:
        - fqdn: fqdn
        - fqdn: fqdn
        last_deploy: 7
        deployment:
          repoState: CREATING
          httpUrl: httpUrl
          type: GIT
          shutdownable: true
          url: url
        deployUrl: deployUrl
        cancelOnPush: true
        commitId: commitId
        creationDate: 4
        favourite: true
        webhookUrl: webhookUrl
        separateBuild: true
        homogeneous: true
        name: name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        zone:
          type: string
        instance:
          $ref: '#/components/schemas/InstanceView'
        deployment:
          $ref: '#/components/schemas/DeploymentInfoView'
        vhosts:
          items:
            $ref: '#/components/schemas/VhostView'
          type: array
        creationDate:
          format: int64
          type: integer
        last_deploy:
          format: int32
          type: integer
        archived:
          type: boolean
        stickySessions:
          type: boolean
        homogeneous:
          type: boolean
        favourite:
          type: boolean
        cancelOnPush:
          type: boolean
        webhookUrl:
          type: string
        webhookSecret:
          type: string
        separateBuild:
          type: boolean
        buildFlavor:
          $ref: '#/components/schemas/FlavorView'
        ownerId:
          type: string
        state:
          enum:
          - SHOULD_BE_UP
          - SHOULD_BE_DOWN
          - WANTS_TO_BE_UP
          - MODERATED
          - DEFAULT_OF_PAYMENT
          type: string
        commitId:
          type: string
        appliance:
          type: string
        branch:
          type: string
        forceHttps:
          enum:
          - ENABLED
          - DISABLED
          type: string
        deployUrl:
          type: string
      type: object
    DeploymentInfoView:
      example:
        repoState: CREATING
        httpUrl: httpUrl
        type: GIT
        shutdownable: true
        url: url
      properties:
        shutdownable:
          type: boolean
        type:
          enum:
          - GIT
          - SFTP
          - FTP
          type: string
        repoState:
          enum:
          - CREATING
          - CREATED
          - NOT_NEEDED
          - DELETED
          type: string
        url:
          type: string
        httpUrl:
          type: string
      type: object
    FlavorView:
      example:
        rbdimage: rbdimage
        memory:
          unit: unit
          formatted: formatted
          value: 2.027123023002322
        cpus: 5
        machine_learning: true
        microservice: true
        available: true
        price_id: price_id
        nice: 3
        disk: 7
        mem: 5
        price: 9.301444243932576
        gpus: 2
        name: name
      properties:
        name:
          type: string
        mem:
          format: int32
          type: integer
        cpus:
          format: int32
          type: integer
        gpus:
          format: int32
          type: integer
        disk:
          format: int32
          type: integer
        price:
          type: number
        available:
          type: boolean
        microservice:
          type: boolean
        machine_learning:
          type: boolean
        nice:
          format: int32
          type: integer
        price_id:
          type: string
        memory:
          $ref: '#/components/schemas/ValueWithUnit'
        rbdimage:
          type: string
      type: object
    InstanceVariantView:
      example:
        name: name
        logo: logo
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        slug: slug
        deployType: deployType
      properties:
        id:
          format: uuid
          type: string
        slug:
          type: string
        name:
          type: string
        deployType:
          type: string
        logo:
          type: string
      type: object
    InstanceView:
      example:
        maxAllowedInstances: 1
        flavors:
        - rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        - rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        minInstances: 0
        maxFlavor:
          rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        variant:
          name: name
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          deployType: deployType
        lifetime: REGULAR
        type: type
        maxInstances: 6
        instanceAndVersion: instanceAndVersion
        version: version
        minFlavor:
          rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        defaultEnv:
          key: defaultEnv
      properties:
        type:
          type: string
        version:
          type: string
        variant:
          $ref: '#/components/schemas/InstanceVariantView'
        minInstances:
          format: int32
          type: integer
        maxInstances:
          format: int32
          type: integer
        maxAllowedInstances:
          format: int32
          type: integer
        minFlavor:
          $ref: '#/components/schemas/FlavorView'
        maxFlavor:
          $ref: '#/components/schemas/FlavorView'
        flavors:
          items:
            $ref: '#/components/schemas/FlavorView'
          type: array
        defaultEnv:
          additionalProperties:
            type: string
          type: object
        lifetime:
          enum:
          - REGULAR
          - MIGRATION
          - TASK
          type: string
        instanceAndVersion:
          type: string
      type: object
    ValueWithUnit:
      example:
        unit: unit
        formatted: formatted
        value: 2.027123023002322
      properties:
        unit:
          type: string
        value:
          type: number
        formatted:
          type: string
      type: object
    VhostView:
      example:
        fqdn: fqdn
      properties:
        fqdn:
          type: string
      type: object
    AddonEnvironmentView:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    SetupIntentView:
      description: PaymentIntent id from Stripe
      example:
        clientSecret: clientSecret
        id: id
        ownerId: ownerId
        customer: customer
      properties:
        ownerId:
          type: string
        id:
          type: string
        clientSecret:
          type: string
        customer:
          type: string
      type: object
    WannabeAddonProvision:
      example:
        sepaSourceId: sepaSourceId
        linkedApp: linkedApp
        providerId: providerId
        name: name
        options:
          key: options
        paymentIntent:
          clientSecret: clientSecret
          id: id
          ownerId: ownerId
          customer: customer
        region: region
        plan: plan
        version: version
        paymentMethodType: CREDITCARD
      properties:
        providerId:
          description: Id of the add-on provider
          type: string
        plan:
          description: Id of the price plan
          type: string
        linkedApp:
          type: string
        name:
          description: Name of the future add-on, for display.
          type: string
        region:
          description: Region to provision the add-on in.
          type: string
        options:
          additionalProperties:
            description: Options to add to the provision call.
            type: string
          description: Options to add to the provision call.
          type: object
        version:
          description: Version of the add-on
          type: string
        paymentIntent:
          $ref: '#/components/schemas/SetupIntentView'
        paymentMethodType:
          description: Payment method type
          enum:
          - CREDITCARD
          - PAYPAL
          - SEPA_DEBIT
          type: string
        sepaSourceId:
          description: Id of the SEPA debit source
          type: string
      required:
      - plan
      - providerId
      - region
      type: object
    SuperNovaFlavor:
      example:
        mem: 6
        cpus: 1
        price: 5.962133916683182
        name: name
      properties:
        name:
          type: string
        mem:
          format: int32
          type: integer
        cpus:
          format: int32
          type: integer
        price:
          format: double
          type: number
      type: object
    SuperNovaInstanceView:
      example:
        flavor:
          mem: 6
          cpus: 1
          price: 5.962133916683182
          name: name
        deployNumber: 5
        displayName: displayName
        appId: appId
        ip: ip
        commit: commit
        appPort: 0
        id: id
        state: BOOTING
        instanceNumber: 2
        creationDate: 7
        deployId: deployId
      properties:
        id:
          type: string
        appId:
          type: string
        ip:
          type: string
        appPort:
          format: int32
          type: integer
        state:
          enum:
          - BOOTING
          - STARTING
          - DEPLOYING
          - MIGRATION_IN_PROGRESS
          - TASK_IN_PROGRESS
          - READY
          - UP
          - GHOST
          - STOPPING
          - DELETED
          type: string
        flavor:
          $ref: '#/components/schemas/SuperNovaFlavor'
        commit:
          type: string
        deployNumber:
          format: int32
          type: integer
        deployId:
          type: string
        instanceNumber:
          format: int32
          type: integer
        displayName:
          type: string
        creationDate:
          format: int64
          type: integer
      type: object
    InvoiceLineRendering:
      example:
        price: 6.027456183070403
        subDescription: subDescription
        VAT: 0.8008281904610115
        description: description
        pack: pack
      properties:
        description:
          type: string
        subDescription:
          type: string
        pack:
          type: string
        VAT:
          type: number
        price:
          type: number
      type: object
    InvoiceRendering:
      example:
        originalTotal: 1.4658129805029452
        zipCode: zipCode
        country: country
        city: city
        customerOrderId: customerOrderId
        vatRate: 7.061401241503109
        errorCode: errorCode
        type: INVOICE
        fromSubscription: true
        payWhen: PAY_NOW
        number: number
        payingUser:
          role: NONE
          member:
            name: name
            id: id
            avatar: avatar
            email: email
          job: job
        totalVAT: 5.637376656633329
        emissionDate: emissionDate
        forId: forId
        countryCode: countryCode
        customerCostCenter: customerCostCenter
        company: company
        id: id
        lines:
        - price: 6.027456183070403
          subDescription: subDescription
          VAT: 0.8008281904610115
          description: description
          pack: pack
        - price: 6.027456183070403
          subDescription: subDescription
          VAT: 0.8008281904610115
          description: description
          pack: pack
        totalHT: 5.962133916683182
        address: address
        targetId: targetId
        totalTTC: 2.3021358869347655
        errorLongMsg: errorLongMsg
        errorShortMsg: errorShortMsg
        target: target
        token: token
        name: name
        paymentDate: paymentDate
        status: PAID
        vatNumber: vatNumber
      properties:
        id:
          type: string
        number:
          type: string
        status:
          enum:
          - PAID
          - CANCELED
          - PROCESSING
          - FAIL
          - REFUNDED
          - PENDING
          - TEST
          - TOBEREFUNDED
          - WONTPAY
          - PAYMENT_HELD
          type: string
        emissionDate:
          type: string
        paymentDate:
          type: string
        name:
          type: string
        company:
          type: string
        target:
          type: string
        address:
          type: string
        zipCode:
          type: string
        city:
          type: string
        country:
          type: string
        countryCode:
          type: string
        vatNumber:
          type: string
        fromSubscription:
          type: boolean
        lines:
          items:
            $ref: '#/components/schemas/InvoiceLineRendering'
          type: array
        originalTotal:
          type: number
        totalHT:
          type: number
        totalVAT:
          type: number
        totalTTC:
          type: number
        type:
          enum:
          - INVOICE
          - CREDITNOTE
          - PURCHASE_ORDER
          - ADDON_PREORDER
          type: string
        payingUser:
          $ref: '#/components/schemas/OrganisationMemberView'
        errorCode:
          type: string
        errorShortMsg:
          type: string
        errorLongMsg:
          type: string
        token:
          type: string
        targetId:
          type: string
        forId:
          type: string
        customerOrderId:
          type: string
        customerCostCenter:
          type: string
        vatRate:
          type: number
        payWhen:
          enum:
          - PAY_NOW
          - PAY_NEXT_MONTH
          type: string
      type: object
    OrganisationMemberUserView:
      example:
        name: name
        id: id
        avatar: avatar
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        avatar:
          type: string
      type: object
    OrganisationMemberView:
      example:
        role: NONE
        member:
          name: name
          id: id
          avatar: avatar
          email: email
        job: job
      properties:
        member:
          $ref: '#/components/schemas/OrganisationMemberUserView'
        role:
          enum:
          - NONE
          - ADMIN
          - ACCOUNTING
          - DEVELOPER
          - MANAGER
          type: string
        job:
          type: string
      type: object
    StripeConfirmationErrorMessage:
      properties:
        id:
          format: int32
          type: integer
        message:
          type: string
        type:
          enum:
          - error
          - warning
          - success
          - info
          type: string
        paymentIntent:
          $ref: '#/components/schemas/SetupIntentView'
      type: object
    WannabePlanChange:
      example:
        planId: planId
        region: region
        version: version
      properties:
        planId:
          type: string
        region:
          type: string
        version:
          type: string
      type: object
    Author:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    DeploymentView:
      example:
        date: 6
        instances: 1
        author:
          name: name
          id: id
        commit: commit
        action: DEPLOY
        cause: cause
        id: 0
        state: TASK_RUNNING
        uuid: uuid
      properties:
        id:
          format: int32
          type: integer
        uuid:
          type: string
        date:
          format: int64
          type: integer
        state:
          enum:
          - TASK_RUNNING
          - WIP
          - FAIL
          - CANCELLED
          - OK
          type: string
        action:
          enum:
          - DEPLOY
          - UNDEPLOY
          - UPSCALE
          - DOWNSCALE
          - REPLACE
          - CANCEL
          - NONE
          type: string
        commit:
          type: string
        cause:
          type: string
        instances:
          format: int32
          type: integer
        author:
          $ref: '#/components/schemas/Author'
      type: object
    WannabeApplication:
      example:
        applianceId: applianceId
        buildFlavor: buildFlavor
        forceHttps: ENABLED
        oauthAppId: oauthAppId
        description: description
        instanceLifetime: REGULAR
        branch: branch
        deploy: deploy
        instanceVariant: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        archived: true
        oauthApp:
          owner: owner
          name: name
        instanceVersion: instanceVersion
        zone: zone
        stickySessions: true
        maxFlavor: maxFlavor
        maxInstances: 6
        minInstances: 0
        oauthService: oauthService
        instanceType: instanceType
        cancelOnPush: true
        favourite: true
        shutdownable: true
        minFlavor: minFlavor
        tags:
        - tags
        - tags
        separateBuild: true
        homogeneous: true
        name: name
      properties:
        name:
          type: string
        description:
          type: string
        zone:
          type: string
        deploy:
          type: string
        shutdownable:
          type: boolean
        instanceType:
          type: string
        instanceVersion:
          type: string
        instanceVariant:
          format: uuid
          type: string
        instanceLifetime:
          enum:
          - REGULAR
          - MIGRATION
          - TASK
          type: string
        minInstances:
          format: int32
          type: integer
        maxInstances:
          format: int32
          type: integer
        minFlavor:
          type: string
        maxFlavor:
          type: string
        tags:
          items:
            type: string
          type: array
        archived:
          type: boolean
        stickySessions:
          type: boolean
        homogeneous:
          type: boolean
        favourite:
          type: boolean
        cancelOnPush:
          type: boolean
        separateBuild:
          type: boolean
        buildFlavor:
          type: string
        oauthService:
          type: string
        oauthAppId:
          type: string
        oauthApp:
          $ref: '#/components/schemas/WannabeOauthApp'
        applianceId:
          type: string
        branch:
          type: string
        forceHttps:
          enum:
          - ENABLED
          - DISABLED
          type: string
      type: object
    WannabeOauthApp:
      example:
        owner: owner
        name: name
      properties:
        owner:
          type: string
        name:
          type: string
      type: object
    WannabeBranch:
      example:
        branch: branch
      properties:
        branch:
          type: string
      type: object
    TcpRedirView:
      example:
        port: 0
        namespace: namespace
      properties:
        namespace:
          type: string
        port:
          format: int64
          type: integer
      type: object
    WannabeNamespace:
      example:
        namespace: namespace
        minPort: 0
        maxPort: 6
      properties:
        namespace:
          type: string
        minPort:
          format: int64
          type: integer
        maxPort:
          format: int64
          type: integer
      type: object
    WannabeValue:
      example:
        value: value
      properties:
        value:
          type: string
      type: object
    LinkedAddonEnvironmentView:
      example:
        addon_name: addon_name
        provider_id: provider_id
        env:
        - name: name
          value: value
        - name: name
          value: value
        addon_id: addon_id
      properties:
        provider_id:
          type: string
        addon_id:
          type: string
        addon_name:
          type: string
        env:
          items:
            $ref: '#/components/schemas/AddonEnvironmentView'
          type: array
      type: object
    WannabeBuildFlavor:
      example:
        flavorName: flavorName
      properties:
        flavorName:
          type: string
      type: object
    SecretView:
      example:
        secret: secret
      properties:
        secret:
          type: string
      type: object
    OAuth1ConsumerView:
      example:
        baseUrl: baseUrl
        rights:
          manage_organisations: true
          manage_organisations_applications: true
          access_organisations_credit_count: true
          manage_personal_information: true
          manage_organisations_members: true
          almighty: true
          manage_ssh_keys: true
          access_organisations: true
          access_personal_information: true
          manage_organisations_services: true
          access_organisations_consumption_statistics: true
          access_organisations_bills: true
        name: name
        description: description
        key: key
        url: url
        picture: picture
      properties:
        name:
          type: string
        description:
          type: string
        key:
          type: string
        url:
          type: string
        picture:
          type: string
        baseUrl:
          type: string
        rights:
          $ref: '#/components/schemas/OAuthRightsView'
      type: object
    OAuthRightsView:
      example:
        manage_organisations: true
        manage_organisations_applications: true
        access_organisations_credit_count: true
        manage_personal_information: true
        manage_organisations_members: true
        almighty: true
        manage_ssh_keys: true
        access_organisations: true
        access_personal_information: true
        manage_organisations_services: true
        access_organisations_consumption_statistics: true
        access_organisations_bills: true
      properties:
        almighty:
          type: boolean
        access_organisations:
          type: boolean
        manage_organisations:
          type: boolean
        manage_organisations_services:
          type: boolean
        manage_organisations_applications:
          type: boolean
        manage_organisations_members:
          type: boolean
        access_organisations_bills:
          type: boolean
        access_organisations_credit_count:
          type: boolean
        access_organisations_consumption_statistics:
          type: boolean
        access_personal_information:
          type: boolean
        manage_personal_information:
          type: boolean
        manage_ssh_keys:
          type: boolean
      type: object
    WannabeOAuth1Consumer:
      example:
        baseUrl: baseUrl
        rights:
          key: true
        name: name
        description: description
        url: url
        picture: picture
      properties:
        name:
          type: string
        description:
          type: string
        url:
          type: string
        picture:
          type: string
        baseUrl:
          type: string
        rights:
          additionalProperties:
            type: boolean
          type: object
      type: object
    DropCountView:
      example:
        count: 0.8008281904610115
        dropPrice:
          currency: currency
          value: 6.027456183070403
        ownerId: ownerId
      properties:
        ownerId:
          type: string
        count:
          type: number
        dropPrice:
          $ref: '#/components/schemas/DropPriceView'
      type: object
    DropPriceView:
      example:
        currency: currency
        value: 6.027456183070403
      properties:
        currency:
          type: string
        value:
          type: number
      type: object
    WannabeMember:
      example:
        role: role
        job: job
        email: email
      properties:
        role:
          type: string
        job:
          type: string
        email:
          type: string
      type: object
    WannabeMaxCredits:
      example:
        max: 0.8008281904610115
      properties:
        max:
          type: number
      type: object
    PriceWithTaxInfo:
      example:
        price: 0
        vatRatio: 1
        taxFreePrice: 6
        invoicedOwner: invoicedOwner
      properties:
        price:
          format: int64
          type: integer
        taxFreePrice:
          format: int64
          type: integer
        vatRatio:
          format: int64
          type: integer
        invoicedOwner:
          type: string
      type: object
    NextInPaymentFlow:
      example:
        url: url
      properties:
        url:
          type: string
      type: object
    PaymentProviderSelection:
      example:
        provider: PAYPAL
      properties:
        provider:
          enum:
          - PAYPAL
          - CREDITCARD
          - COUPON
          - BITCOIN
          - TRANSFER
          - FREE
          - SEPA_DEBIT
          type: string
      type: object
    WannaBuyPackage:
      example:
        coupon: coupon
        packageId: 0
        currency: currency
        dropQuantity: 6.027456183070403
      properties:
        packageId:
          format: int64
          type: integer
        currency:
          type: string
        coupon:
          type: string
        dropQuantity:
          type: number
      type: object
    OwnerView:
      example:
        emails:
        - emails
        - emails
        identity: identity
        id: id
      properties:
        id:
          type: string
        identity:
          type: string
        emails:
          items:
            type: string
          type: array
      type: object
    RecurrentPaymentView:
      example:
        thresholdAmount: 6.027456183070403
        threshold: 5.962133916683182
        currency: currency
        monthlyAmount: 1.4658129805029452
        user:
          country: country
          canPay: true
          address: address
          city: city
          admin: true
          avatar: avatar
          oauthApps:
          - oauthApps
          - oauthApps
          hasPassword: true
          creationDate: 0
          zipcode: zipcode
          phone: phone
          preferredMFA: NONE
          name: name
          id: id
          lang: lang
          emailValidated: true
          email: email
        target:
          emails:
          - emails
          - emails
          identity: identity
          id: id
        token: token
      properties:
        user:
          $ref: '#/components/schemas/UserView'
        target:
          $ref: '#/components/schemas/OwnerView'
        thresholdAmount:
          type: number
        monthlyAmount:
          type: number
        threshold:
          type: number
        currency:
          type: string
        token:
          type: string
      type: object
    UserView:
      example:
        country: country
        canPay: true
        address: address
        city: city
        admin: true
        avatar: avatar
        oauthApps:
        - oauthApps
        - oauthApps
        hasPassword: true
        creationDate: 0
        zipcode: zipcode
        phone: phone
        preferredMFA: NONE
        name: name
        id: id
        lang: lang
        emailValidated: true
        email: email
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          type: string
        avatar:
          type: string
        creationDate:
          format: int64
          type: integer
        lang:
          type: string
        emailValidated:
          type: boolean
        oauthApps:
          items:
            type: string
          type: array
        admin:
          type: boolean
        canPay:
          type: boolean
        preferredMFA:
          enum:
          - NONE
          - TOTP
          type: string
        hasPassword:
          type: boolean
      type: object
    BraintreeToken:
      example:
        merchantId: merchantId
        token: token
      properties:
        merchantId:
          type: string
        token:
          type: string
      type: object
    PaymentMethodView:
      example:
        bankCode: bankCode
        country: country
        holderName: holderName
        cardType: cardType
        ownerId: ownerId
        type: CREDITCARD
        token: token
        branchCode: branchCode
        number: number
        isDefault: true
        imageUrl: imageUrl
        fingerprint: fingerprint
        isExpired: true
        email: email
        expirationDate: expirationDate
      properties:
        ownerId:
          type: string
        type:
          enum:
          - CREDITCARD
          - PAYPAL
          - SEPA_DEBIT
          type: string
        token:
          type: string
        imageUrl:
          type: string
        isDefault:
          type: boolean
        holderName:
          type: string
        number:
          type: string
        expirationDate:
          type: string
        isExpired:
          type: boolean
        cardType:
          type: string
        email:
          type: string
        bankCode:
          type: string
        branchCode:
          type: string
        country:
          type: string
        fingerprint:
          type: string
      type: object
    PaymentData:
      example:
        deviceData: deviceData
        type: NEW_CARD
        token: token
      properties:
        type:
          enum:
          - NEW_CARD
          - EXISTING_CARD
          type: string
        token:
          type: string
        deviceData:
          type: string
      type: object
    EndOfInvoiceError:
      example:
        messages:
          key: messages
        type: type
        message: message
      properties:
        type:
          type: string
        message:
          type: string
        messages:
          additionalProperties:
            type: string
          type: object
      type: object
    EndOfInvoiceResponse:
      example:
        currentTime: 1
        invoiceTime: 6
        posData: posData
        price: 0.8008281904610115
        expirationTime: 5
        btcPrice: btcPrice
        currency: currency
        id: id
        error:
          messages:
            key: messages
          type: type
          message: message
        url: url
        status: new
      properties:
        id:
          type: string
        url:
          type: string
        posData:
          type: string
        status:
          enum:
          - new
          - paid
          - confirmed
          - complete
          - expired
          - invalid
          type: string
        btcPrice:
          type: string
        price:
          format: double
          type: number
        currency:
          type: string
        invoiceTime:
          format: int64
          type: integer
        currentTime:
          format: int64
          type: integer
        expirationTime:
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/EndOfInvoiceError'
      type: object
    AddonApplicationSummary:
      example:
        callback_url: callback_url
        owner_id: owner_id
        heroku_id: heroku_id
        provider_id: provider_id
        plan: plan
      properties:
        provider_id:
          type: string
        heroku_id:
          type: string
        callback_url:
          type: string
        plan:
          type: string
        owner_id:
          type: string
      type: object
    WannabeAddonConfig:
      example:
        config:
          key: config
      properties:
        config:
          additionalProperties:
            type: string
          type: object
      type: object
    AddonApplicationInfo:
      example:
        callback_url: callback_url
        owner_email: owner_email
        owner_emails:
        - owner_emails
        - owner_emails
        owner_name: owner_name
        owner_id: owner_id
        name: name
        domains:
        - domains
        - domains
        id: id
        region: region
        config:
          key: config
      properties:
        id:
          type: string
        name:
          type: string
        config:
          additionalProperties:
            type: string
          type: object
        callback_url:
          type: string
        owner_email:
          type: string
        owner_id:
          type: string
        owner_name:
          type: string
        owner_emails:
          items:
            type: string
          type: array
        region:
          type: string
        domains:
          items:
            type: string
          type: array
      type: object
    WannabeAddonBilling:
      example:
        cost: 0.8008281904610115
      properties:
        cost:
          type: number
      type: object
    WannabeInterAddonProvision:
      example:
        organisationId: organisationId
        providerId: providerId
        name: name
        options:
          key: options
        region: region
        userId: userId
        addonId: addonId
        plan: plan
      properties:
        organisationId:
          type: string
        userId:
          type: string
        providerId:
          type: string
        addonId:
          type: string
        plan:
          type: string
        name:
          type: string
        region:
          type: string
        options:
          additionalProperties:
            type: string
          type: object
      type: object
    PaymentProviderView:
      example:
        imgUrl: imgUrl
        comingSoon: true
        name: name
        title: title
      properties:
        name:
          type: string
        imgUrl:
          type: string
        title:
          type: string
        comingSoon:
          type: boolean
      type: object
    CouponView:
      example:
        name: name
        type: FREE_DROP_AMOUNT
        value: 0.8008281904610115
        remaining: 6
      properties:
        name:
          type: string
        type:
          enum:
          - FREE_DROP_AMOUNT
          - DISCOUNT_DROP_PERCENT
          - DISCOUNT_PRICE_PERCENT
          - DISCOUNT_PRICE_AMOUNT
          - INTERNAL_FREE
          type: string
        value:
          type: number
        remaining:
          format: int64
          type: integer
      type: object
    ZoneView:
      example:
        internal: true
        correspondingRegion: correspondingRegion
        name: name
      properties:
        name:
          type: string
        internal:
          type: boolean
        correspondingRegion:
          type: string
      type: object
    AvailableInstanceView:
      example:
        flavors:
        - rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        - rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        buildFlavor:
          rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
        description: description
        type: type
        version: version
        enabled: true
        tags:
        - tags
        - tags
        deployments:
        - deployments
        - deployments
        comingSoon: true
        name: name
        variant:
          name: name
          logo: logo
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          slug: slug
          deployType: deployType
        maxInstances: 0
        defaultFlavor:
          rbdimage: rbdimage
          memory:
            unit: unit
            formatted: formatted
            value: 2.027123023002322
          cpus: 5
          machine_learning: true
          microservice: true
          available: true
          price_id: price_id
          nice: 3
          disk: 7
          mem: 5
          price: 9.301444243932576
          gpus: 2
          name: name
      properties:
        type:
          type: string
        version:
          type: string
        name:
          type: string
        variant:
          $ref: '#/components/schemas/InstanceVariantView'
        description:
          type: string
        enabled:
          type: boolean
        comingSoon:
          type: boolean
        maxInstances:
          format: int32
          type: integer
        tags:
          items:
            type: string
          type: array
        deployments:
          items:
            type: string
          type: array
        flavors:
          items:
            $ref: '#/components/schemas/FlavorView'
          type: array
        defaultFlavor:
          $ref: '#/components/schemas/FlavorView'
        buildFlavor:
          $ref: '#/components/schemas/FlavorView'
      type: object
    PackageView:
      example:
        originalPrice: 1.4658129805029452
        price: 6.027456183070403
        dropsQuantity: 0.8008281904610115
        dropPrice:
          currency: currency
          value: 6.027456183070403
        id: 5
        title: title
      properties:
        dropsQuantity:
          type: number
        dropPrice:
          $ref: '#/components/schemas/DropPriceView'
        title:
          type: string
        price:
          type: number
        originalPrice:
          type: number
        id:
          format: int64
          type: integer
      type: object
    VatResult:
      example:
        valid: true
        address: address
        name: name
      properties:
        valid:
          type: boolean
        name:
          type: string
        address:
          type: string
      type: object
    WannabeUser:
      example:
        zipcode: zipcode
        country: country
        subscriptionSource: subscriptionSource
        password: password
        address: address
        phone: phone
        city: city
        terms: true
        name: name
        lang: lang
        email: email
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
        phone:
          type: string
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          type: string
        lang:
          type: string
        terms:
          type: boolean
        subscriptionSource:
          type: string
      type: object
    WannabePassword:
      example:
        dropTokens: true
        oldPassword: oldPassword
        newPassword: newPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
        dropTokens:
          type: boolean
      type: object
    SuperNovaInstanceMap:
      additionalProperties:
        $ref: '#/components/schemas/SuperNovaInstanceView'
      example:
        empty: true
      properties:
        empty:
          type: boolean
      type: object
    AddonSSOData:
      example:
        nav-data: nav-data
        id: id
        url: url
        email: email
        timestamp: 0
        token: token
      properties:
        url:
          type: string
        id:
          type: string
        timestamp:
          format: int64
          type: integer
        token:
          type: string
        email:
          type: string
        nav-data:
          type: string
      type: object
    CliTokenView:
      example:
        secret: secret
        token: token
      properties:
        token:
          type: string
        secret:
          type: string
      type: object
    MFARecoveryCode:
      example:
        code: code
      properties:
        code:
          type: string
      type: object
    WannabeMFAFav:
      example:
        favourite: true
      properties:
        favourite:
          type: boolean
      type: object
    WannabeMFACreds:
      example:
        code: code
        revokeTokens: true
      properties:
        revokeTokens:
          type: boolean
        code:
          type: string
      type: object
    OAuth1AccessTokenView:
      example:
        lastUtilisation: 6
        rights:
          manage_organisations: true
          manage_organisations_applications: true
          access_organisations_credit_count: true
          manage_personal_information: true
          manage_organisations_members: true
          almighty: true
          manage_ssh_keys: true
          access_organisations: true
          access_personal_information: true
          manage_organisations_services: true
          access_organisations_consumption_statistics: true
          access_organisations_bills: true
        creationDate: 0
        consumer:
          baseUrl: baseUrl
          rights:
            manage_organisations: true
            manage_organisations_applications: true
            access_organisations_credit_count: true
            manage_personal_information: true
            manage_organisations_members: true
            almighty: true
            manage_ssh_keys: true
            access_organisations: true
            access_personal_information: true
            manage_organisations_services: true
            access_organisations_consumption_statistics: true
            access_organisations_bills: true
          name: name
          description: description
          key: key
          url: url
          picture: picture
        token: token
      properties:
        token:
          type: string
        consumer:
          $ref: '#/components/schemas/OAuth1ConsumerView'
        creationDate:
          format: int64
          type: integer
        lastUtilisation:
          format: int64
          type: integer
        rights:
          $ref: '#/components/schemas/OAuthRightsView'
      type: object
    AddonSummary:
      example:
        providerId: providerId
        name: name
        id: id
        logoUrl: logoUrl
      properties:
        id:
          type: string
        name:
          type: string
        providerId:
          type: string
        logoUrl:
          type: string
      type: object
    ApplicationSummary:
      example:
        homogeneous: true
        variantLogoUrl: variantLogoUrl
        archived: true
        instanceType: instanceType
        name: name
        commit: commit
        id: id
        state: SHOULD_BE_UP
        variantSlug: variantSlug
        instanceVariant: instanceVariant
      properties:
        id:
          type: string
        name:
          type: string
        instanceType:
          type: string
        instanceVariant:
          type: string
        variantSlug:
          type: string
        archived:
          type: boolean
        homogeneous:
          type: boolean
        variantLogoUrl:
          type: string
        state:
          enum:
          - SHOULD_BE_UP
          - SHOULD_BE_DOWN
          - WANTS_TO_BE_UP
          - MODERATED
          - DEFAULT_OF_PAYMENT
          type: string
        commit:
          type: string
      type: object
    OAuth1ConsumerSummary:
      example:
        name: name
        key: key
        picture: picture
      properties:
        name:
          type: string
        key:
          type: string
        picture:
          type: string
      type: object
    OrganisationSummary:
      example:
        canPay: true
        role: NONE
        addons:
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        vatState: INVALID
        avatar: avatar
        emergencyNumber: emergencyNumber
        cleverEnterprise: true
        canSEPA: true
        name: name
        consumers:
        - name: name
          key: key
          picture: picture
        - name: name
          key: key
          picture: picture
        id: id
        providers:
        - name: name
          id: id
        - name: name
          id: id
        applications:
        - homogeneous: true
          variantLogoUrl: variantLogoUrl
          archived: true
          instanceType: instanceType
          name: name
          commit: commit
          id: id
          state: SHOULD_BE_UP
          variantSlug: variantSlug
          instanceVariant: instanceVariant
        - homogeneous: true
          variantLogoUrl: variantLogoUrl
          archived: true
          instanceType: instanceType
          name: name
          commit: commit
          id: id
          state: SHOULD_BE_UP
          variantSlug: variantSlug
          instanceVariant: instanceVariant
      properties:
        id:
          type: string
        name:
          type: string
        avatar:
          type: string
        applications:
          items:
            $ref: '#/components/schemas/ApplicationSummary'
          type: array
        addons:
          items:
            $ref: '#/components/schemas/AddonSummary'
          type: array
        consumers:
          items:
            $ref: '#/components/schemas/OAuth1ConsumerSummary'
          type: array
        role:
          enum:
          - NONE
          - ADMIN
          - ACCOUNTING
          - DEVELOPER
          - MANAGER
          type: string
        providers:
          items:
            $ref: '#/components/schemas/ProviderSummary'
          type: array
        vatState:
          enum:
          - INVALID
          - PENDING_VALIDATION
          - VALID
          - NOT_NEEDED
          - NOT_APPLICABLE
          type: string
        canPay:
          type: boolean
        canSEPA:
          type: boolean
        cleverEnterprise:
          type: boolean
        emergencyNumber:
          type: string
      type: object
    ProviderSummary:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    Summary:
      example:
        organisations:
        - canPay: true
          role: NONE
          addons:
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          vatState: INVALID
          avatar: avatar
          emergencyNumber: emergencyNumber
          cleverEnterprise: true
          canSEPA: true
          name: name
          consumers:
          - name: name
            key: key
            picture: picture
          - name: name
            key: key
            picture: picture
          id: id
          providers:
          - name: name
            id: id
          - name: name
            id: id
          applications:
          - homogeneous: true
            variantLogoUrl: variantLogoUrl
            archived: true
            instanceType: instanceType
            name: name
            commit: commit
            id: id
            state: SHOULD_BE_UP
            variantSlug: variantSlug
            instanceVariant: instanceVariant
          - homogeneous: true
            variantLogoUrl: variantLogoUrl
            archived: true
            instanceType: instanceType
            name: name
            commit: commit
            id: id
            state: SHOULD_BE_UP
            variantSlug: variantSlug
            instanceVariant: instanceVariant
        - canPay: true
          role: NONE
          addons:
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          vatState: INVALID
          avatar: avatar
          emergencyNumber: emergencyNumber
          cleverEnterprise: true
          canSEPA: true
          name: name
          consumers:
          - name: name
            key: key
            picture: picture
          - name: name
            key: key
            picture: picture
          id: id
          providers:
          - name: name
            id: id
          - name: name
            id: id
          applications:
          - homogeneous: true
            variantLogoUrl: variantLogoUrl
            archived: true
            instanceType: instanceType
            name: name
            commit: commit
            id: id
            state: SHOULD_BE_UP
            variantSlug: variantSlug
            instanceVariant: instanceVariant
          - homogeneous: true
            variantLogoUrl: variantLogoUrl
            archived: true
            instanceType: instanceType
            name: name
            commit: commit
            id: id
            state: SHOULD_BE_UP
            variantSlug: variantSlug
            instanceVariant: instanceVariant
        user:
          canSEPA: true
          addons:
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          - providerId: providerId
            name: name
            id: id
            logoUrl: logoUrl
          name: name
          admin: true
          consumers:
          - name: name
            key: key
            picture: picture
          - name: name
            key: key
            picture: picture
          id: id
          avatar: avatar
          lang: lang
          applications:
          - homogeneous: true
            variantLogoUrl: variantLogoUrl
            archived: true
            instanceType: instanceType
            name: name
            commit: commit
            id: id
            state: SHOULD_BE_UP
            variantSlug: variantSlug
            instanceVariant: instanceVariant
          - homogeneous: true
            variantLogoUrl: variantLogoUrl
            archived: true
            instanceType: instanceType
            name: name
            commit: commit
            id: id
            state: SHOULD_BE_UP
            variantSlug: variantSlug
            instanceVariant: instanceVariant
      properties:
        user:
          $ref: '#/components/schemas/UserSummary'
        organisations:
          items:
            $ref: '#/components/schemas/OrganisationSummary'
          type: array
      type: object
    UserSummary:
      example:
        canSEPA: true
        addons:
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        - providerId: providerId
          name: name
          id: id
          logoUrl: logoUrl
        name: name
        admin: true
        consumers:
        - name: name
          key: key
          picture: picture
        - name: name
          key: key
          picture: picture
        id: id
        avatar: avatar
        lang: lang
        applications:
        - homogeneous: true
          variantLogoUrl: variantLogoUrl
          archived: true
          instanceType: instanceType
          name: name
          commit: commit
          id: id
          state: SHOULD_BE_UP
          variantSlug: variantSlug
          instanceVariant: instanceVariant
        - homogeneous: true
          variantLogoUrl: variantLogoUrl
          archived: true
          instanceType: instanceType
          name: name
          commit: commit
          id: id
          state: SHOULD_BE_UP
          variantSlug: variantSlug
          instanceVariant: instanceVariant
      properties:
        id:
          type: string
        name:
          type: string
        avatar:
          type: string
        applications:
          items:
            $ref: '#/components/schemas/ApplicationSummary'
          type: array
        addons:
          items:
            $ref: '#/components/schemas/AddonSummary'
          type: array
        consumers:
          items:
            $ref: '#/components/schemas/OAuth1ConsumerSummary'
          type: array
        lang:
          type: string
        admin:
          type: boolean
        canSEPA:
          type: boolean
      type: object
    inline_object:
      properties:
        email:
          type: string
        pass:
          type: string
        from_authorize:
          type: string
        cli_token:
          type: string
        clever_flavor:
          type: string
        oauth_token:
          type: string
      type: object
    inline_object_1:
      properties:
        mfa_kind:
          type: string
        mfa_attempt:
          type: string
        email:
          type: string
        auth_id:
          type: string
        from_authorize:
          type: string
        cli_token:
          type: string
        clever_flavor:
          type: string
        oauth_token:
          type: string
      type: object
    inline_object_2:
      properties:
        email:
          type: string
        pass:
          type: string
        from_authorize:
          type: string
        cli_token:
          type: string
        clever_flavor:
          type: string
        oauth_token:
          type: string
      type: object
    inline_object_3:
      properties:
        mfa_kind:
          type: string
        mfa_attempt:
          type: string
        email:
          type: string
        auth_id:
          type: string
        from_authorize:
          type: string
        cli_token:
          type: string
        clever_flavor:
          type: string
        oauth_token:
          type: string
      type: object
    inline_object_4:
      properties:
        transactionId:
          type: string
        name:
          type: string
        otherId:
          type: string
        otherEmail:
          type: string
        password:
          type: string
        autoLink:
          type: string
        terms:
          type: string
        invitationKey:
          type: string
        mfa_kind:
          type: string
        mfa_attempt:
          type: string
      type: object
    inline_object_5:
      properties:
        almighty:
          type: string
        access_organisations:
          type: string
        manage_organisations:
          type: string
        manage_organisations_services:
          type: string
        manage_organisations_applications:
          type: string
        manage_organisations_members:
          type: string
        access_organisations_bills:
          type: string
        access_organisations_credit_count:
          type: string
        access_organisations_consumption_statistics:
          type: string
        access_personal_information:
          type: string
        manage_personal_information:
          type: string
        manage_ssh_keys:
          type: string
      type: object
    inline_object_6:
      properties:
        oauth_consumer_key:
          type: string
        oauth_token:
          type: string
        oauth_signature_method:
          type: string
        oauth_signature:
          type: string
        oauth_timestamp:
          type: string
        oauth_nonce:
          type: string
        oauth_version:
          type: string
        oauth_verifier:
          type: string
        oauth_callback:
          type: string
        oauth_token_secret:
          type: string
        oauth_callback_confirmed:
          type: string
      type: object
    inline_object_7:
      properties:
        oauth_consumer_key:
          type: string
        oauth_token:
          type: string
        oauth_signature_method:
          type: string
        oauth_signature:
          type: string
        oauth_timestamp:
          type: string
        oauth_nonce:
          type: string
        oauth_version:
          type: string
        oauth_verifier:
          type: string
        oauth_callback:
          type: string
        oauth_token_secret:
          type: string
        oauth_callback_confirmed:
          type: string
      type: object
    inline_object_8:
      properties:
        pass:
          type: string
        pass2:
          type: string
      type: object
    inline_object_9:
      properties:
        login:
          type: string
        drop_tokens:
          type: string
        clever_flavor:
          type: string
      type: object
    inline_object_10:
      properties:
        invitationKey:
          type: string
        addonBetaInvitationKey:
          type: string
        email:
          type: string
        pass:
          type: string
        url_next:
          type: string
        terms:
          type: string
        subscription_source:
          type: string
        clever_flavor:
          type: string
        oauth_token:
          type: string
      type: object
