/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeMFAFav struct for WannabeMFAFav
type WannabeMFAFav struct {
	Favourite *bool `json:"favourite,omitempty"`
}

// NewWannabeMFAFav instantiates a new WannabeMFAFav object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeMFAFav() *WannabeMFAFav {
	this := WannabeMFAFav{}
	return &this
}

// NewWannabeMFAFavWithDefaults instantiates a new WannabeMFAFav object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeMFAFavWithDefaults() *WannabeMFAFav {
	this := WannabeMFAFav{}
	return &this
}

// GetFavourite returns the Favourite field value if set, zero value otherwise.
func (o *WannabeMFAFav) GetFavourite() bool {
	if o == nil || o.Favourite == nil {
		var ret bool
		return ret
	}
	return *o.Favourite
}

// GetFavouriteOk returns a tuple with the Favourite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeMFAFav) GetFavouriteOk() (*bool, bool) {
	if o == nil || o.Favourite == nil {
		return nil, false
	}
	return o.Favourite, true
}

// HasFavourite returns a boolean if a field has been set.
func (o *WannabeMFAFav) HasFavourite() bool {
	if o != nil && o.Favourite != nil {
		return true
	}

	return false
}

// SetFavourite gets a reference to the given bool and assigns it to the Favourite field.
func (o *WannabeMFAFav) SetFavourite(v bool) {
	o.Favourite = &v
}

func (o WannabeMFAFav) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Favourite != nil {
		toSerialize["favourite"] = o.Favourite
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeMFAFav struct {
	value *WannabeMFAFav
	isSet bool
}

func (v NullableWannabeMFAFav) Get() *WannabeMFAFav {
	return v.value
}

func (v *NullableWannabeMFAFav) Set(val *WannabeMFAFav) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeMFAFav) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeMFAFav) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeMFAFav(val *WannabeMFAFav) *NullableWannabeMFAFav {
	return &NullableWannabeMFAFav{value: val, isSet: true}
}

func (v NullableWannabeMFAFav) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeMFAFav) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
