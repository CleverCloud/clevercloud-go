/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeAddonPlan struct for WannabeAddonPlan
type WannabeAddonPlan struct {
	Name     *string                     `json:"name,omitempty"`
	Slug     *string                     `json:"slug,omitempty"`
	Price    *float32                    `json:"price,omitempty"`
	Features *[]AddonFeatureInstanceView `json:"features,omitempty"`
}

// NewWannabeAddonPlan instantiates a new WannabeAddonPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeAddonPlan() *WannabeAddonPlan {
	this := WannabeAddonPlan{}
	return &this
}

// NewWannabeAddonPlanWithDefaults instantiates a new WannabeAddonPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeAddonPlanWithDefaults() *WannabeAddonPlan {
	this := WannabeAddonPlan{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WannabeAddonPlan) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonPlan) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WannabeAddonPlan) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WannabeAddonPlan) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *WannabeAddonPlan) GetSlug() string {
	if o == nil || o.Slug == nil {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonPlan) GetSlugOk() (*string, bool) {
	if o == nil || o.Slug == nil {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *WannabeAddonPlan) HasSlug() bool {
	if o != nil && o.Slug != nil {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *WannabeAddonPlan) SetSlug(v string) {
	o.Slug = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *WannabeAddonPlan) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonPlan) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *WannabeAddonPlan) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *WannabeAddonPlan) SetPrice(v float32) {
	o.Price = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *WannabeAddonPlan) GetFeatures() []AddonFeatureInstanceView {
	if o == nil || o.Features == nil {
		var ret []AddonFeatureInstanceView
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonPlan) GetFeaturesOk() (*[]AddonFeatureInstanceView, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *WannabeAddonPlan) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []AddonFeatureInstanceView and assigns it to the Features field.
func (o *WannabeAddonPlan) SetFeatures(v []AddonFeatureInstanceView) {
	o.Features = &v
}

func (o WannabeAddonPlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Slug != nil {
		toSerialize["slug"] = o.Slug
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeAddonPlan struct {
	value *WannabeAddonPlan
	isSet bool
}

func (v NullableWannabeAddonPlan) Get() *WannabeAddonPlan {
	return v.value
}

func (v *NullableWannabeAddonPlan) Set(val *WannabeAddonPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeAddonPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeAddonPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeAddonPlan(val *WannabeAddonPlan) *NullableWannabeAddonPlan {
	return &NullableWannabeAddonPlan{value: val, isSet: true}
}

func (v NullableWannabeAddonPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeAddonPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
