/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeInterAddonProvision struct for WannabeInterAddonProvision
type WannabeInterAddonProvision struct {
	OrganisationId *string            `json:"organisationId,omitempty"`
	UserId         *string            `json:"userId,omitempty"`
	ProviderId     *string            `json:"providerId,omitempty"`
	AddonId        *string            `json:"addonId,omitempty"`
	Plan           *string            `json:"plan,omitempty"`
	Name           *string            `json:"name,omitempty"`
	Region         *string            `json:"region,omitempty"`
	Options        *map[string]string `json:"options,omitempty"`
}

// NewWannabeInterAddonProvision instantiates a new WannabeInterAddonProvision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeInterAddonProvision() *WannabeInterAddonProvision {
	this := WannabeInterAddonProvision{}
	return &this
}

// NewWannabeInterAddonProvisionWithDefaults instantiates a new WannabeInterAddonProvision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeInterAddonProvisionWithDefaults() *WannabeInterAddonProvision {
	this := WannabeInterAddonProvision{}
	return &this
}

// GetOrganisationId returns the OrganisationId field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetOrganisationId() string {
	if o == nil || o.OrganisationId == nil {
		var ret string
		return ret
	}
	return *o.OrganisationId
}

// GetOrganisationIdOk returns a tuple with the OrganisationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetOrganisationIdOk() (*string, bool) {
	if o == nil || o.OrganisationId == nil {
		return nil, false
	}
	return o.OrganisationId, true
}

// HasOrganisationId returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasOrganisationId() bool {
	if o != nil && o.OrganisationId != nil {
		return true
	}

	return false
}

// SetOrganisationId gets a reference to the given string and assigns it to the OrganisationId field.
func (o *WannabeInterAddonProvision) SetOrganisationId(v string) {
	o.OrganisationId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *WannabeInterAddonProvision) SetUserId(v string) {
	o.UserId = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *WannabeInterAddonProvision) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetAddonId returns the AddonId field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetAddonId() string {
	if o == nil || o.AddonId == nil {
		var ret string
		return ret
	}
	return *o.AddonId
}

// GetAddonIdOk returns a tuple with the AddonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetAddonIdOk() (*string, bool) {
	if o == nil || o.AddonId == nil {
		return nil, false
	}
	return o.AddonId, true
}

// HasAddonId returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasAddonId() bool {
	if o != nil && o.AddonId != nil {
		return true
	}

	return false
}

// SetAddonId gets a reference to the given string and assigns it to the AddonId field.
func (o *WannabeInterAddonProvision) SetAddonId(v string) {
	o.AddonId = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetPlan() string {
	if o == nil || o.Plan == nil {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetPlanOk() (*string, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *WannabeInterAddonProvision) SetPlan(v string) {
	o.Plan = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WannabeInterAddonProvision) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *WannabeInterAddonProvision) SetRegion(v string) {
	o.Region = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *WannabeInterAddonProvision) GetOptions() map[string]string {
	if o == nil || o.Options == nil {
		var ret map[string]string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeInterAddonProvision) GetOptionsOk() (*map[string]string, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *WannabeInterAddonProvision) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given map[string]string and assigns it to the Options field.
func (o *WannabeInterAddonProvision) SetOptions(v map[string]string) {
	o.Options = &v
}

func (o WannabeInterAddonProvision) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrganisationId != nil {
		toSerialize["organisationId"] = o.OrganisationId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.ProviderId != nil {
		toSerialize["providerId"] = o.ProviderId
	}
	if o.AddonId != nil {
		toSerialize["addonId"] = o.AddonId
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeInterAddonProvision struct {
	value *WannabeInterAddonProvision
	isSet bool
}

func (v NullableWannabeInterAddonProvision) Get() *WannabeInterAddonProvision {
	return v.value
}

func (v *NullableWannabeInterAddonProvision) Set(val *WannabeInterAddonProvision) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeInterAddonProvision) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeInterAddonProvision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeInterAddonProvision(val *WannabeInterAddonProvision) *NullableWannabeInterAddonProvision {
	return &NullableWannabeInterAddonProvision{value: val, isSet: true}
}

func (v NullableWannabeInterAddonProvision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeInterAddonProvision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
