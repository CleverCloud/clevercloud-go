/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// WannabeAddonProviderAPIUrl struct for WannabeAddonProviderAPIUrl
type WannabeAddonProviderAPIUrl struct {
	BaseUrl *string `json:"base_url,omitempty"`
	SsoUrl  *string `json:"sso_url,omitempty"`
}

// NewWannabeAddonProviderAPIUrl instantiates a new WannabeAddonProviderAPIUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWannabeAddonProviderAPIUrl() *WannabeAddonProviderAPIUrl {
	this := WannabeAddonProviderAPIUrl{}
	return &this
}

// NewWannabeAddonProviderAPIUrlWithDefaults instantiates a new WannabeAddonProviderAPIUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWannabeAddonProviderAPIUrlWithDefaults() *WannabeAddonProviderAPIUrl {
	this := WannabeAddonProviderAPIUrl{}
	return &this
}

// GetBaseUrl returns the BaseUrl field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPIUrl) GetBaseUrl() string {
	if o == nil || o.BaseUrl == nil {
		var ret string
		return ret
	}
	return *o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPIUrl) GetBaseUrlOk() (*string, bool) {
	if o == nil || o.BaseUrl == nil {
		return nil, false
	}
	return o.BaseUrl, true
}

// HasBaseUrl returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPIUrl) HasBaseUrl() bool {
	if o != nil && o.BaseUrl != nil {
		return true
	}

	return false
}

// SetBaseUrl gets a reference to the given string and assigns it to the BaseUrl field.
func (o *WannabeAddonProviderAPIUrl) SetBaseUrl(v string) {
	o.BaseUrl = &v
}

// GetSsoUrl returns the SsoUrl field value if set, zero value otherwise.
func (o *WannabeAddonProviderAPIUrl) GetSsoUrl() string {
	if o == nil || o.SsoUrl == nil {
		var ret string
		return ret
	}
	return *o.SsoUrl
}

// GetSsoUrlOk returns a tuple with the SsoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WannabeAddonProviderAPIUrl) GetSsoUrlOk() (*string, bool) {
	if o == nil || o.SsoUrl == nil {
		return nil, false
	}
	return o.SsoUrl, true
}

// HasSsoUrl returns a boolean if a field has been set.
func (o *WannabeAddonProviderAPIUrl) HasSsoUrl() bool {
	if o != nil && o.SsoUrl != nil {
		return true
	}

	return false
}

// SetSsoUrl gets a reference to the given string and assigns it to the SsoUrl field.
func (o *WannabeAddonProviderAPIUrl) SetSsoUrl(v string) {
	o.SsoUrl = &v
}

func (o WannabeAddonProviderAPIUrl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BaseUrl != nil {
		toSerialize["base_url"] = o.BaseUrl
	}
	if o.SsoUrl != nil {
		toSerialize["sso_url"] = o.SsoUrl
	}
	return json.Marshal(toSerialize)
}

type NullableWannabeAddonProviderAPIUrl struct {
	value *WannabeAddonProviderAPIUrl
	isSet bool
}

func (v NullableWannabeAddonProviderAPIUrl) Get() *WannabeAddonProviderAPIUrl {
	return v.value
}

func (v *NullableWannabeAddonProviderAPIUrl) Set(val *WannabeAddonProviderAPIUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableWannabeAddonProviderAPIUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableWannabeAddonProviderAPIUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWannabeAddonProviderAPIUrl(val *WannabeAddonProviderAPIUrl) *NullableWannabeAddonProviderAPIUrl {
	return &NullableWannabeAddonProviderAPIUrl{value: val, isSet: true}
}

func (v NullableWannabeAddonProviderAPIUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWannabeAddonProviderAPIUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
