/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// PaymentProviderView struct for PaymentProviderView
type PaymentProviderView struct {
	Name       *string `json:"name,omitempty"`
	ImgUrl     *string `json:"imgUrl,omitempty"`
	Title      *string `json:"title,omitempty"`
	ComingSoon *bool   `json:"comingSoon,omitempty"`
}

// NewPaymentProviderView instantiates a new PaymentProviderView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentProviderView() *PaymentProviderView {
	this := PaymentProviderView{}
	return &this
}

// NewPaymentProviderViewWithDefaults instantiates a new PaymentProviderView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentProviderViewWithDefaults() *PaymentProviderView {
	this := PaymentProviderView{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PaymentProviderView) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProviderView) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PaymentProviderView) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PaymentProviderView) SetName(v string) {
	o.Name = &v
}

// GetImgUrl returns the ImgUrl field value if set, zero value otherwise.
func (o *PaymentProviderView) GetImgUrl() string {
	if o == nil || o.ImgUrl == nil {
		var ret string
		return ret
	}
	return *o.ImgUrl
}

// GetImgUrlOk returns a tuple with the ImgUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProviderView) GetImgUrlOk() (*string, bool) {
	if o == nil || o.ImgUrl == nil {
		return nil, false
	}
	return o.ImgUrl, true
}

// HasImgUrl returns a boolean if a field has been set.
func (o *PaymentProviderView) HasImgUrl() bool {
	if o != nil && o.ImgUrl != nil {
		return true
	}

	return false
}

// SetImgUrl gets a reference to the given string and assigns it to the ImgUrl field.
func (o *PaymentProviderView) SetImgUrl(v string) {
	o.ImgUrl = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PaymentProviderView) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProviderView) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PaymentProviderView) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PaymentProviderView) SetTitle(v string) {
	o.Title = &v
}

// GetComingSoon returns the ComingSoon field value if set, zero value otherwise.
func (o *PaymentProviderView) GetComingSoon() bool {
	if o == nil || o.ComingSoon == nil {
		var ret bool
		return ret
	}
	return *o.ComingSoon
}

// GetComingSoonOk returns a tuple with the ComingSoon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentProviderView) GetComingSoonOk() (*bool, bool) {
	if o == nil || o.ComingSoon == nil {
		return nil, false
	}
	return o.ComingSoon, true
}

// HasComingSoon returns a boolean if a field has been set.
func (o *PaymentProviderView) HasComingSoon() bool {
	if o != nil && o.ComingSoon != nil {
		return true
	}

	return false
}

// SetComingSoon gets a reference to the given bool and assigns it to the ComingSoon field.
func (o *PaymentProviderView) SetComingSoon(v bool) {
	o.ComingSoon = &v
}

func (o PaymentProviderView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ImgUrl != nil {
		toSerialize["imgUrl"] = o.ImgUrl
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.ComingSoon != nil {
		toSerialize["comingSoon"] = o.ComingSoon
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentProviderView struct {
	value *PaymentProviderView
	isSet bool
}

func (v NullablePaymentProviderView) Get() *PaymentProviderView {
	return v.value
}

func (v *NullablePaymentProviderView) Set(val *PaymentProviderView) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentProviderView) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentProviderView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentProviderView(val *PaymentProviderView) *NullablePaymentProviderView {
	return &NullablePaymentProviderView{value: val, isSet: true}
}

func (v NullablePaymentProviderView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentProviderView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
