/*
 * Clever-Cloud API
 *
 * Public API for managing Clever-Cloud data and products
 *
 * API version: 1.0.1
 * Contact: support@clever-cloud.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clevercloud

import (
	"encoding/json"
)

// StripeConfirmationErrorMessage struct for StripeConfirmationErrorMessage
type StripeConfirmationErrorMessage struct {
	Id            *int32           `json:"id,omitempty"`
	Message       *string          `json:"message,omitempty"`
	Type          *string          `json:"type,omitempty"`
	PaymentIntent *SetupIntentView `json:"paymentIntent,omitempty"`
}

// NewStripeConfirmationErrorMessage instantiates a new StripeConfirmationErrorMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeConfirmationErrorMessage() *StripeConfirmationErrorMessage {
	this := StripeConfirmationErrorMessage{}
	return &this
}

// NewStripeConfirmationErrorMessageWithDefaults instantiates a new StripeConfirmationErrorMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeConfirmationErrorMessageWithDefaults() *StripeConfirmationErrorMessage {
	this := StripeConfirmationErrorMessage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StripeConfirmationErrorMessage) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeConfirmationErrorMessage) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StripeConfirmationErrorMessage) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *StripeConfirmationErrorMessage) SetId(v int32) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *StripeConfirmationErrorMessage) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeConfirmationErrorMessage) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *StripeConfirmationErrorMessage) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *StripeConfirmationErrorMessage) SetMessage(v string) {
	o.Message = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StripeConfirmationErrorMessage) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeConfirmationErrorMessage) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StripeConfirmationErrorMessage) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StripeConfirmationErrorMessage) SetType(v string) {
	o.Type = &v
}

// GetPaymentIntent returns the PaymentIntent field value if set, zero value otherwise.
func (o *StripeConfirmationErrorMessage) GetPaymentIntent() SetupIntentView {
	if o == nil || o.PaymentIntent == nil {
		var ret SetupIntentView
		return ret
	}
	return *o.PaymentIntent
}

// GetPaymentIntentOk returns a tuple with the PaymentIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeConfirmationErrorMessage) GetPaymentIntentOk() (*SetupIntentView, bool) {
	if o == nil || o.PaymentIntent == nil {
		return nil, false
	}
	return o.PaymentIntent, true
}

// HasPaymentIntent returns a boolean if a field has been set.
func (o *StripeConfirmationErrorMessage) HasPaymentIntent() bool {
	if o != nil && o.PaymentIntent != nil {
		return true
	}

	return false
}

// SetPaymentIntent gets a reference to the given SetupIntentView and assigns it to the PaymentIntent field.
func (o *StripeConfirmationErrorMessage) SetPaymentIntent(v SetupIntentView) {
	o.PaymentIntent = &v
}

func (o StripeConfirmationErrorMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.PaymentIntent != nil {
		toSerialize["paymentIntent"] = o.PaymentIntent
	}
	return json.Marshal(toSerialize)
}

type NullableStripeConfirmationErrorMessage struct {
	value *StripeConfirmationErrorMessage
	isSet bool
}

func (v NullableStripeConfirmationErrorMessage) Get() *StripeConfirmationErrorMessage {
	return v.value
}

func (v *NullableStripeConfirmationErrorMessage) Set(val *StripeConfirmationErrorMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeConfirmationErrorMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeConfirmationErrorMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeConfirmationErrorMessage(val *StripeConfirmationErrorMessage) *NullableStripeConfirmationErrorMessage {
	return &NullableStripeConfirmationErrorMessage{value: val, isSet: true}
}

func (v NullableStripeConfirmationErrorMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeConfirmationErrorMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
